openapi: 3.0.0
info:
  description: This is the OpenAPI definition for TilliT DO
  version: 1.0.0
  title: Tilit API
  contact:
    email: support@gotillit.com
tags:
  - name: TilliT
paths:
  /translations:
    get:
      tags:
        - translations
      summary: Get a translation file
      description: ''
      operationId: getTranslations
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema: {}
      security:
        - authorization: []
          apiKeyAuth: []
    post:
      tags:
        - translations
      summary: Save a translations file
      description: ''
      operationId: translations
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema: {}
      security:
        - authorization: []
          apiKeyAuth: []
  /core/search:
    get:
      tags:
        - Search
      summary: Search for assets, orders, events or activities
      description: ''
      operationId: search
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResult'
      security:
        - authorization: []
          apiKeyAuth: []
  /tenant/user:
    get:
      tags:
        - user
      summary: Get all users
      description: ''
      operationId: getAllUsers
      responses:
        '200':
          description: Successful operation
          headers:
            x-pagination-token:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
      security:
        - authorization: []
          apiKeyAuth: []
    post:
      tags:
        - user
      summary: Create a user
      description: ''
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
        description: Details of the user to be created
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /tenant/user/me:
    get:
      tags:
        - user
      summary: Get a user
      description: Get a user
      operationId: getCurrentUser
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      security:
        - authorization: []
          apiKeyAuth: []
  /tenant/user/{username}:
    get:
      tags:
        - user
      summary: Get a user
      description: Get a user
      operationId: getUser
      parameters:
        - in: path
          name: username
          required: true
          description: Username of the user to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      security:
        - authorization: []
          apiKeyAuth: []
    put:
      tags:
        - user
      summary: Update a user
      description: ''
      operationId: updateUser
      parameters:
        - in: path
          name: username
          required: true
          description: username of the user to update
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
        description: Details of the user to be created
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
    delete:
      tags:
        - user
      summary: Delete a user
      description: ''
      operationId: deleteUser
      parameters:
        - in: path
          name: username
          required: true
          description: username of the user to retrieve
          schema:
            type: string
      responses:
        '204':
          description: Successful operation
      security:
        - authorization: []
          apiKeyAuth: []
  /tenant/user/id/{id}:
    get:
      tags:
        - user
      summary: Get a user by id
      description: Get a user by id
      operationId: getUserById
      parameters:
        - in: path
          name: id
          required: true
          description: Id of the user to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      security:
        - authorization: []
          apiKeyAuth: []
  /tenant/user/id/{id}/full-name:
    get:
      tags:
        - user
      summary: Get a Full Name by id
      description: Get a users Full Name by id
      operationId: getFullNameById
      parameters:
        - in: path
          name: id
          required: true
          description: Id of the user to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: string
      security:
        - authorization: []
          apiKeyAuth: []
  /tenant/user-group:
    get:
      tags:
        - userGroup
      summary: Get all UserGroups
      description: ''
      operationId: getAllUserGroups
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserGroup'
      security:
        - authorization: []
          apiKeyAuth: []
    post:
      tags:
        - userGroup
      summary: Create a UserGroup
      description: ''
      operationId: createUserGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserGroupRequest'
        description: Details of the UserGroup to be created
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroup'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /tenant/user-group/{name}:
    get:
      tags:
        - userGroup
      summary: Get a user group
      description: Get a user group
      operationId: getUserGroup
      parameters:
        - in: path
          name: name
          required: true
          description: Name of the user group to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroup'
      security:
        - authorization: []
          apiKeyAuth: []
    put:
      tags:
        - userGroup
      summary: Update a UserGroup
      description: ''
      operationId: updateUserGroup
      parameters:
        - in: path
          name: name
          required: true
          description: name of the UserGroup to update
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserGroupRequest'
        description: Details of the UserGroup to be created
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroup'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
    delete:
      tags:
        - userGroup
      summary: Delete a UserGroup
      description: ''
      operationId: deleteUserGroup
      parameters:
        - in: path
          name: name
          required: true
          description: name of the UserGroup to retrieve
          schema:
            type: string
      responses:
        '204':
          description: Successful operation
      security:
        - authorization: []
          apiKeyAuth: []
  /tenant/identity-provider:
    get:
      tags:
        - identityProvider
      summary: Get all Identity Providers
      description: ''
      operationId: getAllIdentityProviders
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IdentityProvider'
      security:
        - authorization: []
          apiKeyAuth: []
    post:
      tags:
        - identityProvider
      summary: Create an IdentityProvider
      description: ''
      operationId: createIdentityProvider
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityProviderRequest'
        description: Details of the IdentityProvider to be created
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProvider'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /tenant/identity-provider/{name}:
    get:
      tags:
        - identityProvider
      summary: Get an identity provider
      description: Get an identity provider
      operationId: getIdentityProvider
      parameters:
        - in: path
          name: name
          required: true
          description: Name of the identity provider to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProvider'
      security:
        - authorization: []
          apiKeyAuth: []
    put:
      tags:
        - identityProvider
      summary: Update an IdentityProvider
      description: ''
      operationId: updateIdentityProvider
      parameters:
        - in: path
          name: name
          required: true
          description: name of the IdentityProvider to update
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityProviderRequest'
        description: Details of the IdentityProvider to be updated
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProvider'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
    delete:
      tags:
        - identityProvider
      summary: Delete an IdentityProvider
      description: ''
      operationId: deleteIdentityProvider
      parameters:
        - in: path
          name: name
          required: true
          description: name of the IdentityProvider to delete
          schema:
            type: string
      responses:
        '204':
          description: Successful operation
      security:
        - authorization: []
          apiKeyAuth: []
  /tenant/tenants/{name}:
    get:
      description: ''
      parameters:
        - in: path
          name: name
          required: true
          description: The name of the tenant
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: {}
  /tenant/feature-flag:
    get:
      tags:
        - getFeatureFlag
      summary: Get feature flags
      description: ''
      operationId: getFeatureFlags
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid format
      security:
        - authorization: []
  /tenant/feature-flag/restore:
    post:
      tags:
        - restoreFeatureFlag
      summary: Restore feature flags to default
      description: ''
      operationId: restoreFeatureFlags
      responses:
        '201':
          description: Successful operation
        '400':
          description: Invalid format
      security:
        - authorization: []
  /tenant/feature-flag/{name}:
    post:
      tags:
        - toggleFeatureFlag
      summary: Toggle feature flag
      description: ''
      operationId: toggleFeatureFlag
      parameters:
        - in: path
          name: name
          required: true
          description: The name of feature
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                state:
                  type: boolean
                  nullable: false
        description: State to turn feature flag to
        required: true
      responses:
        '201':
          description: Successful operation
        '400':
          description: Invalid format
      security:
        - authorization: []
  /tenant/stripe/subscription/{id}:
    get:
      parameters:
        - in: path
          name: id
          required: true
          description: The id of the subscription
          schema:
            type: number
      tags:
        - stripe subscription
      summary: Get a specific stripe subscription for Tenant
      description: ''
      operationId: getStripeSubscription
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StripeSubscription'
        '400':
          description: Invalid operation
      security:
        - authorization: []
          apiKeyAuth: []
  /core/audit-entity:
    get:
      tags:
        - audit
      summary: Get all Audit Log
      description: ''
      operationId: getAllAuditLog
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditLog'
      security:
        - authorization: []
          apiKeyAuth: []
  /core/audit-entity/{entityName}/count:
    get:
      tags:
        - audit
      summary: Get the number of audit records
      description: ''
      operationId: getAuditCountRecord
      parameters:
        - in: path
          name: entityName
          required: true
          description: The name of the entity
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema: {}
      security:
        - authorization: []
          apiKeyAuth: []
  /core/audit-entity/{entityName}/{id}:
    get:
      tags:
        - audit
      summary: Get the list of audit records
      description: ''
      operationId: getAuditRecords
      parameters:
        - in: path
          name: entityName
          required: true
          description: The name of the entity
          schema:
            type: string
        - in: path
          name: id
          required: true
          description: ID of the Entity to retrieve the list of audit trail
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditLog'
      security:
        - authorization: []
          apiKeyAuth: []
  /activity/activity-manager/active-templates:
    post:
      tags:
        - ActivityManager
      summary: Get Active Activities
      description: ''
      operationId: getActiveActivities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityTemplate'
        description: List the Activity Templates that are available for a given asset and or order
        required: true
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /activity/activity-reports/summary:
    post:
      tags:
        - ActivityReport
      summary: Get Activity Report Summary
      description: ''
      operationId: getActivityReportSummary
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivitySummaryRequest'
        description: List the Activity Templates that are available for a given asset and or order
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActivityReportSummary'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /core/production-report:
    post:
      tags:
        - ProductionReport
      summary: Get Report Report Summary
      description: ''
      operationId: getReportReportSummary
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductionReportRequest'
        description: Returns the Production report data based on an input request
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductionReportSummary'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /activity/activity-manager/claim:
    post:
      tags:
        - ActivityManager
      summary: Claims an Activity
      description: ''
      operationId: claimActivity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClaimActivityRequest'
        description: Details of the required information to claim an activity
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityInstance'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /activity/activity-manager/unclaim:
    post:
      tags:
        - ActivityManager
      summary: Unclaims an Activity
      description: ''
      operationId: unclaimActivity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClaimActivityRequest'
        description: Details of the required information to claim an activity
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityInstance'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /activity/activity-manager/submit:
    post:
      tags:
        - ActivityManager
      summary: Submit an Activity
      description: ''
      operationId: submitActivity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitActivityRequest'
        description: Details of the required information to submit an activity
        required: true
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /activity/activity-manager/save:
    post:
      tags:
        - ActivityManager
      summary: Save an Activity
      description: ''
      operationId: saveActivity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitActivityRequest'
        description: Details of the required information to save an activity
        required: true
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /activity/activity-manager/form/{id}:
    get:
      tags:
        - ActivityManager
      summary: Get activity instance form
      description: ''
      operationId: getActivityInstanceForm
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the ActivityInstance to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityInstanceForm'
      security:
        - authorization: []
          apiKeyAuth: []
  /activity/activity-manager/preview-form/{templateId}:
    get:
      tags:
        - ActivityManager
      summary: Get activity instance form
      description: ''
      operationId: getActivityInstanceFormPreview
      parameters:
        - in: path
          name: templateId
          required: true
          description: ID of the Activity Template
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityInstanceForm'
      security:
        - authorization: []
          apiKeyAuth: []
  /activity/activity-manager/preview-form/{templateId}/{orderId}:
    get:
      tags:
        - ActivityManager
      summary: Get activity instance form
      description: ''
      operationId: getActivityInstanceFormPreviewWithOrder
      parameters:
        - in: path
          name: templateId
          required: true
          description: ID of the Activity Template
          schema:
            type: number
        - in: path
          name: orderId
          required: true
          description: ID of the Order Instance
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityInstanceForm'
      security:
        - authorization: []
          apiKeyAuth: []
  /activity/activity-manager/start:
    post:
      tags:
        - ActivityManager
      summary: Manually Start an Activity
      description: ''
      operationId: startActivity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartActivityRequest'
        description: Details of the required information to start an activity
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityInstance'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /activity/activity-manager/activity-stats:
    get:
      tags:
        - ActivityManager
      summary: Get Activity Stats for the order or asset
      description: ''
      operationId: getActivityStats
      parameters:
        - in: query
          name: assetId
          required: false
          description: ID of the Asset
          schema:
            type: number
        - in: query
          name: orderId
          required: false
          description: ID of the ORder
          schema:
            type: number
        - in: query
          name: orderDate
          required: true
          description: The order date
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityStats'
      security:
        - authorization: []
          apiKeyAuth: []
  /activity/activity-manager/validate-component:
    get:
      tags:
        - ActivityManager
      summary: Get Activity Stats for the order or asset
      description: ''
      operationId: validateComponent
      parameters:
        - in: query
          name: materialId
          required: false
          description: ID of the Asset
          schema:
            type: number
        - in: query
          name: orderId
          required: false
          description: ID of the Order
          schema:
            type: number
        - in: query
          name: externalId
          required: true
          description: The external reference of the component
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaterialCheckResultDto'
      security:
        - authorization: []
          apiKeyAuth: []
  /activity/activity-manager/latest-results:
    get:
      tags:
        - ActivityManager
      summary: Get Latest results from activity instances
      description: ''
      operationId: getActivityLatestResults
      parameters:
        - in: query
          name: assetId
          required: false
          description: ID of the Asset
          schema:
            type: number
        - in: query
          name: orderId
          required: false
          description: ID of the ORder
          schema:
            type: number
        - in: query
          name: materialId
          required: false
          description: ID of the Material for filtering
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LatestResult'
      security:
        - authorization: []
          apiKeyAuth: []
  /activity/activity-manager/activity-results:
    get:
      tags:
        - ActivityManager
      summary: Get a list of activity results
      description: ''
      operationId: getActivityResultsList
      parameters:
        - in: query
          name: processVariableId
          required: true
          description: ID of the Process Variable Id
          schema:
            type: number
        - in: query
          name: assetId
          required: false
          description: ID of the Asset
          schema:
            type: number
        - in: query
          name: orderId
          required: false
          description: ID of the ORder
          schema:
            type: number
        - in: query
          name: materialId
          required: false
          description: ID of the Material for filtering
          schema:
            type: number
        - in: query
          name: count
          required: false
          description: The maximum number of points to read
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LatestResult'
      security:
        - authorization: []
          apiKeyAuth: []
  /core/order-manager/{id}/list-attributes:
    get:
      tags:
        - OrderManager
      summary: Get all active attributes for a given order
      description: ''
      operationId: orderAttributeList
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the Order Instance
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AttributeValue'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /core/order-manager/ready:
    post:
      tags:
        - OrderManager
      summary: Manually Start an Order
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderStats'
        description: Details of the Order to created
        required: true
      operationId: readyOrder
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderInstance'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /core/order-manager/changeover:
    post:
      tags:
        - OrderManager
      summary: Begin changeover
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderStats'
        description: Details of the Order to start changeover
        required: true
      operationId: changeoverOrder
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderInstance'
        '400':
          description: Invalid format
      security:
        - authorization: []
  /core/order-manager/start:
    post:
      tags:
        - OrderManager
      summary: Start an Order
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderStats'
        description: Details of the Site to be created
        required: true
      operationId: startOrder
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderInstance'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /core/order-manager/suspend:
    post:
      tags:
        - OrderManager
      summary: Suspend an order
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderStats'
        description: Details of the Site to be created
        required: true
      operationId: suspendOrder
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderInstance'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /core/order-manager/cancel:
    post:
      tags:
        - OrderManager
      summary: Cancel an order
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderStats'
        description: Details of the Site to be created
        required: true
      operationId: cancelOrder
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderInstance'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /core/order-manager/resume:
    post:
      tags:
        - OrderManager
      summary: Resume an order
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderStats'
        description: Details of the Site to be created
        required: true
      operationId: resumeOrder
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderInstance'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /core/order-manager/complete:
    post:
      tags:
        - OrderManager
      summary: Mark order as completed
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderStats'
        description: Details of the Site to be created
        required: true
      operationId: completeOrder
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderInstance'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /core/asset-classes:
    get:
      tags:
        - assetClass
      summary: Get all AssetClass
      description: ''
      operationId: getAllAssetClass
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssetClass'
      security:
        - authorization: []
          apiKeyAuth: []
    post:
      tags:
        - assetClass
      summary: Create an AssetClass
      description: ''
      operationId: createAssetClass
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetClass'
        description: Details of the AssetClass to be created
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetClass'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /core/asset-classes/{id}:
    get:
      tags:
        - assetClass
      summary: Get a specific AssetClass
      description: ''
      operationId: getAssetClass
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the AssetClass to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetClass'
      security:
        - authorization: []
          apiKeyAuth: []
    put:
      tags:
        - assetClass
      summary: Update an AssetClass
      description: ''
      operationId: updateAssetClass
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the AssetClass to update
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetClass'
        description: Details of the AssetClass to be created
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetClass'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
    delete:
      tags:
        - assetClass
      summary: Delete an AssetClass
      description: ''
      operationId: deleteAssetClass
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the AssetClass to retrieve
          schema:
            type: number
      responses:
        '204':
          description: Successful operation
      security:
        - authorization: []
          apiKeyAuth: []
  /edge/edges/publish-config:
    post:
      tags:
        - edge
      summary: Publishes the config to the edge
      description: ''
      operationId: publishConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edge'
        description: Details of the Edge to have the config published
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edge'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /edge/edges:
    get:
      tags:
        - edge
      summary: Get all Edge
      description: ''
      operationId: getAllEdge
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Edge'
      security:
        - authorization: []
          apiKeyAuth: []
    post:
      tags:
        - edge
      summary: Create an Edge
      description: ''
      operationId: createEdge
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edge'
        description: Details of the Edge to be created
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edge'
        '400':
          description: Invalid format
        '500':
          description: Internal Error
      security:
        - authorization: []
          apiKeyAuth: []
  /edge/edges/{id}:
    get:
      tags:
        - edge
      summary: Get a specific Edge
      description: ''
      operationId: getEdge
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the Edge to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edge'
      security:
        - authorization: []
          apiKeyAuth: []
    put:
      tags:
        - edge
      summary: Update an Edge
      description: ''
      operationId: updateEdge
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the Edge to update
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edge'
        description: Details of the Edge to be created
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edge'
        '400':
          description: Invalid format
        '500':
          description: Internal Error
      security:
        - authorization: []
          apiKeyAuth: []
    delete:
      tags:
        - edge
      summary: Delete an Edge
      description: ''
      operationId: deleteEdge
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the Edge to retrieve
          schema:
            type: number
      responses:
        '204':
          description: Successful operation
      security:
        - authorization: []
          apiKeyAuth: []
  /edge/edges/{id}/last-values:
    get:
      tags:
        - edge
      summary: Get all last values for specific Edge
      description: ''
      operationId: getEdgeLastValues
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the Edge to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
      security:
        - authorization: []
          apiKeyAuth: []
  /edge/edges/{id}/logs:
    get:
      tags:
        - edge
      summary: Get logs for specific Edge
      description: ''
      operationId: getEdgeLogs
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the Edge to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
      security:
        - authorization: []
  /edge/edges/{id}/files:
    get:
      tags:
        - edge
      summary: Get files for specific Edge
      description: ''
      operationId: getEdgeFiles
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the Edge to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
      security:
        - authorization: []
  /edge/edge-triggers:
    get:
      tags:
        - edgeTrigger
      summary: Get all EdgeTrigger
      description: ''
      operationId: getAllEdgeTrigger
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EdgeTrigger'
      security:
        - authorization: []
          apiKeyAuth: []
    post:
      tags:
        - edgeTrigger
      summary: Create an EdgeTrigger
      description: ''
      operationId: createEdgeTrigger
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EdgeTrigger'
        description: Details of the EdgeTrigger to be created
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdgeTrigger'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /edge/edge-triggers/{id}:
    get:
      tags:
        - edgeTrigger
      summary: Get a specific EdgeTrigger
      description: ''
      operationId: getEdgeTrigger
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the EdgeTrigger to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdgeTrigger'
      security:
        - authorization: []
          apiKeyAuth: []
    put:
      tags:
        - edgeTrigger
      summary: Update an EdgeTrigger
      description: ''
      operationId: updateEdgeTrigger
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the EdgeTrigger to update
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EdgeTrigger'
        description: Details of the EdgeTrigger to be created
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdgeTrigger'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
    delete:
      tags:
        - edgeTrigger
      summary: Delete an EdgeTrigger
      description: ''
      operationId: deleteEdgeTrigger
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the EdgeTrigger to retrieve
          schema:
            type: number
      responses:
        '204':
          description: Successful operation
      security:
        - authorization: []
          apiKeyAuth: []
  /edge/timeseries/current-value:
    get:
      tags:
        - edgeTimeSeriesCurrentValue
      summary: Get the edge time series current value
      description: ''
      operationId: getEdgeTimeSeriesCurrentValue
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CurrentTimeSeries'
        '400':
          description: Invalid operation
      security:
        - authorization: []
          apiKeyAuth: []
  /edge/timeseries/history:
    get:
      tags:
        - edgeTimeSeriesHistory
      summary: Get the edge time series history
      description: ''
      operationId: getEdgeTimeSeriesHistory
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TimeSeries'
        '400':
          description: Invalid operation
      security:
        - authorization: []
          apiKeyAuth: []
  /core/event-types:
    get:
      tags:
        - eventType
      summary: Get all EventType
      description: ''
      operationId: getAllEventType
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventType'
      security:
        - authorization: []
          apiKeyAuth: []
    post:
      tags:
        - eventType
      summary: Create an EventType
      description: ''
      operationId: createEventType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventType'
        description: Details of the EventType to be created
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventType'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /core/event-types/{id}:
    get:
      tags:
        - eventType
      summary: Get a specific EventType
      description: ''
      operationId: getEventType
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the EventType to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventType'
      security:
        - authorization: []
          apiKeyAuth: []
    put:
      tags:
        - eventType
      summary: Update an EventType
      description: ''
      operationId: updateEventType
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the EventType to update
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventType'
        description: Details of the EventType to be created
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventType'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
    delete:
      tags:
        - eventType
      summary: Delete an EventType
      description: ''
      operationId: deleteEventType
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the EventType to retrieve
          schema:
            type: number
      responses:
        '204':
          description: Successful operation
      security:
        - authorization: []
          apiKeyAuth: []
  /core/sites:
    get:
      tags:
        - site
      summary: Get all Site
      description: ''
      operationId: getAllSite
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Site'
      security:
        - authorization: []
          apiKeyAuth: []
    post:
      tags:
        - site
      summary: Create an Site
      description: ''
      operationId: createSite
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Site'
        description: Details of the Site to be created
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /core/sites/{id}:
    get:
      tags:
        - site
      summary: Get a specific Site
      description: ''
      operationId: getSite
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the Site to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
      security:
        - authorization: []
          apiKeyAuth: []
    put:
      tags:
        - site
      summary: Update an Site
      description: ''
      operationId: updateSite
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the Site to update
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Site'
        description: Details of the Site to be created
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
    delete:
      tags:
        - site
      summary: Delete an Site
      description: ''
      operationId: deleteSite
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the Site to retrieve
          schema:
            type: number
      responses:
        '204':
          description: Successful operation
      security:
        - authorization: []
          apiKeyAuth: []
  /core/orders-stats:
    get:
      tags:
        - orders
      summary: Get all Orders Stats
      description: ''
      operationId: getAllOrdersStats
      parameters:
        - in: query
          name: orderDate
          required: true
          description: The order date reference of the stats
          schema:
            type: string
        - in: query
          name: assetId
          required: false
          description: ID of the asset or asset parent
          schema:
            type: number
        - in: query
          name: orderId
          required: false
          description: ID of the order
          schema:
            type: number
        - in: query
          name: materialId
          required: false
          description: ID of the material
          schema:
            type: number
        - in: query
          name: status
          required: false
          description: Comma separate list of order statuses
          schema:
            type: string
        - in: query
          name: dateFrom
          required: false
          description: A start date to search from (dateTo must also be specified)
          schema:
            type: string
        - in: query
          name: dateTo
          required: false
          description: An end date to search to (dateFrom must also be specified)
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderStats'
      security:
        - authorization: []
          apiKeyAuth: []
  /core/orders-stats/progress-rate:
    get:
      tags:
        - orders
      summary: Get order progress rate
      description: ''
      operationId: getOrderProgressRate
      parameters:
        - in: query
          name: orderDate
          required: true
          description: The order date reference of the stats
          schema:
            type: string
        - in: query
          name: assetId
          required: true
          description: ID of the Asset
          schema:
            type: number
        - in: query
          name: orderId
          required: false
          description: ID of the Order
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderProgressRate'
      security:
        - authorization: []
          apiKeyAuth: []
  /core/orders-stats/progress-avg-rate:
    get:
      tags:
        - orders
      summary: Get order progress rate with hourly average
      description: ''
      operationId: getOrderAvgProgressRate
      parameters:
        - in: query
          name: orderDate
          required: false
          description: The order date reference of the stats
          schema:
            type: string
        - in: query
          name: startDateTime
          required: false
          description: The a start time filter
          schema:
            type: string
        - in: query
          name: size
          required: false
          description: How many records to return
          schema:
            type: string
        - in: query
          name: assetId
          required: true
          description: ID of the Asset
          schema:
            type: number
        - in: query
          name: orderId
          required: false
          description: ID of the Order
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderProgressRate'
      security:
        - authorization: []
          apiKeyAuth: []
  /core/orders-stats/status-timeline:
    get:
      tags:
        - orders
      summary: Get status timeline
      description: ''
      operationId: getOrderStatusTimeline
      parameters:
        - in: query
          name: fromDate
          required: true
          description: The from date reference of the stats
          schema:
            type: string
        - in: query
          name: toDate
          required: true
          description: The to date reference of the stats
          schema:
            type: string
        - in: query
          name: assetId
          required: true
          description: ID of the Asset
          schema:
            type: number
        - in: query
          name: orderId
          required: false
          description: ID of the Order
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderStatusTimelineEvent'
      security:
        - authorization: []
          apiKeyAuth: []
  /core/assets-stats:
    get:
      tags:
        - asset
      summary: Get all Asset Stats
      description: ''
      operationId: getAllAssetStats
      parameters:
        - in: query
          name: orderDate
          required: true
          description: The order date reference of the stats
          schema:
            type: string
        - in: query
          name: parentId
          required: false
          description: ID of the Asset parent
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssetStats'
      security:
        - authorization: []
          apiKeyAuth: []
  /core/assets-stats/{id}:
    get:
      tags:
        - asset
      summary: Get Asset Stats for one asset
      description: ''
      operationId: getAllAssetStatsById
      parameters:
        - in: query
          name: orderDate
          required: true
          description: The order date reference of the stats
          schema:
            type: string
        - in: path
          name: id
          required: true
          description: ID of the Asset
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetStats'
        '404':
          description: Not Found
      security:
        - authorization: []
          apiKeyAuth: []
  /core/assets:
    get:
      tags:
        - asset
      summary: Get all Asset
      description: ''
      operationId: getAllAsset
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Asset'
      security:
        - authorization: []
          apiKeyAuth: []
    post:
      tags:
        - asset
      summary: Create an Asset
      description: ''
      operationId: createAsset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Asset'
        description: Details of the Asset to be created
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /core/assets/{id}/shift-templates:
    get:
      tags:
        - asset
      summary: Get the asset shift template data.
      description: ''
      operationId: getAssetShiftTemplates
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the Asset to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShiftTemplate'
      security:
        - authorization: []
  /core/assets/{id}/material-batches:
    get:
      tags:
        - asset
      summary: Get the current batches of an asset
      description: Get the current batches of an asset
      operationId: getAssetBatches
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the Asset to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MaterialLot'
      security:
        - authorization: []
          apiKeyAuth: []
  /core/assets/{id}:
    get:
      tags:
        - asset
      summary: Get a specific Asset
      description: ''
      operationId: getAsset
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the Asset to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
      security:
        - authorization: []
          apiKeyAuth: []
    put:
      tags:
        - asset
      summary: Update an Asset
      description: ''
      operationId: updateAsset
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the Asset to update
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Asset'
        description: Details of the Asset to be created
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
    delete:
      tags:
        - asset
      summary: Delete an Asset
      description: ''
      operationId: deleteAsset
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the Asset to retrieve
          schema:
            type: number
      responses:
        '204':
          description: Successful operation
      security:
        - authorization: []
          apiKeyAuth: []
  /core/assets/export:
    post:
      tags:
        - asset
      summary: Export Assets
      description: ''
      operationId: exportAssets
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                ids:
                  type: array
                  items:
                    type: number
        description: Edge Data Sources to export
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/zip:
              schema:
                type: string
                format: binary
            application/json:
              schema:
                type: object
                properties:
                  entityType:
                    type: string
                  tenant:
                    type: string
                  environment:
                    type: string
                  objectName:
                    type: string
                  data:
                    $ref: '#/components/schemas/Asset'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /core/assets/export/{id}:
    post:
      tags:
        - asset
      summary: Export an Asset
      description: ''
      operationId: exportAsset
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the Asset to export
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  entityType:
                    type: string
                  tenant:
                    type: string
                  environment:
                    type: string
                  objectName:
                    type: string
                  data:
                    $ref: '#/components/schemas/Asset'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /core/assets/import:
    post:
      tags:
        - asset
      summary: Import an Asset
      description: ''
      operationId: importAsset
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                commit:
                  type: boolean
                entityType:
                  type: string
                data:
                  $ref: '#/components/schemas/Asset'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ImportResult'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /core/asset-tolerances:
    get:
      tags:
        - assetTolerance
      summary: Get all AssetTolerance
      description: ''
      operationId: getAllAssetTolerance
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssetTolerance'
      security:
        - authorization: []
          apiKeyAuth: []
    post:
      tags:
        - assetTolerance
      summary: Create an AssetTolerance
      description: ''
      operationId: createAssetTolerance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetTolerance'
        description: Details of the AssetTolerance to be created
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetTolerance'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /core/asset-tolerances/{id}:
    get:
      tags:
        - assetTolerance
      summary: Get a specific AssetTolerance
      description: ''
      operationId: getAssetTolerance
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the AssetTolerance to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetTolerance'
      security:
        - authorization: []
          apiKeyAuth: []
    put:
      tags:
        - assetTolerance
      summary: Update an AssetTolerance
      description: ''
      operationId: updateAssetTolerance
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the AssetTolerance to update
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetTolerance'
        description: Details of the AssetTolerance to be created
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetTolerance'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
    delete:
      tags:
        - assetTolerance
      summary: Delete an AssetTolerance
      description: ''
      operationId: deleteAssetTolerance
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the AssetTolerance to retrieve
          schema:
            type: number
      responses:
        '204':
          description: Successful operation
      security:
        - authorization: []
          apiKeyAuth: []
  /edge/edge-data-sources:
    get:
      tags:
        - edgeDataSource
      summary: Get all EdgeDataSource
      description: ''
      operationId: getAllEdgeDataSource
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EdgeDataSource'
      security:
        - authorization: []
          apiKeyAuth: []
    post:
      tags:
        - edgeDataSource
      summary: Create an EdgeDataSource
      description: ''
      operationId: createEdgeDataSource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EdgeDataSource'
        description: Details of the EdgeDataSource to be created
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdgeDataSource'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /edge/edge-data-sources/{id}:
    get:
      tags:
        - edgeDataSource
      summary: Get a specific EdgeDataSource
      description: ''
      operationId: getEdgeDataSource
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the EdgeDataSource to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdgeDataSource'
      security:
        - authorization: []
          apiKeyAuth: []
    put:
      tags:
        - edgeDataSource
      summary: Update an EdgeDataSource
      description: ''
      operationId: updateEdgeDataSource
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the EdgeDataSource to update
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EdgeDataSource'
        description: Details of the EdgeDataSource to be created
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdgeDataSource'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
    delete:
      tags:
        - edgeDataSource
      summary: Delete an EdgeDataSource
      description: ''
      operationId: deleteEdgeDataSource
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the EdgeDataSource to retrieve
          schema:
            type: number
      responses:
        '204':
          description: Successful operation
      security:
        - authorization: []
          apiKeyAuth: []
  /edge/edge-data-sources/export:
    post:
      tags:
        - edgeDataSource
      summary: Export an EdgeDataSource
      description: ''
      operationId: exportEdgeDataSource
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                ids:
                  type: array
                  items:
                    type: number
        description: Edge Data Sources to export
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/zip:
              schema:
                type: string
                format: binary
            application/json:
              schema:
                type: object
                properties:
                  entityType:
                    type: string
                  tenant:
                    type: string
                  environment:
                    type: string
                  objectName:
                    type: string
                  data:
                    $ref: '#/components/schemas/EdgeDataSource'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /edge/edge-data-sources/export/{id}:
    post:
      tags:
        - edgeDataSource
      summary: Export an EdgeDataSource
      description: ''
      operationId: exportOneEdgeDataSource
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the Edge Data Source to export
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  entityType:
                    type: string
                  tenant:
                    type: string
                  environment:
                    type: string
                  objectName:
                    type: string
                  data:
                    $ref: '#/components/schemas/EdgeDataSource'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /edge/edge-data-sources/import:
    post:
      tags:
        - edgeDataSource
      summary: Import an EdgeDataSource
      description: ''
      operationId: importEdgeDataSource
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                commit:
                  type: boolean
                entityType:
                  type: string
                data:
                  $ref: '#/components/schemas/EdgeDataSource'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ImportResult'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /edge/edge-data-sources/clone:
    post:
      tags:
        - edgeDataSource
      summary: Clone an EdgeDataSource
      description: ''
      operationId: cloneEdgeDataSource
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                name:
                  type: string
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdgeDataSource'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /edge/edge-data-tags:
    get:
      tags:
        - edgeDataTag
      summary: Get all EdgeDataTag
      description: ''
      operationId: getAllEdgeDataTag
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EdgeDataTag'
      security:
        - authorization: []
          apiKeyAuth: []
    post:
      tags:
        - edgeDataTag
      summary: Create an EdgeDataTag
      description: ''
      operationId: createEdgeDataTag
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EdgeDataTag'
        description: Details of the EdgeDataTag to be created
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdgeDataTag'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /edge/edge-data-tags/{id}:
    get:
      tags:
        - edgeDataTag
      summary: Get a specific EdgeDataTag
      description: ''
      operationId: getEdgeDataTag
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the EdgeDataTag to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdgeDataTag'
      security:
        - authorization: []
          apiKeyAuth: []
    put:
      tags:
        - edgeDataTag
      summary: Update an EdgeDataTag
      description: ''
      operationId: updateEdgeDataTag
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the EdgeDataTag to update
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EdgeDataTag'
        description: Details of the EdgeDataTag to be created
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdgeDataTag'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
    delete:
      tags:
        - edgeDataTag
      summary: Delete an EdgeDataTag
      description: ''
      operationId: deleteEdgeDataTag
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the EdgeDataTag to retrieve
          schema:
            type: number
      responses:
        '204':
          description: Successful operation
      security:
        - authorization: []
          apiKeyAuth: []
  /edge/edge-data-tags/{id}/current-value:
    get:
      tags:
        - edgeDataTag
      summary: Get current-value of tag and initiate out of loop tag read for refresh
      description: ''
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the EdgeDataTag to retrieve
          schema:
            type: number
      operationId: edgeDataTagCurrentValue
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrentTimeSeries'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /core/event-instances:
    get:
      tags:
        - eventInstance
      summary: Get all EventInstance
      description: ''
      operationId: getAllEventInstance
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventInstance'
      security:
        - authorization: []
          apiKeyAuth: []
    post:
      tags:
        - eventInstance
      summary: Create an EventInstance
      description: ''
      operationId: createEventInstance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventInstance'
        description: Details of the EventInstance to be created
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventInstance'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /core/event-instances/email:
    post:
      tags:
        - eventInstance
      summary: Send this event as email
      description: ''
      operationId: getEventInstance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventEmailRequest'
      responses:
        '200':
          description: Successful operation
      security:
        - authorization: []
          apiKeyAuth: []
  /core/event-instances/raise:
    post:
      tags:
        - eventInstance
      summary: Raise the specified event type on the given asset
      description: ''
      operationId: raiseEventInstance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RaiseEventRequest'
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventInstance'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /core/event-instances/close:
    post:
      tags:
        - eventInstance
      summary: Close the last active event of this event type
      description: ''
      operationId: closeEventInstance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloseEventRequest'
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventInstance'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /core/event-instances/batch:
    put:
      tags:
        - eventInstance
      summary: Batch update a EventInstances
      description: ''
      operationId: batchUEventInstance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventBatchUpdateRequest'
        description: Details of the EventInstance to be created
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventInstance'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /core/event-instances/{id}:
    get:
      tags:
        - eventInstance
      summary: Get a specific EventInstance
      description: ''
      operationId: getOneEventInstance
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the EventInstance to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventInstance'
      security:
        - authorization: []
          apiKeyAuth: []
    put:
      tags:
        - eventInstance
      summary: Update an EventInstance
      description: ''
      operationId: updateEventInstance
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the EventInstance to update
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventInstance'
        description: Details of the EventInstance to be created
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventInstance'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
    delete:
      tags:
        - eventInstance
      summary: Delete an EventInstance
      description: ''
      operationId: deleteEventInstance
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the EventInstance to retrieve
          schema:
            type: number
      responses:
        '204':
          description: Successful operation
      security:
        - authorization: []
          apiKeyAuth: []
  /core/order-instances:
    get:
      tags:
        - orderInstance
      summary: Get all OrderInstance
      description: ''
      operationId: getAllOrderInstance
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderInstance'
      security:
        - authorization: []
          apiKeyAuth: []
    post:
      tags:
        - orderInstance
      summary: Create an OrderInstance
      description: ''
      operationId: createOrderInstance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderInstance'
        description: Details of the OrderInstance to be created
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderInstance'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /core/order-instances/upsert:
    post:
      tags:
        - orderInstance
      summary: Create or update an order in the order store
      operationId: upsertOrders
      requestBody:
        description: |
          Order object that needs to be added or updated in the order store
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/OrderInstanceUpsert'
      responses:
        '200':
          description: Succeeded
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderInstanceUpsertSaved'
        '400':
          description: Order with invalid data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderInstanceUpsertError'
        '500':
          description: Input data malformat
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderInstanceUpsertError'
      security:
        - authorization: []
          apiKeyAuth: []
    options:
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      tags:
        - CORS
      responses:
        '200':
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
  /core/order-instances/search:
    get:
      tags:
        - orderInstance
      summary: Search for orders
      description: ''
      operationId: searchOrders
      parameters:
        - in: query
          name: q
          required: true
          description: The search string
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderInstance'
      security:
        - authorization: []
          apiKeyAuth: []
    post:
      tags:
        - orderInstance
      summary: Advanced Search for orders
      description: Use this endpoint to perform advanced order search looking at attributes as well other order fields. You can still do things like orderNumber.equals=foo
      operationId: advancedSearchOrders
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: integer
                size:
                  type: integer
                sort:
                  type: string
                expand:
                  type: string
                materialAttributes:
                  type: array
                  items:
                    type: object
                    properties:
                      attributeName:
                        type: string
                      stringValue:
                        type: string
                      booleanValue:
                        type: boolean
                      numericValue:
                        type: number
                orderNumberAttributes:
                  type: array
                  items:
                    type: object
                    properties:
                      attributeName:
                        type: string
                      stringValue:
                        type: string
                      booleanValue:
                        type: boolean
                      numericValue:
                        type: number
                orderAttributes:
                  type: array
                  items:
                    type: object
                    properties:
                      attributeName:
                        type: string
                      stringValue:
                        type: string
                      booleanValue:
                        type: boolean
                      numericValue:
                        type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderInstance'
      security:
        - authorization: []
          apiKeyAuth: []
  /core/order-instances/{id}:
    get:
      tags:
        - orderInstance
      summary: Get a specific OrderInstance
      description: ''
      operationId: getOrderInstance
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the OrderInstance to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderInstance'
      security:
        - authorization: []
          apiKeyAuth: []
    put:
      tags:
        - orderInstance
      summary: Update an OrderInstance
      description: ''
      operationId: updateOrderInstance
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the OrderInstance to update
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderInstance'
        description: Details of the OrderInstance to be created
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderInstance'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
    delete:
      tags:
        - orderInstance
      summary: Delete an OrderInstance
      description: ''
      operationId: deleteOrderInstance
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the OrderInstance to retrieve
          schema:
            type: number
      responses:
        '204':
          description: Successful operation
      security:
        - authorization: []
          apiKeyAuth: []
  /core/order-instances/{id}/material-totals:
    get:
      tags:
        - orderInstance
      summary: Get the material movement totals for an order
      description: ''
      operationId: getOrderInstanceMatTotals
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the OrderInstance to retrieve
          schema:
            type: number
        - in: query
          name: externalId
          required: false
          description: The externalId of a material to filter
          schema:
            type: string
        - in: query
          name: transactionType
          required: true
          description: The type of transaction to receive
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MaterialLot'
      security:
        - authorization: []
          apiKeyAuth: []
  /core/order-progresses:
    get:
      tags:
        - orderProgress
      summary: Get all OrderProgress
      description: ''
      operationId: getAllOrderProgress
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderProgress'
      security:
        - authorization: []
          apiKeyAuth: []
    post:
      tags:
        - orderProgress
      summary: Create an OrderProgress
      description: ''
      operationId: createOrderProgress
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderProgress'
        description: Details of the OrderProgress to be created
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderProgress'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /core/order-progresses/{id}:
    get:
      tags:
        - orderProgress
      summary: Get a specific OrderProgress
      description: ''
      operationId: getOrderProgress
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the OrderProgress to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderProgress'
      security:
        - authorization: []
          apiKeyAuth: []
    put:
      tags:
        - orderProgress
      summary: Update an OrderProgress
      description: ''
      operationId: updateOrderProgress
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the OrderProgress to update
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderProgress'
        description: Details of the OrderProgress to be created
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderProgress'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
    delete:
      tags:
        - orderProgress
      summary: Delete an OrderProgress
      description: ''
      operationId: deleteOrderProgress
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the OrderProgress to retrieve
          schema:
            type: number
      responses:
        '204':
          description: Successful operation
      security:
        - authorization: []
          apiKeyAuth: []
  /core/order-tolerances:
    get:
      tags:
        - orderTolerance
      summary: Get all OrderTolerance
      description: ''
      operationId: getAllOrderTolerance
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderTolerance'
      security:
        - authorization: []
          apiKeyAuth: []
    post:
      tags:
        - orderTolerance
      summary: Create an OrderTolerance
      description: ''
      operationId: createOrderTolerance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderTolerance'
        description: Details of the OrderTolerance to be created
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderTolerance'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /core/order-tolerances/{id}:
    get:
      tags:
        - orderTolerance
      summary: Get a specific OrderTolerance
      description: ''
      operationId: getOrderTolerance
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the OrderTolerance to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderTolerance'
      security:
        - authorization: []
          apiKeyAuth: []
    put:
      tags:
        - orderTolerance
      summary: Update an OrderTolerance
      description: ''
      operationId: updateOrderTolerance
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the OrderTolerance to update
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderTolerance'
        description: Details of the OrderTolerance to be created
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderTolerance'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
    delete:
      tags:
        - orderTolerance
      summary: Delete an OrderTolerance
      description: ''
      operationId: deleteOrderTolerance
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the OrderTolerance to retrieve
          schema:
            type: number
      responses:
        '204':
          description: Successful operation
      security:
        - authorization: []
          apiKeyAuth: []
  /core/process-variables:
    get:
      tags:
        - processVariable
      summary: Get all ProcessVariable
      description: ''
      operationId: getAllProcessVariable
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessVariable'
      security:
        - authorization: []
          apiKeyAuth: []
    post:
      tags:
        - processVariable
      summary: Create an ProcessVariable
      description: ''
      operationId: createProcessVariable
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProcessVariable'
        description: Details of the ProcessVariable to be created
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProcessVariable'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /core/process-variables/{id}:
    get:
      tags:
        - processVariable
      summary: Get a specific ProcessVariable
      description: ''
      operationId: getProcessVariable
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the ProcessVariable to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProcessVariable'
      security:
        - authorization: []
          apiKeyAuth: []
    put:
      tags:
        - processVariable
      summary: Update an ProcessVariable
      description: ''
      operationId: updateProcessVariable
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the ProcessVariable to update
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProcessVariable'
        description: Details of the ProcessVariable to be created
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProcessVariable'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
    delete:
      tags:
        - processVariable
      summary: Delete an ProcessVariable
      description: ''
      operationId: deleteProcessVariable
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the ProcessVariable to retrieve
          schema:
            type: number
      responses:
        '204':
          description: Successful operation
      security:
        - authorization: []
          apiKeyAuth: []
  /activity/activity-assignments:
    get:
      tags:
        - activityAssignment
      summary: Get all ActivityAssignment
      description: ''
      operationId: getAllActivityAssignment
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActivityAssignment'
      security:
        - authorization: []
          apiKeyAuth: []
    post:
      tags:
        - activityAssignment
      summary: Create an ActivityAssignment
      description: ''
      operationId: createActivityAssignment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityAssignment'
        description: Details of the ActivityAssignment to be created
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityAssignment'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /activity/activity-assignments/{id}:
    get:
      tags:
        - activityAssignment
      summary: Get a specific ActivityAssignment
      description: ''
      operationId: getActivityAssignment
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the ActivityAssignment to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityAssignment'
      security:
        - authorization: []
          apiKeyAuth: []
    put:
      tags:
        - activityAssignment
      summary: Update an ActivityAssignment
      description: ''
      operationId: updateActivityAssignment
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the ActivityAssignment to update
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityAssignment'
        description: Details of the ActivityAssignment to be created
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityAssignment'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
    delete:
      tags:
        - activityAssignment
      summary: Delete an ActivityAssignment
      description: ''
      operationId: deleteActivityAssignment
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the ActivityAssignment to retrieve
          schema:
            type: number
      responses:
        '204':
          description: Successful operation
      security:
        - authorization: []
          apiKeyAuth: []
  /activity/activity-instances:
    get:
      tags:
        - activityInstance
      summary: Get all ActivityInstance
      description: ''
      operationId: getAllActivityInstance
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActivityInstance'
      security:
        - authorization: []
          apiKeyAuth: []
    post:
      tags:
        - activityInstance
      summary: Create an ActivityInstance
      description: ''
      operationId: createActivityInstance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityInstance'
        description: Details of the ActivityInstance to be created
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityInstance'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /activity/activity-instances/{id}:
    get:
      tags:
        - activityInstance
      summary: Get a specific ActivityInstance
      description: ''
      operationId: getActivityInstance
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the ActivityInstance to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityInstance'
      security:
        - authorization: []
          apiKeyAuth: []
    put:
      tags:
        - activityInstance
      summary: Update an ActivityInstance
      description: ''
      operationId: updateActivityInstance
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the ActivityInstance to update
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityInstance'
        description: Details of the ActivityInstance to be created
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityInstance'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
    delete:
      tags:
        - activityInstance
      summary: Delete an ActivityInstance
      description: ''
      operationId: deleteActivityInstance
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the ActivityInstance to retrieve
          schema:
            type: number
      responses:
        '204':
          description: Successful operation
      security:
        - authorization: []
          apiKeyAuth: []
  /activity/activity-instance-items:
    get:
      tags:
        - activityInstanceItem
      summary: Get all ActivityInstanceItem
      description: ''
      operationId: getAllActivityInstanceItem
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActivityInstanceItem'
      security:
        - authorization: []
          apiKeyAuth: []
    post:
      tags:
        - activityInstanceItem
      summary: Create an ActivityInstanceItem
      description: ''
      operationId: createActivityInstanceItem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityInstanceItem'
        description: Details of the ActivityInstanceItem to be created
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityInstanceItem'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /activity/activity-instance-items/{id}:
    get:
      tags:
        - activityInstanceItem
      summary: Get a specific ActivityInstanceItem
      description: ''
      operationId: getActivityInstanceItem
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the ActivityInstanceItem to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityInstanceItem'
      security:
        - authorization: []
          apiKeyAuth: []
    put:
      tags:
        - activityInstanceItem
      summary: Update an ActivityInstanceItem
      description: ''
      operationId: updateActivityInstanceItem
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the ActivityInstanceItem to update
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityInstanceItem'
        description: Details of the ActivityInstanceItem to be created
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityInstanceItem'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
    delete:
      tags:
        - activityInstanceItem
      summary: Delete an ActivityInstanceItem
      description: ''
      operationId: deleteActivityInstanceItem
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the ActivityInstanceItem to retrieve
          schema:
            type: number
      responses:
        '204':
          description: Successful operation
      security:
        - authorization: []
          apiKeyAuth: []
  /activity/activity-item-option-groups:
    get:
      tags:
        - activityItemOptionGroup
      summary: Get all ActivityItemOptionGroup
      description: ''
      operationId: getAllActivityItemOptionGroup
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActivityItemOptionGroup'
      security:
        - authorization: []
          apiKeyAuth: []
    post:
      tags:
        - activityItemOptionGroup
      summary: Create an ActivityItemOptionGroup
      description: ''
      operationId: createActivityItemOptionGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityItemOptionGroup'
        description: Details of the ActivityItemOptionGroup to be created
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityItemOptionGroup'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /activity/activity-item-option-groups/{id}:
    get:
      tags:
        - activityItemOptionGroup
      summary: Get a specific ActivityItemOptionGroup
      description: ''
      operationId: getActivityItemOptionGroup
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the ActivityItemOptionGroup to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityItemOptionGroup'
      security:
        - authorization: []
          apiKeyAuth: []
    put:
      tags:
        - activityItemOptionGroup
      summary: Update an ActivityItemOptionGroup
      description: ''
      operationId: updateActivityItemOptionGroup
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the ActivityItemOptionGroup to update
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityItemOptionGroup'
        description: Details of the ActivityItemOptionGroup to be created
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityItemOptionGroup'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
    delete:
      tags:
        - activityItemOptionGroup
      summary: Delete an ActivityItemOptionGroup
      description: ''
      operationId: deleteActivityItemOptionGroup
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the ActivityItemOptionGroup to retrieve
          schema:
            type: number
      responses:
        '204':
          description: Successful operation
      security:
        - authorization: []
          apiKeyAuth: []
  /activity/activity-item-option-items:
    get:
      tags:
        - activityItemOptionItem
      summary: Get all ActivityItemOptionItem
      description: ''
      operationId: getAllActivityItemOptionItem
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActivityItemOptionItem'
      security:
        - authorization: []
          apiKeyAuth: []
    post:
      tags:
        - activityItemOptionItem
      summary: Create an ActivityItemOptionItem
      description: ''
      operationId: createActivityItemOptionItem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityItemOptionItem'
        description: Details of the ActivityItemOptionItem to be created
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityItemOptionItem'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /activity/activity-item-option-items/{id}:
    get:
      tags:
        - activityItemOptionItem
      summary: Get a specific ActivityItemOptionItem
      description: ''
      operationId: getActivityItemOptionItem
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the ActivityItemOptionItem to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityItemOptionItem'
      security:
        - authorization: []
          apiKeyAuth: []
    put:
      tags:
        - activityItemOptionItem
      summary: Update an ActivityItemOptionItem
      description: ''
      operationId: updateActivityItemOptionItem
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the ActivityItemOptionItem to update
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityItemOptionItem'
        description: Details of the ActivityItemOptionItem to be created
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityItemOptionItem'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
    delete:
      tags:
        - activityItemOptionItem
      summary: Delete an ActivityItemOptionItem
      description: ''
      operationId: deleteActivityItemOptionItem
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the ActivityItemOptionItem to retrieve
          schema:
            type: number
      responses:
        '204':
          description: Successful operation
      security:
        - authorization: []
          apiKeyAuth: []
  /activity/activity-templates:
    get:
      tags:
        - activityTemplate
      summary: Get all ActivityTemplate
      description: ''
      operationId: getAllActivityTemplate
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActivityTemplate'
      security:
        - authorization: []
          apiKeyAuth: []
    post:
      tags:
        - activityTemplate
      summary: Create an ActivityTemplate
      description: ''
      operationId: createActivityTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityTemplate'
        description: Details of the ActivityTemplate to be created
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityTemplate'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /activity/activity-templates/{id}:
    get:
      tags:
        - activityTemplate
      summary: Get a specific ActivityTemplate
      description: ''
      operationId: getActivityTemplate
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the ActivityTemplate to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityTemplate'
      security:
        - authorization: []
          apiKeyAuth: []
    put:
      tags:
        - activityTemplate
      summary: Update an ActivityTemplate
      description: ''
      operationId: updateActivityTemplate
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the ActivityTemplate to update
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityTemplate'
        description: Details of the ActivityTemplate to be created
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityTemplate'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
    delete:
      tags:
        - activityTemplate
      summary: Delete an ActivityTemplate
      description: ''
      operationId: deleteActivityTemplate
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the ActivityTemplate to retrieve
          schema:
            type: number
      responses:
        '204':
          description: Successful operation
      security:
        - authorization: []
          apiKeyAuth: []
  /activity/activity-templates/export:
    post:
      tags:
        - exportActivityTemplate
      summary: Export an ActivityTemplate
      description: ''
      operationId: exportActivityTemplate
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
        description: Details of the ActivityTemplate to be created
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityTemplate'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /activity/activity-templates/import:
    post:
      tags:
        - importActivityTemplate
      summary: Import an ActivityTemplate
      description: ''
      operationId: importActivityTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityTemplate'
        description: Details of the ActivityTemplate to be imported
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityTemplate'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /activity/activity-templates/clone:
    post:
      tags:
        - cloneActivityTemplate
      summary: Clone an ActivityTemplate
      description: ''
      operationId: cloneActivityTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloneTemplateRequest'
        description: Details of the ActivityTemplate to be imported
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityTemplate'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /activity/activity-templates/{id}/version:
    post:
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the ActivityTemplate to create a new version for
          schema:
            type: number
      tags:
        - activityTemplate
      summary: Create a new version of an ActivityTemplate
      description: ''
      operationId: createVersionActivityTemplate
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActivityTemplate'
      security:
        - authorization: []
          apiKeyAuth: []
    patch:
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the ActivityTemplate to update the version for
          schema:
            type: number
      requestBody:
        description: Details of the ActivityTemplate to be created
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityTemplateStatus'
      tags:
        - activityTemplate
      summary: Change the status of an ActivityTemplate
      description: ''
      operationId: changeVersionActivityTemplate
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActivityTemplate'
      security:
        - authorization: []
          apiKeyAuth: []
  /activity/activity-template-items:
    get:
      tags:
        - activityTemplateItem
      summary: Get all ActivityTemplateItem
      description: ''
      operationId: getAllActivityTemplateItem
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActivityTemplateItem'
      security:
        - authorization: []
          apiKeyAuth: []
    post:
      tags:
        - activityTemplateItem
      summary: Create an ActivityTemplateItem
      description: ''
      operationId: createActivityTemplateItem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityTemplateItem'
        description: Details of the ActivityTemplateItem to be created
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityTemplateItem'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /activity/activity-template-items/{id}:
    get:
      tags:
        - activityTemplateItem
      summary: Get a specific ActivityTemplateItem
      description: ''
      operationId: getActivityTemplateItem
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the ActivityTemplateItem to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityTemplateItem'
      security:
        - authorization: []
          apiKeyAuth: []
    put:
      tags:
        - activityTemplateItem
      summary: Update an ActivityTemplateItem
      description: ''
      operationId: updateActivityTemplateItem
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the ActivityTemplateItem to update
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityTemplateItem'
        description: Details of the ActivityTemplateItem to be created
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityTemplateItem'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
    delete:
      tags:
        - activityTemplateItem
      summary: Delete an ActivityTemplateItem
      description: ''
      operationId: deleteActivityTemplateItem
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the ActivityTemplateItem to retrieve
          schema:
            type: number
      responses:
        '204':
          description: Successful operation
      security:
        - authorization: []
          apiKeyAuth: []
  /activity/activity-trigger-assignments:
    get:
      tags:
        - activityTriggerAssignment
      summary: Get all ActivityTriggerAssignment
      description: ''
      operationId: getAllActivityTriggerAssignment
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActivityTriggerAssignment'
      security:
        - authorization: []
          apiKeyAuth: []
    post:
      tags:
        - activityTriggerAssignment
      summary: Create an ActivityTriggerAssignment
      description: ''
      operationId: createActivityTriggerAssignment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityTriggerAssignment'
        description: Details of the ActivityTriggerAssignment to be created
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityTriggerAssignment'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /activity/activity-trigger-assignments/{id}:
    get:
      tags:
        - activityTriggerAssignment
      summary: Get a specific ActivityTriggerAssignment
      description: ''
      operationId: getActivityTriggerAssignment
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the ActivityTriggerAssignment to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityTriggerAssignment'
      security:
        - authorization: []
          apiKeyAuth: []
    put:
      tags:
        - activityTriggerAssignment
      summary: Update an ActivityTriggerAssignment
      description: ''
      operationId: updateActivityTriggerAssignment
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the ActivityTriggerAssignment to update
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityTriggerAssignment'
        description: Details of the ActivityTriggerAssignment to be created
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityTriggerAssignment'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
    delete:
      tags:
        - activityTriggerAssignment
      summary: Delete an ActivityTriggerAssignment
      description: ''
      operationId: deleteActivityTriggerAssignment
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the ActivityTriggerAssignment to retrieve
          schema:
            type: number
      responses:
        '204':
          description: Successful operation
      security:
        - authorization: []
          apiKeyAuth: []
  /activity/activity-trigger-instances:
    get:
      tags:
        - activityTriggerInstance
      summary: Get all ActivityTriggerInstance
      description: ''
      operationId: getAllActivityTriggerInstance
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActivityTriggerInstance'
      security:
        - authorization: []
          apiKeyAuth: []
    post:
      tags:
        - activityTriggerInstance
      summary: Create an ActivityTriggerInstance
      description: ''
      operationId: createActivityTriggerInstance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityTriggerInstance'
        description: Details of the ActivityTriggerInstance to be created
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityTriggerInstance'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /activity/activity-trigger-instances/{id}:
    get:
      tags:
        - activityTriggerInstance
      summary: Get a specific ActivityTriggerInstance
      description: ''
      operationId: getActivityTriggerInstance
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the ActivityTriggerInstance to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityTriggerInstance'
      security:
        - authorization: []
          apiKeyAuth: []
    put:
      tags:
        - activityTriggerInstance
      summary: Update an ActivityTriggerInstance
      description: ''
      operationId: updateActivityTriggerInstance
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the ActivityTriggerInstance to update
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityTriggerInstance'
        description: Details of the ActivityTriggerInstance to be created
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityTriggerInstance'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
    delete:
      tags:
        - activityTriggerInstance
      summary: Delete an ActivityTriggerInstance
      description: ''
      operationId: deleteActivityTriggerInstance
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the ActivityTriggerInstance to retrieve
          schema:
            type: number
      responses:
        '204':
          description: Successful operation
      security:
        - authorization: []
          apiKeyAuth: []
  /core/material-groups:
    get:
      tags:
        - materialGroup
      summary: Get all MaterialGroup
      description: ''
      operationId: getAllMaterialGroup
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MaterialGroup'
      security:
        - authorization: []
          apiKeyAuth: []
    post:
      tags:
        - materialGroup
      summary: Create an MaterialGroup
      description: ''
      operationId: createMaterialGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MaterialGroup'
        description: Details of the MaterialGroup to be created
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaterialGroup'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /core/material-groups/{id}:
    get:
      tags:
        - materialGroup
      summary: Get a specific MaterialGroup
      description: ''
      operationId: getMaterialGroup
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the MaterialGroup to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaterialGroup'
      security:
        - authorization: []
          apiKeyAuth: []
    put:
      tags:
        - materialGroup
      summary: Update an MaterialGroup
      description: ''
      operationId: updateMaterialGroup
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the MaterialGroup to update
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MaterialGroup'
        description: Details of the MaterialGroup to be created
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaterialGroup'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
    delete:
      tags:
        - materialGroup
      summary: Delete an MaterialGroup
      description: ''
      operationId: deleteMaterialGroup
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the MaterialGroup to retrieve
          schema:
            type: number
      responses:
        '204':
          description: Successful operation
      security:
        - authorization: []
          apiKeyAuth: []
  /core/materials:
    get:
      tags:
        - material
      summary: Get all Material
      description: ''
      operationId: getAllMaterial
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Material'
      security:
        - authorization: []
          apiKeyAuth: []
    post:
      tags:
        - material
      summary: Create an Material
      description: ''
      operationId: createMaterial
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Material'
        description: Details of the Material to be created
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Material'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /core/materials/search:
    get:
      tags:
        - material
      summary: Get a specific Material
      description: ''
      operationId: searchMaterial
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Material'
      security:
        - authorization: []
          apiKeyAuth: []
  /core/materials/{id}:
    get:
      tags:
        - material
      summary: Get a specific Material
      description: ''
      operationId: getMaterial
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the Material to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Material'
      security:
        - authorization: []
          apiKeyAuth: []
    put:
      tags:
        - material
      summary: Update an Material
      description: ''
      operationId: updateMaterial
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the Material to update
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Material'
        description: Details of the Material to be created
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Material'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
    delete:
      tags:
        - material
      summary: Delete an Material
      description: ''
      operationId: deleteMaterial
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the Material to retrieve
          schema:
            type: number
      responses:
        '204':
          description: Successful operation
      security:
        - authorization: []
          apiKeyAuth: []
  /core/materials/upsert:
    post:
      tags:
        - material
      summary: Create or update a material
      operationId: upsertMaterials
      requestBody:
        description: |
          Material object that needs to be added or updated
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/MaterialUpsert'
      responses:
        '200':
          description: Succeeded
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MaterialUpsertSaved'
        '400':
          description: Material with invalid data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaterialUpsertError'
        '500':
          description: Input data malformat
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaterialUpsertError'
      security:
        - authorization: []
          apiKeyAuth: []
    options:
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      tags:
        - CORS
      responses:
        '200':
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
  /core/material-tolerances:
    get:
      tags:
        - materialTolerance
      summary: Get all MaterialTolerance
      description: ''
      operationId: getAllMaterialTolerance
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MaterialTolerance'
      security:
        - authorization: []
          apiKeyAuth: []
    post:
      tags:
        - materialTolerance
      summary: Create an MaterialTolerance
      description: ''
      operationId: createMaterialTolerance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MaterialTolerance'
        description: Details of the MaterialTolerance to be created
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaterialTolerance'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /core/material-tolerances/{id}:
    get:
      tags:
        - materialTolerance
      summary: Get a specific MaterialTolerance
      description: ''
      operationId: getMaterialTolerance
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the MaterialTolerance to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaterialTolerance'
      security:
        - authorization: []
          apiKeyAuth: []
    put:
      tags:
        - materialTolerance
      summary: Update an MaterialTolerance
      description: ''
      operationId: updateMaterialTolerance
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the MaterialTolerance to update
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MaterialTolerance'
        description: Details of the MaterialTolerance to be created
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaterialTolerance'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
    delete:
      tags:
        - materialTolerance
      summary: Delete an MaterialTolerance
      description: ''
      operationId: deleteMaterialTolerance
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the MaterialTolerance to retrieve
          schema:
            type: number
      responses:
        '204':
          description: Successful operation
      security:
        - authorization: []
          apiKeyAuth: []
  /core/material-lots:
    get:
      tags:
        - materialLots
      summary: Get all Material Lots
      description: ''
      operationId: getAllMaterialLots
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MaterialLot'
      security:
        - authorization: []
          apiKeyAuth: []
  /core/material-movements:
    get:
      tags:
        - materialMovement
      summary: Get all MaterialMovements
      description: ''
      operationId: getAllMaterialMovements
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MaterialMovement'
      security:
        - authorization: []
          apiKeyAuth: []
    post:
      tags:
        - materialMovement
      summary: Create an materialMovement
      description: ''
      operationId: createMaterialMovement
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MaterialMovementRequest'
        description: Details of the MaterialMovement to be created
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaterialMovement'
        '400':
          description: Invalid format
      security:
        - authorization: []
    put:
      tags:
        - materialMovement
      summary: Update an materialMovement
      description: ''
      operationId: updateMaterialMovement
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MaterialMovement'
        description: Details of the MaterialMovement to be updated
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaterialMovement'
        '400':
          description: Invalid format
      security:
        - authorization: []
    delete:
      tags:
        - materialMovement
      summary: Delete a materialMovement
      description: ''
      operationId: deleteMaterialMovement
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaterialMovement'
        '400':
          description: Invalid format
      security:
        - authorization: []
  /core/material-movements/by-attribute:
    get:
      tags:
        - materialMovement
      summary: Query the MES for Material Movements by an attribute search
      description: ''
      operationId: getByAttribute
      parameters:
        - in: query
          name: materialExternalId
          required: true
          description: The material external id
          schema:
            type: string
        - in: query
          name: attrName
          required: true
          description: The attribute name to search for
          schema:
            type: string
        - in: query
          name: attrvalue
          required: true
          description: The attribute value to search for
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MaterialMovement'
      security:
        - authorization: []
  /core/material-movements/by-inventory-key:
    get:
      tags:
        - materialMovement
      summary: Query the MES for Material Movements by the inventory key of a material
      description: ''
      operationId: getBySource
      parameters:
        - in: query
          name: size
          required: false
          description: Number of items to retrieve
          schema:
            type: number
        - in: query
          name: nextToken
          required: false
          description: Token to grab the next set of results
          schema:
            type: string
        - in: query
          name: inventoryKey
          required: true
          description: The inventory key source
          schema:
            type: string
        - in: query
          name: materialExternalId
          required: true
          description: The material external id
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MaterialMovement'
      security:
        - authorization: []
  /core/material-movements/by-asset:
    get:
      tags:
        - materialMovement
      summary: Query the MES for Material Movements by the asset
      description: ''
      operationId: getByAsset
      parameters:
        - in: query
          name: size
          required: false
          description: Number of items to retrieve
          schema:
            type: number
        - in: query
          name: nextToken
          required: false
          description: Token to grab the next set of results
          schema:
            type: string
        - in: query
          name: assetId
          required: true
          description: The asset id to search by
          schema:
            type: string
        - in: query
          name: timeFrom
          required: false
          description: A date in ISO UTC Format to filter from
          schema:
            type: string
        - in: query
          name: timeTo
          required: false
          description: A date in ISO UTC Format to filter to
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MaterialMovement'
      security:
        - authorization: []
  /core/material-movements/by-material:
    get:
      tags:
        - materialMovement
      summary: Query the MES for Material Movements by material
      description: ''
      operationId: getByMaterial
      parameters:
        - in: query
          name: size
          required: false
          description: Number of items to retrieve
          schema:
            type: number
        - in: query
          name: nextToken
          required: false
          description: Token to grab the next set of results
          schema:
            type: string
        - in: query
          name: materialExternalId
          required: true
          description: The material external id to search by
          schema:
            type: string
        - in: query
          name: timeFrom
          required: false
          description: A date in ISO UTC Format to filter from
          schema:
            type: string
        - in: query
          name: timeTo
          required: false
          description: A date in ISO UTC Format to filter to
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MaterialMovement'
      security:
        - authorization: []
  /core/unit-of-measures:
    get:
      tags:
        - unitOfMeasure
      summary: Get all UnitOfMeasure
      description: ''
      operationId: getAllUnitOfMeasure
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UnitOfMeasure'
      security:
        - authorization: []
          apiKeyAuth: []
    post:
      tags:
        - unitOfMeasure
      summary: Create an UnitOfMeasure
      description: ''
      operationId: createUnitOfMeasure
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnitOfMeasure'
        description: Details of the UnitOfMeasure to be created
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitOfMeasure'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /core/unit-of-measures/{id}:
    get:
      tags:
        - unitOfMeasure
      summary: Get a specific UnitOfMeasure
      description: ''
      operationId: getUnitOfMeasure
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the UnitOfMeasure to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitOfMeasure'
      security:
        - authorization: []
          apiKeyAuth: []
    put:
      tags:
        - unitOfMeasure
      summary: Update an UnitOfMeasure
      description: ''
      operationId: updateUnitOfMeasure
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the UnitOfMeasure to update
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnitOfMeasure'
        description: Details of the UnitOfMeasure to be created
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitOfMeasure'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
    delete:
      tags:
        - unitOfMeasure
      summary: Delete an UnitOfMeasure
      description: ''
      operationId: deleteUnitOfMeasure
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the UnitOfMeasure to retrieve
          schema:
            type: number
      responses:
        '204':
          description: Successful operation
      security:
        - authorization: []
          apiKeyAuth: []
  /activity/activity-starters:
    get:
      tags:
        - activityStarter
      summary: Get all ActivityStarter
      description: ''
      operationId: getAllActivityStarter
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActivityStarter'
      security:
        - authorization: []
          apiKeyAuth: []
    post:
      tags:
        - activityStarter
      summary: Create an ActivityStarter
      description: ''
      operationId: createActivityStarter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityStarter'
        description: Details of the ActivityStarter to be created
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityStarter'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /activity/activity-starters/{id}:
    get:
      tags:
        - activityStarter
      summary: Get a specific ActivityStarter
      description: ''
      operationId: getActivityStarter
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the ActivityStarter to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityStarter'
      security:
        - authorization: []
          apiKeyAuth: []
    put:
      tags:
        - activityStarter
      summary: Update an ActivityStarter
      description: ''
      operationId: updateActivityStarter
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the ActivityStarter to update
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityStarter'
        description: Details of the ActivityStarter to be created
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityStarter'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
    delete:
      tags:
        - activityStarter
      summary: Delete an ActivityStarter
      description: ''
      operationId: deleteActivityStarter
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the ActivityStarter to retrieve
          schema:
            type: number
      responses:
        '204':
          description: Successful operation
      security:
        - authorization: []
          apiKeyAuth: []
  /tenant/subscriptions:
    get:
      tags:
        - subscription
      summary: Get all Subscriptions
      description: ''
      operationId: getAllSubscription
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubscriptionWithIds'
        '400':
          description: Invalid operation
      security:
        - authorization: []
          apiKeyAuth: []
    post:
      tags:
        - subscription
      summary: Create an Subscription
      description: ''
      operationId: createSubscription
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subscription'
        description: Details of the Subscription to be created
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /tenant/subscriptions/{id}:
    get:
      tags:
        - subscription
      summary: Get a specific Subscription
      description: ''
      operationId: getSubscription
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the Subscription to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
      security:
        - authorization: []
          apiKeyAuth: []
    put:
      tags:
        - subscription
      summary: Update a Subscription
      description: ''
      operationId: updateSubscription
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the Subscription to update
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subscription'
        description: Details of the Subscription to be created
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
    delete:
      tags:
        - subscription
      summary: Delete a Subscription
      description: ''
      operationId: deleteSubscription
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the Subscription to retrieve
          schema:
            type: number
      responses:
        '204':
          description: Successful operation
      security:
        - authorization: []
          apiKeyAuth: []
  /tenant/subscriptions/user:
    get:
      tags:
        - subscription
      summary: Get all Subscription for a user based on assetid, orderid and eventid
      description: ''
      operationId: getAllSubscriptionBasedOnAssetId
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubscriptionWithIds'
        '400':
          description: Invalid operation
      security:
        - authorization: []
          apiKeyAuth: []
  /tenant/channels:
    get:
      tags:
        - channel
      summary: Get all Channels
      description: ''
      operationId: getAllChannels
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Channel'
      security:
        - authorization: []
          apiKeyAuth: []
    post:
      tags:
        - channels
      summary: Create a Channel
      description: ''
      operationId: createChannel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Channel'
        description: Details of the Channel to be created
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /tenant/channels/notifications:
    get:
      tags:
        - channel
      summary: Get all Channels
      description: ''
      operationId: getAllUserChannelsResults
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventInstance'
      security:
        - authorization: []
          apiKeyAuth: []
  /tenant/channels/{id}:
    get:
      tags:
        - channel
      summary: Get a specific Channel
      description: ''
      operationId: getChannel
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the Channel to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
      security:
        - authorization: []
          apiKeyAuth: []
    put:
      tags:
        - channel
      summary: Update a Channel
      description: ''
      operationId: updateChannel
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the Channel to update
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Channel'
        description: Details of the Channel to be created
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
    delete:
      tags:
        - channel
      summary: Delete a Channel
      description: ''
      operationId: deleteChannel
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the Channel to delete
          schema:
            type: number
      responses:
        '204':
          description: Successful operation
      security:
        - authorization: []
          apiKeyAuth: []
  /tenant/channels/test:
    post:
      tags:
        - channels
      summary: Test a push Channel
      description: ''
      operationId: testChannel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Channel'
        description: Details of the Channel to be tested
        required: true
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /core/messages:
    get:
      tags:
        - message
      summary: Get messages with query
      description: ''
      operationId: getMessages
      parameters:
        - in: query
          name: assetId
          required: true
          description: Asset id of the Message to get
          schema:
            type: number
        - in: query
          name: timestamp
          required: true
          description: Timestamp of the Message to get
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                items:
                  type: array
                  items:
                    $ref: '#/components/schemas/Message'
      security:
        - authorization: []
    post:
      tags:
        - message
      summary: Create a message in a chat
      description: ''
      operationId: createMessage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Message'
        description: Details of the Message to be created
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '400':
          description: Invalid format
      security:
        - authorization: []
    delete:
      tags:
        - message
      summary: Delete a message
      description: ''
      operationId: deleteMessage
      parameters:
        - in: query
          name: assetId
          required: true
          description: Asset id of the Message to delete
          schema:
            type: number
        - in: query
          name: timestamp
          required: true
          description: Timestamp of the Message to delete
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
      security:
        - authorization: []
  /core/messages/image/{uuid}:
    get:
      tags:
        - message
      summary: Get messageImage
      description: ''
      operationId: getMessageImage
      parameters:
        - in: path
          name: uuid
          required: true
          description: uuid of the Image to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                items:
                  type: string
      security:
        - authorization: []
  /activity/activity-instance-item-images:
    get:
      tags:
        - activityInstanceItemImage
      summary: Get all ActivityInstanceItemImage
      description: ''
      operationId: getAllActivityInstanceItemImage
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActivityInstanceItemImage'
      security:
        - authorization: []
          apiKeyAuth: []
    post:
      tags:
        - activityInstanceItemImage
      summary: Create an ActivityInstanceItemImage
      description: ''
      operationId: uploadActivityInstanceItemImage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityInstanceItemImage'
        description: Details of the ActivityInstanceItemImage to be created
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityInstanceItemImage'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /activity/activity-instance-item-images/upload:
    post:
      tags:
        - activityInstanceItemImage
      summary: Create an ActivityInstanceItemImage
      description: ''
      operationId: createActivityInstanceItemImage
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: Details of the ActivityInstanceItemImage to be created
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /activity/activity-instance-item-images/thumb/{reference}:
    get:
      tags:
        - getImageThumb
      summary: Get an image based on its reference name
      description: ''
      operationId: getImageThumb
      parameters:
        - in: path
          name: reference
          required: true
          description: The reference to the image
          schema:
            type: string
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  image:
                    type: string
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
    delete:
      tags:
        - deleteImageThumb
      summary: Delete an image based on its reference name
      description: ''
      operationId: deleteImageThumb
      parameters:
        - in: path
          name: reference
          required: true
          description: The reference to the image
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /activity/activity-instance-item-images/thumb:
    get:
      tags:
        - getImageThumb
      summary: Get an image based on its reference name
      description: ''
      operationId: getImageThumbReference
      parameters:
        - in: query
          name: reference
          required: true
          description: The reference to the image
          schema:
            type: string
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  image:
                    type: string
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /activity/activity-instance-item-images/{id}:
    get:
      tags:
        - activityInstanceItemImage
      summary: Get a specific ActivityInstanceItemImage
      description: ''
      operationId: getActivityInstanceItemImage
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the ActivityInstanceItemImage to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityInstanceItemImage'
      security:
        - authorization: []
          apiKeyAuth: []
    put:
      tags:
        - activityInstanceItemImage
      summary: Update an ActivityInstanceItemImage
      description: ''
      operationId: updateActivityInstanceItemImage
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the ActivityInstanceItemImage to update
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityInstanceItemImage'
        description: Details of the ActivityInstanceItemImage to be created
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityInstanceItemImage'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
    delete:
      tags:
        - activityInstanceItemImage
      summary: Delete an ActivityInstanceItemImage
      description: ''
      operationId: deleteActivityInstanceItemImage
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the ActivityInstanceItemImage to retrieve
          schema:
            type: number
      responses:
        '204':
          description: Successful operation
      security:
        - authorization: []
          apiKeyAuth: []
  /activity/activity-instance-item-images/{id}/full:
    get:
      tags:
        - activityInstanceItemImage
      summary: Get the full size image
      description: ''
      operationId: getTheFullSizeImage
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the ActivityInstanceItemImage to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityInstanceItemImage'
      security:
        - authorization: []
          apiKeyAuth: []
  /odata:
    get:
      tags:
        - odata
      summary: Get odata
      description: ''
      operationId: getOData
      responses:
        '200':
          description: Successful operation
          content:
            xml:
              schema:
                type: object
      security:
        - authorization: []
          apiKeyAuth: []
  /odata/{proxy+}:
    get:
      tags:
        - odata
      summary: All other odata operations
      description: ''
      parameters:
        - name: proxy+
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
      security:
        - authorization: []
          apiKeyAuth: []
  /core/attributes:
    get:
      tags:
        - attribute
      summary: Get all Attribute
      description: ''
      operationId: getAllAttribute
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Attribute'
      security:
        - authorization: []
          apiKeyAuth: []
    post:
      tags:
        - attribute
      summary: Create an Attribute
      description: ''
      operationId: createAttribute
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Attribute'
        description: Details of the Attribute to be created
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attribute'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /core/attributes/{id}:
    get:
      tags:
        - attribute
      summary: Get a specific Attribute
      description: ''
      operationId: getAttribute
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the Attribute to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attribute'
      security:
        - authorization: []
          apiKeyAuth: []
    put:
      tags:
        - attribute
      summary: Update an Attribute
      description: ''
      operationId: updateAttribute
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the Attribute to update
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Attribute'
        description: Details of the Attribute to be created
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attribute'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
    delete:
      tags:
        - attribute
      summary: Delete an Attribute
      description: ''
      operationId: deleteAttribute
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the Attribute to retrieve
          schema:
            type: number
      responses:
        '204':
          description: Successful operation
      security:
        - authorization: []
          apiKeyAuth: []
  /core/order-attributes:
    get:
      tags:
        - orderAttribute
      summary: Get all OrderAttribute
      description: ''
      operationId: getAllOrderAttribute
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderAttribute'
      security:
        - authorization: []
          apiKeyAuth: []
    post:
      tags:
        - orderAttribute
      summary: Create an OrderAttribute
      description: ''
      operationId: createOrderAttribute
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderAttribute'
        description: Details of the OrderAttribute to be created
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderAttribute'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /core/order-attributes/{id}:
    get:
      tags:
        - orderAttribute
      summary: Get a specific OrderAttribute
      description: ''
      operationId: getOrderAttribute
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the OrderAttribute to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderAttribute'
      security:
        - authorization: []
          apiKeyAuth: []
    put:
      tags:
        - orderAttribute
      summary: Update an OrderAttribute
      description: ''
      operationId: updateOrderAttribute
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the OrderAttribute to update
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderAttribute'
        description: Details of the OrderAttribute to be created
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderAttribute'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
    delete:
      tags:
        - orderAttribute
      summary: Delete an OrderAttribute
      description: ''
      operationId: deleteOrderAttribute
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the OrderAttribute to retrieve
          schema:
            type: number
      responses:
        '204':
          description: Successful operation
      security:
        - authorization: []
          apiKeyAuth: []
  /core/asset-attributes:
    get:
      tags:
        - assetAttribute
      summary: Get all AssetAttribute
      description: ''
      operationId: getAllAssetAttribute
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssetAttribute'
      security:
        - authorization: []
          apiKeyAuth: []
    post:
      tags:
        - assetAttribute
      summary: Create an AssetAttribute
      description: ''
      operationId: createAssetAttribute
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetAttribute'
        description: Details of the AssetAttribute to be created
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetAttribute'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /core/asset-attributes/{id}:
    get:
      tags:
        - assetAttribute
      summary: Get a specific AssetAttribute
      description: ''
      operationId: getAssetAttribute
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the AssetAttribute to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetAttribute'
      security:
        - authorization: []
          apiKeyAuth: []
    put:
      tags:
        - assetAttribute
      summary: Update an AssetAttribute
      description: ''
      operationId: updateAssetAttribute
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the AssetAttribute to update
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetAttribute'
        description: Details of the AssetAttribute to be created
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetAttribute'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
    delete:
      tags:
        - assetAttribute
      summary: Delete an AssetAttribute
      description: ''
      operationId: deleteAssetAttribute
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the AssetAttribute to retrieve
          schema:
            type: number
      responses:
        '204':
          description: Successful operation
      security:
        - authorization: []
          apiKeyAuth: []
  /core/material-attributes:
    get:
      tags:
        - materialAttribute
      summary: Get all MaterialAttribute
      description: ''
      operationId: getAllMaterialAttribute
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MaterialAttribute'
      security:
        - authorization: []
          apiKeyAuth: []
    post:
      tags:
        - materialAttribute
      summary: Create an MaterialAttribute
      description: ''
      operationId: createMaterialAttribute
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MaterialAttribute'
        description: Details of the MaterialAttribute to be created
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaterialAttribute'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /core/material-attributes/{id}:
    get:
      tags:
        - materialAttribute
      summary: Get a specific MaterialAttribute
      description: ''
      operationId: getMaterialAttribute
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the MaterialAttribute to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaterialAttribute'
      security:
        - authorization: []
          apiKeyAuth: []
    put:
      tags:
        - materialAttribute
      summary: Update an MaterialAttribute
      description: ''
      operationId: updateMaterialAttribute
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the MaterialAttribute to update
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MaterialAttribute'
        description: Details of the MaterialAttribute to be created
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaterialAttribute'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
    delete:
      tags:
        - materialAttribute
      summary: Delete an MaterialAttribute
      description: ''
      operationId: deleteMaterialAttribute
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the MaterialAttribute to retrieve
          schema:
            type: number
      responses:
        '204':
          description: Successful operation
      security:
        - authorization: []
          apiKeyAuth: []
  /core/order-components:
    get:
      tags:
        - orderComponent
      summary: Get all OrderComponent
      description: ''
      operationId: getAllOrderComponent
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderComponent'
      security:
        - authorization: []
          apiKeyAuth: []
    post:
      tags:
        - orderComponent
      summary: Create an OrderComponent
      description: ''
      operationId: createOrderComponent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderComponent'
        description: Details of the OrderComponent to be created
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderComponent'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /core/order-components/with-consumption:
    get:
      tags:
        - orderComponent
      summary: Get the Order components with consumption
      description: ''
      operationId: getOrderComponentBom
      parameters:
        - in: query
          name: orderId
          required: true
          description: ID of the order to retrieve OrderComponentBom
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderComponent'
      security:
        - authorization: []
          apiKeyAuth: []
  /core/order-components/{id}:
    get:
      tags:
        - orderComponent
      summary: Get a specific OrderComponent
      description: ''
      operationId: getOrderComponent
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the OrderComponent to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderComponent'
      security:
        - authorization: []
          apiKeyAuth: []
    put:
      tags:
        - orderComponent
      summary: Update an OrderComponent
      description: ''
      operationId: updateOrderComponent
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the OrderComponent to update
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderComponent'
        description: Details of the OrderComponent to be created
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderComponent'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
    delete:
      tags:
        - orderComponent
      summary: Delete an OrderComponent
      description: ''
      operationId: deleteOrderComponent
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the OrderComponent to retrieve
          schema:
            type: number
      responses:
        '204':
          description: Successful operation
      security:
        - authorization: []
          apiKeyAuth: []
  /core/material-components:
    get:
      tags:
        - materialComponent
      summary: Get all MaterialComponent
      description: ''
      operationId: getAllMaterialComponent
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MaterialComponent'
      security:
        - authorization: []
          apiKeyAuth: []
    post:
      tags:
        - materialComponent
      summary: Create an MaterialComponent
      description: ''
      operationId: createMaterialComponent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MaterialComponent'
        description: Details of the MaterialComponent to be created
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaterialComponent'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /core/material-components/{id}:
    get:
      tags:
        - materialComponent
      summary: Get a specific MaterialComponent
      description: ''
      operationId: getMaterialComponent
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the MaterialComponent to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaterialComponent'
      security:
        - authorization: []
          apiKeyAuth: []
    put:
      tags:
        - materialComponent
      summary: Update an MaterialComponent
      description: ''
      operationId: updateMaterialComponent
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the MaterialComponent to update
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MaterialComponent'
        description: Details of the MaterialComponent to be created
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaterialComponent'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
    delete:
      tags:
        - materialComponent
      summary: Delete an MaterialComponent
      description: ''
      operationId: deleteMaterialComponent
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the MaterialComponent to retrieve
          schema:
            type: number
      responses:
        '204':
          description: Successful operation
      security:
        - authorization: []
          apiKeyAuth: []
  /core/material-conversions:
    get:
      tags:
        - materialConversion
      summary: Get all MaterialConversion
      description: ''
      operationId: getAllMaterialConversion
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MaterialConversion'
      security:
        - authorization: []
          apiKeyAuth: []
    post:
      tags:
        - materialConversion
      summary: Create an MaterialConversion
      description: ''
      operationId: createMaterialConversion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MaterialConversion'
        description: Details of the MaterialComponent to be created
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaterialConversion'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /core/material-conversions/{id}:
    get:
      tags:
        - materialConversions
      summary: Get a specific MaterialConversions
      description: ''
      operationId: getMaterialConversions
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the MaterialConversion to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaterialConversion'
      security:
        - authorization: []
          apiKeyAuth: []
    put:
      tags:
        - materialConversions
      summary: Update an MaterialConversion
      description: ''
      operationId: updateMaterialConversion
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the MaterialConversion to update
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MaterialConversion'
        description: Details of the MaterialConversion to be created
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaterialConversion'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
    delete:
      tags:
        - materialConversion
      summary: Delete an MaterialConversion
      description: ''
      operationId: deleteMaterialConversion
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the MaterialConversion to retrieve
          schema:
            type: number
      responses:
        '204':
          description: Successful operation
      security:
        - authorization: []
          apiKeyAuth: []
  /core/articles:
    get:
      tags:
        - Article
      summary: Get all Article
      description: ''
      operationId: getAllArticle
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ArticleSummary'
      security:
        - authorization: []
          apiKeyAuth: []
    post:
      tags:
        - Article
      summary: Create an Article
      description: ''
      operationId: createArticle
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArticleData'
        description: Details of the Article to be created
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArticleData'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /core/articles/folder/{id}:
    put:
      tags:
        - Article
      summary: Update an Article Folder
      description: ''
      operationId: updateArticleFolder
      parameters:
        - in: path
          name: id
          required: true
          description: Id of the Article Folder to update
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Article'
        description: Details of the Article Folder to be created
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
    delete:
      tags:
        - Article
      summary: Delete an Article Folder
      description: ''
      operationId: deleteArticleFolder
      parameters:
        - in: path
          name: id
          required: true
          description: Id of the Article Folder to delete
          schema:
            type: number
      responses:
        '201':
          description: Successful operation
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /core/articles/{key}:
    get:
      tags:
        - Article
      summary: Get a specific Article
      description: ''
      operationId: getArticle
      parameters:
        - in: path
          name: key
          required: true
          description: Key of the Article to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article'
      security:
        - authorization: []
          apiKeyAuth: []
    put:
      tags:
        - Article
      summary: Update an Article
      description: ''
      operationId: updateArticle
      parameters:
        - in: path
          name: key
          required: true
          description: Key of the Article to update
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArticleData'
        description: Details of the Article to be created
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArticleKey'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
    delete:
      tags:
        - Article
      summary: Delete an Article
      description: ''
      operationId: deleteArticle
      parameters:
        - in: path
          name: key
          required: true
          description: Key of the Article to delete
          schema:
            type: string
      responses:
        '204':
          description: Successful operation
      security:
        - authorization: []
          apiKeyAuth: []
  /core/articles/{key}/draft:
    get:
      tags:
        - Article
      summary: Get a specific Article draft
      description: ''
      operationId: getArticleDraft
      parameters:
        - in: path
          name: key
          required: true
          description: Key of the Article draft to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article'
      security:
        - authorization: []
          apiKeyAuth: []
    put:
      tags:
        - Article
      summary: Update an Article
      description: ''
      operationId: updateArticleDraft
      parameters:
        - in: path
          name: key
          required: true
          description: Key of the Article to update
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArticleData'
        description: Details of the Article to be created
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArticleKey'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
    delete:
      tags:
        - Article
      summary: Delete an Article
      description: ''
      operationId: deleteArticleDraft
      parameters:
        - in: path
          name: key
          required: true
          description: Key of the Article to delete
          schema:
            type: string
      responses:
        '204':
          description: Successful operation
      security:
        - authorization: []
          apiKeyAuth: []
  /activity/activity-classes:
    get:
      tags:
        - activityClass
      summary: Get all ActivityClass
      description: ''
      operationId: getAllActivityClass
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActivityClass'
      security:
        - authorization: []
          apiKeyAuth: []
    post:
      tags:
        - activityClass
      summary: Create an ActivityClass
      description: ''
      operationId: createActivityClass
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityClass'
        description: Details of the ActivityClass to be created
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityClass'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /activity/activity-classes/{id}:
    get:
      tags:
        - activityClass
      summary: Get a specific ActivityClass
      description: ''
      operationId: getActivityClass
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the ActivityClass to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityClass'
      security:
        - authorization: []
          apiKeyAuth: []
    put:
      tags:
        - activityClass
      summary: Update an ActivityClass
      description: ''
      operationId: updateActivityClass
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the ActivityClass to update
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityClass'
        description: Details of the ActivityClass to be created
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityClass'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
    delete:
      tags:
        - activityClass
      summary: Delete an ActivityClass
      description: ''
      operationId: deleteActivityClass
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the ActivityClass to retrieve
          schema:
            type: number
      responses:
        '204':
          description: Successful operation
      security:
        - authorization: []
          apiKeyAuth: []
  /core/dashboards:
    get:
      tags:
        - dashboard
      summary: Get all Dashboard
      description: ''
      operationId: getAllDashboard
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dashboard'
      security:
        - authorization: []
          apiKeyAuth: []
    post:
      tags:
        - dashboard
      summary: Create an Dashboard
      description: ''
      operationId: createDashboard
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dashboard'
        description: Details of the Dashboard to be created
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dashboard'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /core/dashboards/{id}:
    get:
      tags:
        - dashboard
      summary: Get a specific Dashboard
      description: ''
      operationId: getDashboard
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the Dashboard to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dashboard'
      security:
        - authorization: []
          apiKeyAuth: []
    put:
      tags:
        - dashboard
      summary: Update an Dashboard
      description: ''
      operationId: updateDashboard
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the Dashboard to update
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dashboard'
        description: Details of the Dashboard to be created
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dashboard'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
    delete:
      tags:
        - dashboard
      summary: Delete an Dashboard
      description: ''
      operationId: deleteDashboard
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the Dashboard to retrieve
          schema:
            type: number
      responses:
        '204':
          description: Successful operation
      security:
        - authorization: []
          apiKeyAuth: []
  /core/dashboard-elements:
    get:
      tags:
        - dashboardElement
      summary: Get all DashboardElement
      description: ''
      operationId: getAllDashboardElement
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DashboardElement'
      security:
        - authorization: []
          apiKeyAuth: []
    post:
      tags:
        - dashboardElement
      summary: Create an DashboardElement
      description: ''
      operationId: createDashboardElement
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DashboardElement'
        description: Details of the DashboardElement to be created
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardElement'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /core/dashboard-elements/{id}:
    get:
      tags:
        - dashboardElement
      summary: Get a specific DashboardElement
      description: ''
      operationId: getDashboardElement
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the DashboardElement to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardElement'
      security:
        - authorization: []
          apiKeyAuth: []
    put:
      tags:
        - dashboardElement
      summary: Update an DashboardElement
      description: ''
      operationId: updateDashboardElement
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the DashboardElement to update
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DashboardElement'
        description: Details of the DashboardElement to be created
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardElement'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
    delete:
      tags:
        - dashboardElement
      summary: Delete an DashboardElement
      description: ''
      operationId: deleteDashboardElement
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the DashboardElement to retrieve
          schema:
            type: number
      responses:
        '204':
          description: Successful operation
      security:
        - authorization: []
          apiKeyAuth: []
  /core/dashboard-groups:
    get:
      tags:
        - dashboardGroup
      summary: Get all DashboardGroup
      description: ''
      operationId: getAllDashboardGroup
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DashboardGroup'
      security:
        - authorization: []
          apiKeyAuth: []
    post:
      tags:
        - dashboardGroup
      summary: Create an DashboardGroup
      description: ''
      operationId: createDashboardGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DashboardGroup'
        description: Details of the DashboardGroup to be created
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardGroup'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /core/dashboard-groups/{id}:
    get:
      tags:
        - dashboardGroup
      summary: Get a specific DashboardGroup
      description: ''
      operationId: getDashboardGroup
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the DashboardGroup to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardGroup'
      security:
        - authorization: []
          apiKeyAuth: []
    put:
      tags:
        - dashboardGroup
      summary: Update an DashboardGroup
      description: ''
      operationId: updateDashboardGroup
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the DashboardGroup to update
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DashboardGroup'
        description: Details of the DashboardGroup to be created
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardGroup'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
    delete:
      tags:
        - dashboardGroup
      summary: Delete an DashboardGroup
      description: ''
      operationId: deleteDashboardGroup
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the DashboardGroup to retrieve
          schema:
            type: number
      responses:
        '204':
          description: Successful operation
      security:
        - authorization: []
          apiKeyAuth: []
  /core/attribute-groups:
    get:
      tags:
        - attributeGroup
      summary: Get all AttributeGroup
      description: ''
      operationId: getAllAttributeGroup
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AttributeGroup'
      security:
        - authorization: []
          apiKeyAuth: []
    post:
      tags:
        - attributeGroup
      summary: Create an AttributeGroup
      description: ''
      operationId: createAttributeGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributeGroup'
        description: Details of the AttributeGroup to be created
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttributeGroup'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /core/attribute-groups/{id}:
    get:
      tags:
        - attributeGroup
      summary: Get a specific AttributeGroup
      description: ''
      operationId: getAttributeGroup
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the AttributeGroup to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttributeGroup'
      security:
        - authorization: []
          apiKeyAuth: []
    put:
      tags:
        - attributeGroup
      summary: Update an AttributeGroup
      description: ''
      operationId: updateAttributeGroup
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the AttributeGroup to update
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributeGroup'
        description: Details of the AttributeGroup to be created
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttributeGroup'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
    delete:
      tags:
        - attributeGroup
      summary: Delete an AttributeGroup
      description: ''
      operationId: deleteAttributeGroup
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the AttributeGroup to retrieve
          schema:
            type: number
      responses:
        '204':
          description: Successful operation
      security:
        - authorization: []
          apiKeyAuth: []
  /core/attribute-group-assignments:
    get:
      tags:
        - attributeGroupAssignment
      summary: Get all AttributeGroupAssignment
      description: ''
      operationId: getAllAttributeGroupAssignment
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AttributeGroupAssignment'
      security:
        - authorization: []
          apiKeyAuth: []
    post:
      tags:
        - attributeGroupAssignment
      summary: Create an AttributeGroupAssignment
      description: ''
      operationId: createAttributeGroupAssignment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributeGroupAssignment'
        description: Details of the AttributeGroupAssignment to be created
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttributeGroupAssignment'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /core/attribute-group-assignments/{id}:
    get:
      tags:
        - attributeGroupAssignment
      summary: Get a specific AttributeGroupAssignment
      description: ''
      operationId: getAttributeGroupAssignment
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the AttributeGroupAssignment to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttributeGroupAssignment'
      security:
        - authorization: []
          apiKeyAuth: []
    put:
      tags:
        - attributeGroupAssignment
      summary: Update an AttributeGroupAssignment
      description: ''
      operationId: updateAttributeGroupAssignment
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the AttributeGroupAssignment to update
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributeGroupAssignment'
        description: Details of the AttributeGroupAssignment to be created
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttributeGroupAssignment'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
    delete:
      tags:
        - attributeGroupAssignment
      summary: Delete an AttributeGroupAssignment
      description: ''
      operationId: deleteAttributeGroupAssignment
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the AttributeGroupAssignment to retrieve
          schema:
            type: number
      responses:
        '204':
          description: Successful operation
      security:
        - authorization: []
          apiKeyAuth: []
  /core/attribute-group-items:
    get:
      tags:
        - attributeGroupItem
      summary: Get all AttributeGroupItem
      description: ''
      operationId: getAllAttributeGroupItem
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AttributeGroupItem'
      security:
        - authorization: []
          apiKeyAuth: []
    post:
      tags:
        - attributeGroupItem
      summary: Create an AttributeGroupItem
      description: ''
      operationId: createAttributeGroupItem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributeGroupItem'
        description: Details of the AttributeGroupItem to be created
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttributeGroupItem'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /core/attribute-group-items/{id}:
    get:
      tags:
        - attributeGroupItem
      summary: Get a specific AttributeGroupItem
      description: ''
      operationId: getAttributeGroupItem
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the AttributeGroupItem to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttributeGroupItem'
      security:
        - authorization: []
          apiKeyAuth: []
    put:
      tags:
        - attributeGroupItem
      summary: Update an AttributeGroupItem
      description: ''
      operationId: updateAttributeGroupItem
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the AttributeGroupItem to update
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributeGroupItem'
        description: Details of the AttributeGroupItem to be created
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttributeGroupItem'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
    delete:
      tags:
        - attributeGroupItem
      summary: Delete an AttributeGroupItem
      description: ''
      operationId: deleteAttributeGroupItem
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the AttributeGroupItem to retrieve
          schema:
            type: number
      responses:
        '204':
          description: Successful operation
      security:
        - authorization: []
          apiKeyAuth: []
  /core/calendars:
    get:
      tags:
        - calendar
      summary: Get all Calendar
      description: ''
      operationId: getAllCalendar
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Calendar'
      security:
        - authorization: []
          apiKeyAuth: []
    post:
      tags:
        - calendar
      summary: Create an Calendar
      description: ''
      operationId: createCalendar
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Calendar'
        description: Details of the Calendar to be created
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Calendar'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /core/calendars/{id}:
    get:
      tags:
        - calendar
      summary: Get a specific Calendar
      description: ''
      operationId: getCalendar
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the Calendar to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Calendar'
      security:
        - authorization: []
          apiKeyAuth: []
    put:
      tags:
        - calendar
      summary: Update an Calendar
      description: ''
      operationId: updateCalendar
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the Calendar to update
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Calendar'
        description: Details of the Calendar to be created
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Calendar'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
    delete:
      tags:
        - calendar
      summary: Delete an Calendar
      description: ''
      operationId: deleteCalendar
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the Calendar to retrieve
          schema:
            type: number
      responses:
        '204':
          description: Successful operation
      security:
        - authorization: []
          apiKeyAuth: []
  /core/calendar-items:
    get:
      tags:
        - calendarItem
      summary: Get all CalendarItem
      description: ''
      operationId: getAllCalendarItem
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CalendarItem'
      security:
        - authorization: []
          apiKeyAuth: []
    post:
      tags:
        - calendarItem
      summary: Create an CalendarItem
      description: ''
      operationId: createCalendarItem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CalendarItem'
        description: Details of the CalendarItem to be created
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalendarItem'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /core/calendar-items/{id}:
    get:
      tags:
        - calendarItem
      summary: Get a specific CalendarItem
      description: ''
      operationId: getCalendarItem
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the CalendarItem to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalendarItem'
      security:
        - authorization: []
          apiKeyAuth: []
    put:
      tags:
        - calendarItem
      summary: Update an CalendarItem
      description: ''
      operationId: updateCalendarItem
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the CalendarItem to update
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CalendarItem'
        description: Details of the CalendarItem to be created
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalendarItem'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
    delete:
      tags:
        - calendarItem
      summary: Delete an CalendarItem
      description: ''
      operationId: deleteCalendarItem
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the CalendarItem to retrieve
          schema:
            type: number
      responses:
        '204':
          description: Successful operation
      security:
        - authorization: []
          apiKeyAuth: []
  /core/shift-instances:
    get:
      tags:
        - shiftInstance
      summary: Get all ShiftInstance
      description: ''
      operationId: getAllShiftInstance
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShiftInstance'
      security:
        - authorization: []
          apiKeyAuth: []
    post:
      tags:
        - shiftInstance
      summary: Create an ShiftInstance
      description: ''
      operationId: createShiftInstance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShiftInstance'
        description: Details of the ShiftInstance to be created
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShiftInstance'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /core/shift-instances/{id}:
    get:
      tags:
        - shiftInstance
      summary: Get a specific ShiftInstance
      description: ''
      operationId: getShiftInstance
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the ShiftInstance to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShiftInstance'
      security:
        - authorization: []
          apiKeyAuth: []
    put:
      tags:
        - shiftInstance
      summary: Update an ShiftInstance
      description: ''
      operationId: updateShiftInstance
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the ShiftInstance to update
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShiftInstance'
        description: Details of the ShiftInstance to be created
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShiftInstance'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
    delete:
      tags:
        - shiftInstance
      summary: Delete an ShiftInstance
      description: ''
      operationId: deleteShiftInstance
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the ShiftInstance to retrieve
          schema:
            type: number
      responses:
        '204':
          description: Successful operation
      security:
        - authorization: []
          apiKeyAuth: []
  /core/shift-instances/{id}/close:
    put:
      tags:
        - shiftInstance
      summary: Closes a ShiftInstance
      description: ''
      operationId: closeShift
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the ShiftInstance to update
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShiftInstance'
        description: Details of the ShiftInstance to be created
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShiftInstance'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /core/asset-downtime-periods:
    get:
      tags:
        - assetDowntimePeriod
      summary: Get all AssetDowntimePeriod
      description: ''
      operationId: getAllAssetDowntimePeriod
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssetDowntimePeriod'
      security:
        - authorization: []
          apiKeyAuth: []
    post:
      tags:
        - assetDowntimePeriod
      summary: Create an AssetDowntimePeriod
      description: ''
      operationId: createAssetDowntimePeriod
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetDowntimePeriod'
        description: Details of the AssetDowntimePeriod to be created
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetDowntimePeriod'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /core/asset-downtime-periods/{id}:
    get:
      tags:
        - assetDowntimePeriod
      summary: Get a specific AssetDowntimePeriod
      description: ''
      operationId: getAssetDowntimePeriod
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the AssetDowntimePeriod to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetDowntimePeriod'
      security:
        - authorization: []
          apiKeyAuth: []
    put:
      tags:
        - assetDowntimePeriod
      summary: Update an AssetDowntimePeriod
      description: ''
      operationId: updateAssetDowntimePeriod
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the AssetDowntimePeriod to update
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetDowntimePeriod'
        description: Details of the AssetDowntimePeriod to be created
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetDowntimePeriod'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
    delete:
      tags:
        - assetDowntimePeriod
      summary: Delete an AssetDowntimePeriod
      description: ''
      operationId: deleteAssetDowntimePeriod
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the AssetDowntimePeriod to retrieve
          schema:
            type: number
      responses:
        '204':
          description: Successful operation
      security:
        - authorization: []
          apiKeyAuth: []
  /core/shift-templates:
    get:
      tags:
        - shiftTemplate
      summary: Get all ShiftTemplate
      description: ''
      operationId: getAllShiftTemplate
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShiftTemplate'
      security:
        - authorization: []
          apiKeyAuth: []
    post:
      tags:
        - shiftTemplate
      summary: Create an ShiftTemplate
      description: ''
      operationId: createShiftTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShiftTemplate'
        description: Details of the ShiftTemplate to be created
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShiftTemplate'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /core/shift-templates/{id}:
    get:
      tags:
        - shiftTemplate
      summary: Get a specific ShiftTemplate
      description: ''
      operationId: getShiftTemplate
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the ShiftTemplate to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShiftTemplate'
      security:
        - authorization: []
          apiKeyAuth: []
    put:
      tags:
        - shiftTemplate
      summary: Update an ShiftTemplate
      description: ''
      operationId: updateShiftTemplate
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the ShiftTemplate to update
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShiftTemplate'
        description: Details of the ShiftTemplate to be created
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShiftTemplate'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
    delete:
      tags:
        - shiftTemplate
      summary: Delete an ShiftTemplate
      description: ''
      operationId: deleteShiftTemplate
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the ShiftTemplate to retrieve
          schema:
            type: number
      responses:
        '204':
          description: Successful operation
      security:
        - authorization: []
          apiKeyAuth: []
  /core/shift-template-items:
    get:
      tags:
        - shiftTemplateItem
      summary: Get all ShiftTemplateItem
      description: ''
      operationId: getAllShiftTemplateItem
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShiftTemplateItem'
      security:
        - authorization: []
          apiKeyAuth: []
    post:
      tags:
        - shiftTemplateItem
      summary: Create an ShiftTemplateItem
      description: ''
      operationId: createShiftTemplateItem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShiftTemplateItem'
        description: Details of the ShiftTemplateItem to be created
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShiftTemplateItem'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /core/shift-template-items/{id}:
    get:
      tags:
        - shiftTemplateItem
      summary: Get a specific ShiftTemplateItem
      description: ''
      operationId: getShiftTemplateItem
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the ShiftTemplateItem to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShiftTemplateItem'
      security:
        - authorization: []
          apiKeyAuth: []
    put:
      tags:
        - shiftTemplateItem
      summary: Update an ShiftTemplateItem
      description: ''
      operationId: updateShiftTemplateItem
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the ShiftTemplateItem to update
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShiftTemplateItem'
        description: Details of the ShiftTemplateItem to be created
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShiftTemplateItem'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
    delete:
      tags:
        - shiftTemplateItem
      summary: Delete an ShiftTemplateItem
      description: ''
      operationId: deleteShiftTemplateItem
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the ShiftTemplateItem to retrieve
          schema:
            type: number
      responses:
        '204':
          description: Successful operation
      security:
        - authorization: []
          apiKeyAuth: []
  /core/site-users:
    get:
      tags:
        - siteUser
      summary: Get all SiteUser
      description: ''
      operationId: getAllSiteUser
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SiteUser'
      security:
        - authorization: []
          apiKeyAuth: []
    post:
      tags:
        - siteUser
      summary: Create an SiteUser
      description: ''
      operationId: createSiteUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SiteUser'
        description: Details of the SiteUser to be created
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteUser'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /core/site-users/{id}:
    get:
      tags:
        - siteUser
      summary: Get a specific SiteUser
      description: ''
      operationId: getSiteUser
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the SiteUser to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteUser'
      security:
        - authorization: []
          apiKeyAuth: []
    put:
      tags:
        - siteUser
      summary: Update an SiteUser
      description: ''
      operationId: updateSiteUser
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the SiteUser to update
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SiteUser'
        description: Details of the SiteUser to be created
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteUser'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
    delete:
      tags:
        - siteUser
      summary: Delete an SiteUser
      description: ''
      operationId: deleteSiteUser
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the SiteUser to retrieve
          schema:
            type: number
      responses:
        '204':
          description: Successful operation
      security:
        - authorization: []
          apiKeyAuth: []
  /core/order-templates:
    get:
      tags:
        - orderTemplate
      summary: Get all OrderTemplate
      description: ''
      operationId: getAllOrderTemplate
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderTemplate'
      security:
        - authorization: []
          apiKeyAuth: []
    post:
      tags:
        - orderTemplate
      summary: Create an OrderTemplate
      description: ''
      operationId: createOrderTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderTemplate'
        description: Details of the OrderTemplate to be created
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderTemplate'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /core/order-templates/{id}:
    get:
      tags:
        - orderTemplate
      summary: Get a specific OrderTemplate
      description: ''
      operationId: getOrderTemplate
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the OrderTemplate to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderTemplate'
      security:
        - authorization: []
          apiKeyAuth: []
    put:
      tags:
        - orderTemplate
      summary: Update an OrderTemplate
      description: ''
      operationId: updateOrderTemplate
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the OrderTemplate to update
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderTemplate'
        description: Details of the OrderTemplate to be created
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderTemplate'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
    delete:
      tags:
        - orderTemplate
      summary: Delete an OrderTemplate
      description: ''
      operationId: deleteOrderTemplate
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the OrderTemplate to retrieve
          schema:
            type: number
      responses:
        '204':
          description: Successful operation
      security:
        - authorization: []
          apiKeyAuth: []
  /core/movement-types:
    get:
      tags:
        - MovementTypes
      summary: Get all MovementTypes
      description: ''
      operationId: getMovementTypes
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MovementType'
      security:
        - authorization: []
          apiKeyAuth: []
    post:
      tags:
        - orderTemplate
      summary: Create an MovementTypes
      description: ''
      operationId: postMovementTypes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MovementType'
        description: Details of the MovementTypes to be created
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MovementType'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /core/movement-types/{id}:
    get:
      tags:
        - MovementType
      summary: Get a specific MovementType
      description: ''
      operationId: getMovementType
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the MovementType to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MovementType'
      security:
        - authorization: []
          apiKeyAuth: []
    put:
      tags:
        - MovementType
      summary: Update an MovementType
      description: ''
      operationId: updateMovementType
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the MovementType to update
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MovementType'
        description: Details of the MovementType to be created
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MovementType'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
    delete:
      tags:
        - MovementType
      summary: Delete an MovementType
      description: ''
      operationId: deleteMovementType
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the MovementType to retrieve
          schema:
            type: number
      responses:
        '204':
          description: Successful operation
      security:
        - authorization: []
          apiKeyAuth: []
  /core/event-schedules:
    get:
      tags:
        - eventSchedules
      summary: Get all EventSchedules
      description: ''
      operationId: getEventSchedules
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventSchedule'
      security:
        - authorization: []
          apiKeyAuth: []
    post:
      tags:
        - eventSchedules
      summary: Create an EventSchedule
      description: ''
      operationId: postEventSchedules
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventSchedule'
        description: Details of the EventSchedule to be created
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSchedule'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /core/event-schedules/{id}:
    get:
      tags:
        - EventSchedules
      summary: Get a specific EventSchedule
      description: ''
      operationId: getEventSchedule
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the EventSchedule to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSchedule'
      security:
        - authorization: []
    put:
      tags:
        - EventSchedules
      summary: Update an EventSchedule
      description: ''
      operationId: updateEventSchedule
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the EventSchedule to update
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventSchedule'
        description: Details of the EventSchedule to be created
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSchedule'
        '400':
          description: Invalid format
      security:
        - authorization: []
    delete:
      tags:
        - EventSchedules
      summary: Delete an EventSchedule
      description: ''
      operationId: deleteEventSchedule
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the EventSchedule to retrieve
          schema:
            type: number
      responses:
        '204':
          description: Successful operation
      security:
        - authorization: []
  /tenant/authorization-rules:
    get:
      tags:
        - AuthorizationRules
      summary: Get all AuthorizationRules
      description: ''
      operationId: getAuthorizationRules
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuthorizationRule'
      security:
        - authorization: []
          apiKeyAuth: []
    patch:
      tags:
        - AuthorizationRule
      summary: Patch an AuthorizationRule
      description: ''
      operationId: patchAuthorizationRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizationRule'
        description: Details of the AuthorizationRule to be created
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationRule'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
    post:
      tags:
        - orderTemplate
      summary: Create an AuthorizationRules
      description: ''
      operationId: postAuthorizationRules
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizationRule'
        description: Details of the AuthorizationRules to be created
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationRule'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
  /tenant/authorization-rules/role/{name}:
    delete:
      tags:
        - AuthorizationRule
      summary: Delete an AuthorizationRule by role
      description: ''
      operationId: deleteAuthorizationRuleRole
      parameters:
        - in: path
          name: name
          required: true
          description: Name of the AuthorizationRule Role to delete
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
      security:
        - authorization: []
          apiKeyAuth: []
  /tenant/authorization-rules/{id}:
    get:
      tags:
        - AuthorizationRule
      summary: Get a specific AuthorizationRule
      description: ''
      operationId: getAuthorizationRule
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the AuthorizationRule to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationRule'
      security:
        - authorization: []
          apiKeyAuth: []
    put:
      tags:
        - AuthorizationRule
      summary: Update an AuthorizationRule
      description: ''
      operationId: updateAuthorizationRule
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the AuthorizationRule to update
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizationRule'
        description: Details of the AuthorizationRule to be created
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationRule'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
    delete:
      tags:
        - AuthorizationRule
      summary: Delete an AuthorizationRule
      description: ''
      operationId: deleteAuthorizationRule
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the AuthorizationRule to retrieve
          schema:
            type: number
      responses:
        '204':
          description: Successful operation
      security:
        - authorization: []
          apiKeyAuth: []
  /tenant/reports/pre-signed-url:
    get:
      tags:
        - Reports
      summary: Get a specific report url
      description: ''
      operationId: getReportsUrl
      parameters:
        - in: query
          name: type
          required: true
          description: The type of report
          schema:
            type: string
        - in: query
          name: date
          required: true
          description: The day to retrieve export for in YYY-MM-DD
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
                    nullable: false
      security:
        - authorization: []
          apiKeyAuth: []
  /tenant/export-data/pre-signed-url:
    get:
      tags:
        - DataExport
      summary: Get a specific data export url
      description: ''
      operationId: getExportedDataUrl
      parameters:
        - in: query
          name: type
          required: true
          description: The type of export
          schema:
            type: string
        - in: query
          name: date
          required: true
          description: The day to retrieve export for in YYY-MM-DD
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
                    nullable: false
      security:
        - authorization: []
          apiKeyAuth: []
  /generate-barcode/{value}:
    get:
      parameters:
        - in: path
          name: value
          required: true
          description: The barcode value
          schema:
            type: string
        - in: query
          name: format
          required: false
          description: The barcode format (defaults to Code 128)
          schema:
            type: string
      description: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  image:
                    type: string
  /core/movement-type-fields:
    get:
      tags:
        - movementTypeField
      summary: Get all MovementTypeField
      description: ''
      operationId: getAllMovementTypeField
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MovementTypeField'
      security:
        - authorization: []
    post:
      tags:
        - movementTypeField
      summary: Create an MovementTypeField
      description: ''
      operationId: createMovementTypeField
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MovementTypeField'
        description: Details of the MovementTypeField to be created
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MovementTypeField'
        '400':
          description: Invalid format
      security:
        - authorization: []
    options:
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      tags:
        - CORS
      responses:
        '200':
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
  /core/movement-type-fields/{id}:
    get:
      tags:
        - movementTypeField
      summary: Get a specific MovementTypeField
      description: ''
      operationId: getMovementTypeField
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the MovementTypeField to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MovementTypeField'
      security:
        - authorization: []
    put:
      tags:
        - movementTypeField
      summary: Update an MovementTypeField
      description: ''
      operationId: updateMovementTypeField
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the MovementTypeField to update
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MovementTypeField'
        description: Details of the MovementTypeField to be created
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MovementTypeField'
        '400':
          description: Invalid format
      security:
        - authorization: []
    delete:
      tags:
        - movementTypeField
      summary: Delete an MovementTypeField
      description: ''
      operationId: deleteMovementTypeField
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the MovementTypeField to retrieve
          schema:
            type: number
      responses:
        '204':
          description: Successful operation
      security:
        - authorization: []
    options:
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      tags:
        - CORS
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the MovementTypeField to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
  /core/order-number-attributes:
    get:
      tags:
        - orderNumberAttribute
      summary: Get all OrderNumberAttribute
      description: ''
      operationId: getAllOrderNumberAttribute
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderNumberAttribute'
      security:
        - authorization: []
    post:
      tags:
        - orderNumberAttribute
      summary: Create an OrderNumberAttribute
      description: ''
      operationId: createOrderNumberAttribute
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderNumberAttribute'
        description: Details of the OrderNumberAttribute to be created
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderNumberAttribute'
        '400':
          description: Invalid format
      security:
        - authorization: []
    options:
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      tags:
        - CORS
      responses:
        '200':
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
  /core/order-number-attributes/{id}:
    get:
      tags:
        - orderNumberAttribute
      summary: Get a specific OrderNumberAttribute
      description: ''
      operationId: getOrderNumberAttribute
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the OrderNumberAttribute to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderNumberAttribute'
      security:
        - authorization: []
    put:
      tags:
        - orderNumberAttribute
      summary: Update an OrderNumberAttribute
      description: ''
      operationId: updateOrderNumberAttribute
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the OrderNumberAttribute to update
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderNumberAttribute'
        description: Details of the OrderNumberAttribute to be created
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderNumberAttribute'
        '400':
          description: Invalid format
      security:
        - authorization: []
    delete:
      tags:
        - orderNumberAttribute
      summary: Delete an OrderNumberAttribute
      description: ''
      operationId: deleteOrderNumberAttribute
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the OrderNumberAttribute to retrieve
          schema:
            type: number
      responses:
        '204':
          description: Successful operation
      security:
        - authorization: []
    options:
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      tags:
        - CORS
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the OrderNumberAttribute to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
  /core/order-number-attributes/upsert:
    post:
      tags:
        - orderNumberAttribute
      summary: Upsert one or more OrderNumberAttribute
      description: Upserts order number attribute records
      operationId: upsertOrderNumberAttribute
      requestBody:
        content:
          application/json:
            schema:
              type: array
              example:
                - orderNumber: Order Number
                  attribute: Attribute Name
                  stringValue: Attribute value
                  numericValue: '123'
                  booleanValue: true
              items:
                $ref: '#/components/schemas/OrderNumberAttribute'
        description: Details of the OrderNumberAttribute to be created
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderNumberAttribute'
      security:
        - authorization: []
    options:
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      tags:
        - CORS
      responses:
        '200':
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
  /ai/activity-item-suggestions:
    post:
      tags:
        - ai
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                prompt:
                  type: string
                  title: Initial Prompt
                dialog:
                  type: object
                  title: An ongoing dialog
      summary: Activity item suggestions
      description: ''
      operationId: Activity Item Suggestion
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
      security:
        - authorization: []
  /ai/read-document/:
    post:
      tags:
        - ai
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  enum:
                    - FORM
                    - OCR
                image:
                  type: string
                  format: binary
      summary: Extract form from image
      description: ''
      operationId: Extract form from image
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
      security:
        - authorization: []
  /core/order-template-components:
    get:
      tags:
        - orderTemplateComponent
      summary: Get all OrderTemplateComponent
      description: ''
      operationId: getAllOrderTemplateComponent
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderTemplateComponent'
      security:
        - authorization: []
    post:
      tags:
        - orderTemplateComponent
      summary: Create an OrderTemplateComponent
      description: ''
      operationId: createOrderTemplateComponent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderTemplateComponent'
        description: Details of the OrderTemplateComponent to be created
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderTemplateComponent'
        '400':
          description: Invalid format
      security:
        - authorization: []
    options:
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      tags:
        - CORS
      responses:
        '200':
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
  /core/order-template-components/{id}:
    get:
      tags:
        - orderTemplateComponent
      summary: Get a specific OrderTemplateComponent
      description: ''
      operationId: getOrderTemplateComponent
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the OrderTemplateComponent to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderTemplateComponent'
      security:
        - authorization: []
    put:
      tags:
        - orderTemplateComponent
      summary: Update an OrderTemplateComponent
      description: ''
      operationId: updateOrderTemplateComponent
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the OrderTemplateComponent to update
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderTemplateComponent'
        description: Details of the OrderTemplateComponent to be created
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderTemplateComponent'
        '400':
          description: Invalid format
      security:
        - authorization: []
    delete:
      tags:
        - orderTemplateComponent
      summary: Delete an OrderTemplateComponent
      description: ''
      operationId: deleteOrderTemplateComponent
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the OrderTemplateComponent to retrieve
          schema:
            type: number
      responses:
        '204':
          description: Successful operation
      security:
        - authorization: []
    options:
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      tags:
        - CORS
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the OrderTemplateComponent to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
  /core/event-relays:
    get:
      tags:
        - eventRelay
      summary: Get all EventRelay
      description: ''
      operationId: getAllEventRelay
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventRelay'
      security:
        - authorization: []
    post:
      tags:
        - eventRelay
      summary: Create an EventRelay
      description: ''
      operationId: createEventRelay
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventRelay'
        description: Details of the EventRelay to be created
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventRelay'
        '400':
          description: Invalid format
      security:
        - authorization: []
    options:
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      tags:
        - CORS
      responses:
        '200':
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
  /core/event-relays/{id}:
    get:
      tags:
        - eventRelay
      summary: Get a specific EventRelay
      description: ''
      operationId: getEventRelay
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the EventRelay to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventRelay'
      security:
        - authorization: []
    put:
      tags:
        - eventRelay
      summary: Update an EventRelay
      description: ''
      operationId: updateEventRelay
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the EventRelay to update
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventRelay'
        description: Details of the EventRelay to be created
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventRelay'
        '400':
          description: Invalid format
      security:
        - authorization: []
    delete:
      tags:
        - eventRelay
      summary: Delete an EventRelay
      description: ''
      operationId: deleteEventRelay
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the EventRelay to retrieve
          schema:
            type: number
      responses:
        '204':
          description: Successful operation
      security:
        - authorization: []
    options:
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      tags:
        - CORS
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the EventRelay to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
  /report/report-templates:
    get:
      tags:
        - reportTemplate
      summary: Get all ReportTemplate
      description: ''
      operationId: getAllReportTemplate
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReportTemplate'
      security:
        - authorization: []
    post:
      tags:
        - reportTemplate
      summary: Create an ReportTemplate
      description: ''
      operationId: createReportTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportTemplate'
        description: Details of the ReportTemplate to be created
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportTemplate'
        '400':
          description: Invalid format
      security:
        - authorization: []
    options:
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      tags:
        - CORS
      responses:
        '200':
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
  /report/report-templates/html-template:
    get:
      tags:
        - reportService
      summary: Get all Html Templates
      description: ''
      operationId: getHtmlTemplate
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
      security:
        - authorization: []
  /report/report-templates/html-template/{key}:
    get:
      tags:
        - reportService
      summary: Get one html template content
      description: ''
      operationId: getHtmlTemplateByKey
      parameters:
        - in: path
          name: key
          required: true
          description: Key of the Html template to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
      security:
        - authorization: []
  /report/report-templates/{id}:
    get:
      tags:
        - reportTemplate
      summary: Get a specific ReportTemplate
      description: ''
      operationId: getReportTemplate
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the ReportTemplate to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportTemplate'
      security:
        - authorization: []
    put:
      tags:
        - reportTemplate
      summary: Update an ReportTemplate
      description: ''
      operationId: updateReportTemplate
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the ReportTemplate to update
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportTemplate'
        description: Details of the ReportTemplate to be created
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportTemplate'
        '400':
          description: Invalid format
      security:
        - authorization: []
    delete:
      tags:
        - reportTemplate
      summary: Delete an ReportTemplate
      description: ''
      operationId: deleteReportTemplate
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the ReportTemplate to retrieve
          schema:
            type: number
      responses:
        '204':
          description: Successful operation
      security:
        - authorization: []
    options:
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      tags:
        - CORS
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the ReportTemplate to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
  /report/report-templates/{id}/order-data/{orderId}:
    get:
      tags:
        - reportService
      summary: Get data for an order based on the report template
      description: ''
      operationId: getReportTemplateOrderData
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the ReportTemplate to retrieve
          schema:
            type: number
        - in: path
          name: orderId
          required: true
          description: ID of the order to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportTemplateOrderData'
      security:
        - authorization: []
  /report/report-templates/{id}/list-generated/{orderId}:
    get:
      tags:
        - reportService
      summary: Get list order based on the report template
      description: ''
      operationId: getReportTemplateGenerated
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the ReportTemplate to retrieve
          schema:
            type: number
        - in: path
          name: orderId
          required: true
          description: ID of the order to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  key:
                    type: string
                  createdAt:
                    type: string
      security:
        - authorization: []
  /report/report-templates/preview-report:
    post:
      tags:
        - reportService
      summary: Preview a report based on content
      description: ''
      operationId: previewReport
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                reportTemplateId:
                  type: number
                orderId:
                  type: number
                templateBody:
                  type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
      security:
        - authorization: []
  /report/report-templates/download-report:
    post:
      tags:
        - reportService
      summary: Download a report based on a key
      description: ''
      operationId: downloadReport
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                key:
                  type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
      security:
        - authorization: []
  /report/report-templates/{id}/generate-report/{orderId}:
    post:
      tags:
        - reportService
      summary: Generates a report for an order
      description: ''
      operationId: generateReportForOrder
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the ReportTemplate to retrieve
          schema:
            type: number
        - in: path
          name: orderId
          required: true
          description: ID of the order to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
      security:
        - authorization: []
  /core/asset-run-rates:
    get:
      tags:
        - assetRunRate
      summary: Get all AssetRunRate
      description: ''
      operationId: getAllAssetRunRate
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssetRunRate'
      security:
        - authorization: []
    post:
      tags:
        - assetRunRate
      summary: Create an AssetRunRate
      description: ''
      operationId: createAssetRunRate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetRunRate'
        description: Details of the AssetRunRate to be created
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetRunRate'
        '400':
          description: Invalid format
      security:
        - authorization: []
    options:
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      tags:
        - CORS
      responses:
        '200':
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
  /core/asset-run-rates/{id}:
    get:
      tags:
        - assetRunRate
      summary: Get a specific AssetRunRate
      description: ''
      operationId: getAssetRunRate
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the AssetRunRate to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetRunRate'
      security:
        - authorization: []
    put:
      tags:
        - assetRunRate
      summary: Update an AssetRunRate
      description: ''
      operationId: updateAssetRunRate
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the AssetRunRate to update
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetRunRate'
        description: Details of the AssetRunRate to be created
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetRunRate'
        '400':
          description: Invalid format
      security:
        - authorization: []
    delete:
      tags:
        - assetRunRate
      summary: Delete an AssetRunRate
      description: ''
      operationId: deleteAssetRunRate
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the AssetRunRate to retrieve
          schema:
            type: number
      responses:
        '204':
          description: Successful operation
      security:
        - authorization: []
    options:
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      tags:
        - CORS
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the AssetRunRate to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
  /core/run-rate-templates:
    get:
      tags:
        - variableRunRate
      summary: Get all VariableRunRate
      description: ''
      operationId: getAllVariableRunRate
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VariableRunRate'
      security:
        - authorization: []
    post:
      tags:
        - variableRunRate
      summary: Create an VariableRunRate
      description: ''
      operationId: createVariableRunRate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VariableRunRate'
        description: Details of the VariableRunRate to be created
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VariableRunRate'
        '400':
          description: Invalid format
      security:
        - authorization: []
    options:
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      tags:
        - CORS
      responses:
        '200':
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
  /core/run-rate-templates/{id}:
    get:
      tags:
        - variableRunRate
      summary: Get a specific VariableRunRate
      description: ''
      operationId: getVariableRunRate
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the VariableRunRate to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VariableRunRate'
      security:
        - authorization: []
    put:
      tags:
        - variableRunRate
      summary: Update an VariableRunRate
      description: ''
      operationId: updateVariableRunRate
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the VariableRunRate to update
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VariableRunRate'
        description: Details of the VariableRunRate to be created
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VariableRunRate'
        '400':
          description: Invalid format
      security:
        - authorization: []
    delete:
      tags:
        - variableRunRate
      summary: Delete an VariableRunRate
      description: ''
      operationId: deleteVariableRunRate
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the VariableRunRate to retrieve
          schema:
            type: number
      responses:
        '204':
          description: Successful operation
      security:
        - authorization: []
    options:
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      tags:
        - CORS
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the VariableRunRate to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
  /activity/activity-assignment-attributes:
    get:
      tags:
        - activityAssignmentAttribute
      summary: Get all ActivityAssignmentAttribute
      description: ''
      operationId: getAllActivityAssignmentAttribute
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActivityAssignmentAttribute'
      security:
        - authorization: []
    post:
      tags:
        - activityAssignmentAttribute
      summary: Create an ActivityAssignmentAttribute
      description: ''
      operationId: createActivityAssignmentAttribute
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityAssignmentAttribute'
        description: Details of the ActivityAssignmentAttribute to be created
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityAssignmentAttribute'
        '400':
          description: Invalid format
      security:
        - authorization: []
    options:
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      tags:
        - CORS
      responses:
        '200':
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
  /activity/activity-assignment-attributes/{id}:
    get:
      tags:
        - activityAssignmentAttribute
      summary: Get a specific ActivityAssignmentAttribute
      description: ''
      operationId: getActivityAssignmentAttribute
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the ActivityAssignmentAttribute to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityAssignmentAttribute'
      security:
        - authorization: []
    put:
      tags:
        - activityAssignmentAttribute
      summary: Update an ActivityAssignmentAttribute
      description: ''
      operationId: updateActivityAssignmentAttribute
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the ActivityAssignmentAttribute to update
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityAssignmentAttribute'
        description: Details of the ActivityAssignmentAttribute to be created
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityAssignmentAttribute'
        '400':
          description: Invalid format
      security:
        - authorization: []
    delete:
      tags:
        - activityAssignmentAttribute
      summary: Delete an ActivityAssignmentAttribute
      description: ''
      operationId: deleteActivityAssignmentAttribute
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the ActivityAssignmentAttribute to retrieve
          schema:
            type: number
      responses:
        '204':
          description: Successful operation
      security:
        - authorization: []
    options:
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      tags:
        - CORS
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the ActivityAssignmentAttribute to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
  /core/asset-meter-templates:
    get:
      tags:
        - assetHealthTemplate
      summary: Get all AssetHealthTemplate
      description: ''
      operationId: getAllAssetHealthTemplate
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssetHealthTemplate'
      security:
        - authorization: []
    post:
      tags:
        - assetHealthTemplate
      summary: Create an AssetHealthTemplate
      description: ''
      operationId: createAssetHealthTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetHealthTemplate'
        description: Details of the AssetHealthTemplate to be created
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetHealthTemplate'
        '400':
          description: Invalid format
      security:
        - authorization: []
    options:
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      tags:
        - CORS
      responses:
        '200':
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
  /core/asset-meter-templates/{id}:
    get:
      tags:
        - assetHealthTemplate
      summary: Get a specific AssetHealthTemplate
      description: ''
      operationId: getAssetHealthTemplate
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the AssetHealthTemplate to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetHealthTemplate'
      security:
        - authorization: []
    put:
      tags:
        - assetHealthTemplate
      summary: Update an AssetHealthTemplate
      description: ''
      operationId: updateAssetHealthTemplate
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the AssetHealthTemplate to update
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetHealthTemplate'
        description: Details of the AssetHealthTemplate to be created
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetHealthTemplate'
        '400':
          description: Invalid format
      security:
        - authorization: []
    delete:
      tags:
        - assetHealthTemplate
      summary: Delete an AssetHealthTemplate
      description: ''
      operationId: deleteAssetHealthTemplate
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the AssetHealthTemplate to retrieve
          schema:
            type: number
      responses:
        '204':
          description: Successful operation
      security:
        - authorization: []
    options:
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      tags:
        - CORS
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the AssetHealthTemplate to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
  /core/boards:
    get:
      tags:
        - board
      summary: Get all Board
      description: ''
      operationId: getAllBoard
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Board'
      security:
        - authorization: []
    post:
      tags:
        - board
      summary: Create an Board
      description: ''
      operationId: createBoard
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Board'
        description: Details of the Board to be created
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Board'
        '400':
          description: Invalid format
      security:
        - authorization: []
    options:
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      tags:
        - CORS
      responses:
        '200':
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
  /core/boards/{id}/create-section:
    post:
      tags:
        - createSection
      summary: Create board section
      description: ''
      operationId: getBoard
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the Board to retrieve
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BoardSectionRequest'
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Board'
      security:
        - authorization: []
  /core/boards/{id}:
    get:
      tags:
        - board
      summary: Get a specific Board
      description: ''
      operationId: createSection
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the Board to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Board'
      security:
        - authorization: []
    put:
      tags:
        - board
      summary: Update a board
      description: ''
      operationId: updateBoard
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Board'
        description: Details of the board to be updated
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Board'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
    delete:
      tags:
        - board
      summary: Delete an Board
      description: ''
      operationId: deleteBoard
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the Board to retrieve
          schema:
            type: number
      responses:
        '204':
          description: Successful operation
      security:
        - authorization: []
    options:
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      tags:
        - CORS
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the Board to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
  /core/board-items:
    get:
      tags:
        - boardItem
      summary: Get all BoardItem
      description: ''
      operationId: getAllBoardItem
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BoardItem'
      security:
        - authorization: []
    post:
      tags:
        - boardItem
      summary: Create an BoardItem
      description: ''
      operationId: createBoardItem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BoardItem'
        description: Details of the BoardItem to be created
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoardItemCreateUpdateResponse'
        '400':
          description: Invalid format
      security:
        - authorization: []
    options:
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      tags:
        - CORS
      responses:
        '200':
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
  /core/board-items/{id}:
    get:
      tags:
        - boardItem
      summary: Get a specific BoardItem
      description: ''
      operationId: getBoardItem
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the BoardItem to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoardItem'
      security:
        - authorization: []
    put:
      tags:
        - board
      summary: Update a board item
      description: ''
      operationId: updateBoardItem
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BoardItem'
        description: Details of the board item to be updated
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoardItemCreateUpdateResponse'
        '400':
          description: Invalid format
      security:
        - authorization: []
          apiKeyAuth: []
    delete:
      tags:
        - boardItem
      summary: Delete an BoardItem
      description: ''
      operationId: deleteBoardItem
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the BoardItem to retrieve
          schema:
            type: number
      responses:
        '204':
          description: Successful operation
      security:
        - authorization: []
    options:
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      tags:
        - CORS
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the BoardItem to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
  /core/board-items/file/{boardId}/{key}:
    get:
      tags:
        - boardItem
      summary: Query the url for a file
      description: Returns a s3 presigned url for a file
      operationId: getFileUrl
      parameters:
        - in: path
          name: boardId
          required: true
          description: The board id
          schema:
            type: string
        - in: path
          name: key
          required: true
          description: The id for the file
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreSignedUrl'
      security:
        - authorization: []
  /core/board-items/by-value:
    get:
      tags:
        - boardItems
      summary: Query the Board Items by a key value filter
      description: ''
      operationId: getByValue
      parameters:
        - in: query
          name: boardId
          required: true
          description: The board id
          schema:
            type: string
        - in: query
          name: column
          required: true
          description: The name of the column to filter by
          schema:
            type: string
        - in: query
          name: value
          required: true
          description: The value to filter by
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BoardItem'
      security:
        - authorization: []
  /core/closing-events:
    get:
      tags:
        - closingEvent
      summary: Get all ClosingEvent
      description: ''
      operationId: getAllClosingEvent
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClosingEvent'
      security:
        - authorization: []
    post:
      tags:
        - closingEvent
      summary: Create an ClosingEvent
      description: ''
      operationId: createClosingEvent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClosingEvent'
        description: Details of the ClosingEvent to be created
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClosingEvent'
        '400':
          description: Invalid format
      security:
        - authorization: []
    options:
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      tags:
        - CORS
      responses:
        '200':
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
  /core/closing-events/{id}:
    get:
      tags:
        - closingEvent
      summary: Get a specific ClosingEvent
      description: ''
      operationId: getClosingEvent
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the ClosingEvent to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClosingEvent'
      security:
        - authorization: []
    put:
      tags:
        - closingEvent
      summary: Update an ClosingEvent
      description: ''
      operationId: updateClosingEvent
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the ClosingEvent to update
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClosingEvent'
        description: Details of the ClosingEvent to be created
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClosingEvent'
        '400':
          description: Invalid format
      security:
        - authorization: []
    delete:
      tags:
        - closingEvent
      summary: Delete an ClosingEvent
      description: ''
      operationId: deleteClosingEvent
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the ClosingEvent to retrieve
          schema:
            type: number
      responses:
        '204':
          description: Successful operation
      security:
        - authorization: []
    options:
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      tags:
        - CORS
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the ClosingEvent to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
  /core/translations:
    get:
      tags:
        - translation
      summary: Get all Translation
      description: ''
      operationId: getAllTranslation
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Translation'
      security:
        - authorization: []
    post:
      tags:
        - translation
      summary: Create an Translation
      description: ''
      operationId: createTranslation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Translation'
        description: Details of the Translation to be created
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Translation'
        '400':
          description: Invalid format
      security:
        - authorization: []
    options:
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      tags:
        - CORS
      responses:
        '200':
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
  /core/translations/by-key:
    post:
      tags:
        - translation
      summary: Post multiple translations by key
      description: ''
      operationId: postTranslationByKey
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TranslationPatchByKeyRequest'
        description: Details of the Translation key to be updated
        required: true
      responses:
        '200':
          description: Successful operation
      security:
        - authorization: []
  /core/translations/update-language-file:
    post:
      tags:
        - Translations
      summary: Update a language file
      description: Updates the translation file for a specified language.
      operationId: updateLanguageFile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                language:
                  type: string
                  description: The language code for the translation file to update.
              required:
                - language
      responses:
        '200':
          description: Successful operation
        '400':
          description: Bad request
        '500':
          description: Internal server error
      security:
        - authorization: []
  /core/translations/file/{lang}:
    get:
      tags:
        - translation
      summary: Get all key value translations for a language
      description: ''
      operationId: getTranslationsForLang
      parameters:
        - in: path
          name: lang
          required: true
          description: Language for translations to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            object:
              example:
                key: value
                key2: value2
      security:
        - authorization: []
  /core/translations/{id}:
    get:
      tags:
        - translation
      summary: Get a specific Translation
      description: ''
      operationId: getTranslation
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the Translation to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Translation'
      security:
        - authorization: []
    put:
      tags:
        - translation
      summary: Update an Translation
      description: ''
      operationId: updateTranslation
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the Translation to update
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Translation'
        description: Details of the Translation to be created
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Translation'
        '400':
          description: Invalid format
      security:
        - authorization: []
    delete:
      tags:
        - translation
      summary: Delete an Translation
      description: ''
      operationId: deleteTranslation
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the Translation to retrieve
          schema:
            type: number
      responses:
        '204':
          description: Successful operation
      security:
        - authorization: []
    options:
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      tags:
        - CORS
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the Translation to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
  /tenant/integration-logs:
    get:
      tags:
        - integrationLog
      summary: Get all IntegrationLog
      description: ''
      operationId: getAllIntegrationLog
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IntegrationLog'
      security:
        - authorization: []
    options:
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      tags:
        - CORS
      responses:
        '200':
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
  /tenant/integration-logs/{id}:
    get:
      tags:
        - integrationLog
      summary: Get a specific IntegrationLog
      description: ''
      operationId: getIntegrationLog
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the IntegrationLog to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationLog'
      security:
        - authorization: []
    options:
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      tags:
        - CORS
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the IntegrationLog to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
  /tenant/integration-logs/{id}/retry:
    post:
      tags:
        - integrationLog
      summary: Retry an IntegrationLog
      description: ''
      operationId: retryIntegrationLog
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the Translation to retrieve
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntegrationLog'
        description: Details of the IntegrationLog to be created
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationLog'
        '400':
          description: Invalid format
      security:
        - authorization: []
  /core/site-attributes:
    get:
      tags:
        - siteAttribute
      summary: Get all SiteAttribute
      description: ''
      operationId: getAllSiteAttribute
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SiteAttribute'
      security:
        - authorization: []
    post:
      tags:
        - siteAttribute
      summary: Create an SiteAttribute
      description: ''
      operationId: createSiteAttribute
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SiteAttribute'
        description: Details of the SiteAttribute to be created
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteAttribute'
        '400':
          description: Invalid format
      security:
        - authorization: []
    options:
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      tags:
        - CORS
      responses:
        '200':
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
  /core/site-attributes/{id}:
    get:
      tags:
        - siteAttribute
      summary: Get a specific SiteAttribute
      description: ''
      operationId: getSiteAttribute
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the SiteAttribute to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteAttribute'
      security:
        - authorization: []
    put:
      tags:
        - siteAttribute
      summary: Update an SiteAttribute
      description: ''
      operationId: updateSiteAttribute
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the SiteAttribute to update
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SiteAttribute'
        description: Details of the SiteAttribute to be created
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteAttribute'
        '400':
          description: Invalid format
      security:
        - authorization: []
    delete:
      tags:
        - siteAttribute
      summary: Delete an SiteAttribute
      description: ''
      operationId: deleteSiteAttribute
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the SiteAttribute to retrieve
          schema:
            type: number
      responses:
        '204':
          description: Successful operation
      security:
        - authorization: []
    options:
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      tags:
        - CORS
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the SiteAttribute to retrieve
          schema:
            type: number
      responses:
        '200':
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
servers:
  - url: /api
components:
  securitySchemes:
    apiKeyAuth:
      type: apiKey
      in: header
      name: x-api-key
    authorization:
      type: apiKey
      in: header
      name: Authorization
  schemas:
    ActivityTemplate:
      type: object
      title: ActivityTemplate
      properties:
        id:
          type: integer
        name:
          type: string
          nullable: false
        activityKey:
          type: string
          nullable: false
        description:
          type: string
          nullable: true
        candidateGroup:
          type: string
          nullable: true
        retest:
          type: boolean
          nullable: true
        forceComment:
          type: boolean
          nullable: true
        escalateLevel1:
          type: boolean
          nullable: true
        escalateLevel2:
          type: boolean
          nullable: true
        displayOrder:
          type: number
          nullable: true
        expiryMinutes:
          type: number
          nullable: true
        createdAt:
          type: string
        updatedAt:
          type: string
        activityClass:
          $ref: '#/components/schemas/ActivityClass'
        articleKey:
          type: string
          nullable: true
        versionComment:
          type: string
          nullable: true
        skippableBy:
          type: string
          nullable: true
      required:
        - name
        - activityKey
    ActivityTriggerGroup:
      type: object
      title: ActivityTriggerGroup
      properties:
        id:
          type: integer
        name:
          type: string
          nullable: false
        createdAt:
          type: string
        updatedAt:
          type: string
      required:
        - name
    ActivityTriggerInstance:
      type: object
      title: ActivityTriggerInstance
      properties:
        id:
          type: integer
        timestamp:
          type: string
          nullable: false
        createdAt:
          type: string
        updatedAt:
          type: string
      required:
        - timestamp
    AssetClass:
      type: object
      title: AssetClass
      properties:
        id:
          type: integer
        name:
          type: string
          nullable: false
        createdAt:
          type: string
        updatedAt:
          type: string
      required:
        - name
    CurrentTimeSeries:
      type: object
      title: TimeSeries
      properties:
        assetId:
          type: number
        timestamp:
          type: string
        processVariable:
          $ref: '#/components/schemas/ProcessVariable'
        numericValue:
          type: number
          nullable: true
        stringValue:
          type: string
          nullable: true
        booleanValue:
          type: boolean
          nullable: true
    TimeSeries:
      type: object
      title: TimeSeries
      properties:
        assetId:
          type: number
        timestamp:
          type: string
        processVariableId:
          type: number
        numericValue:
          type: number
          nullable: true
        stringValue:
          type: string
          nullable: true
        booleanValue:
          type: boolean
          nullable: true
    Edge:
      type: object
      title: Edge
      properties:
        id:
          type: integer
        name:
          type: string
          nullable: false
        description:
          type: string
          nullable: true
        thingId:
          type: string
          nullable: false
        online:
          type: boolean
          nullable: true
        createdAt:
          type: string
        updatedAt:
          type: string
      required:
        - name
        - thingId
    EdgeTrigger:
      type: object
      title: EdgeTrigger
      properties:
        id:
          type: integer
        evaluationScript:
          type: string
          nullable: false
        minimumDuration:
          type: number
          nullable: true
        active:
          type: boolean
          nullable: true
        eventType:
          $ref: '#/components/schemas/EventType'
        dataTag:
          $ref: '#/components/schemas/EdgeDataTag'
        createdAt:
          type: string
        updatedAt:
          type: string
      required:
        - evaluationScript
    MovementType:
      type: object
      title: MovementType
      properties:
        id:
          type: integer
        name:
          type: string
          nullable: false
        movementKey:
          type: string
          nullable: false
        displayOrder:
          type: number
          nullable: true
        transactionType:
          type: string
          enum:
            - GOODS_ISSUE
            - GOODS_RECEIPT
            - CONSUMPTION
            - PRODUCTION
            - STOCK_TAKE
            - TRANSFER
        transferFromType:
          type: object
        transferToType:
          type: object
    MaterialMovementRequest:
      type: object
      title: MovementType
      properties:
        timestamp:
          type: string
          nullable: false
        quantity:
          type: string
          nullable: false
        unitOfMeasure:
          type: string
          nullable: false
        materialMovementTypeKey:
          type: string
          nullable: false
        inventoryKey:
          type: string
          nullable: false
        orderOperation:
          type: string
          nullable: true
        orderNumber:
          type: string
          nullable: true
        attributes:
          type: object
          nullable: true
        keyAttributes:
          type: object
          nullable: true
        assetId:
          type: number
          nullable: false
        materialExternalId:
          type: string
          nullable: false
    MaterialMovement:
      type: object
      title: MovementType
      properties:
        timestamp:
          type: string
          nullable: false
        quantity:
          type: string
          nullable: false
        unitOfMeasure:
          $ref: '#/components/schemas/UnitOfMeasure'
        materialMovementTypeKey:
          $ref: '#/components/schemas/MovementType'
        inventoryKey:
          type: string
          nullable: false
        orderOperation:
          type: string
          nullable: true
        orderNumber:
          type: string
          nullable: true
        order:
          $ref: '#/components/schemas/OrderInstance'
        attributes:
          type: object
          nullable: true
        keyAttributes:
          type: object
          nullable: true
        assetId:
          type: number
          nullable: false
        asset:
          $ref: '#/components/schemas/Asset'
        materialExternalId:
          type: string
          nullable: false
        material:
          $ref: '#/components/schemas/Material'
    MaterialLot:
      type: object
      title: MaterialLot
      properties:
        updatedAt:
          type: string
          nullable: false
        balance:
          type: string
          nullable: false
        issued:
          type: string
          nullable: false
        received:
          type: string
          nullable: false
        consumption:
          type: string
          nullable: false
        production:
          type: string
          nullable: false
        unitOfMeasure:
          $ref: '#/components/schemas/UnitOfMeasure'
        material:
          $ref: '#/components/schemas/Material'
        inventoryKey:
          type: string
          nullable: true
        order:
          $ref: '#/components/schemas/OrderInstance'
        asset:
          $ref: '#/components/schemas/Asset'
    EventType:
      type: object
      title: EventType
      properties:
        id:
          type: integer
        name:
          type: string
          nullable: false
        subtitle:
          type: string
          nullable: true
        priority:
          type: number
          nullable: false
        displayOrder:
          type: number
          nullable: true
        systemEvent:
          type: string
          enum:
            - ACTIVITY_MANUAL_START
            - ACTIVITY_PASSED
            - ACTIVITY_FAILED
            - ACTIVITY_FAILED_RETEST
            - ACTIVITY_SKIPPED
            - ACTIVITY_EXPIRED
            - ACTIVITY_ISSUED
            - ORDER_STARTED
            - ORDER_COMPLETED
            - ORDER_PAUSED
            - ORDER_CANCELED
            - ORDER_RESUMED
            - ORDER_READY
            - EQUIPMENT_STATUS_READY
            - EQUIPMENT_STATUS_RUNNING
            - EQUIPMENT_STATUS_STOPPED
            - EQUIPMENT_STATUS_COMPLETE
            - EQUIPMENT_STATUS_SUSPENDED
            - EQUIPMENT_STATUS_STARVED
            - EQUIPMENT_STATUS_BLOCKED
            - EDGE_ERROR
            - SHIFT_STARTED
            - SHIFT_ENDED
            - ORDER_CHANGEOVER_STARTED
            - ORDER_CHANGEOVER_RESUMED
            - ORDER_CHANGEOVER_OVERRUN
        closingEventId:
          type: number
          nullable: true
        createdAt:
          type: string
        updatedAt:
          type: string
      required:
        - name
        - priority
    ProcessData:
      type: object
      title: ProcessData
      properties:
        id:
          type: integer
        name:
          type: string
          nullable: false
        description:
          type: string
          nullable: true
        target:
          type: string
          nullable: true
        upperLimit:
          type: string
          nullable: true
        lowerLimit:
          type: string
          nullable: true
        constraintMin:
          type: string
          nullable: true
        constraintMax:
          type: string
          nullable: true
        unitOfMeasurement:
          type: string
          nullable: true
        displayOrder:
          type: number
          nullable: true
        createdAt:
          type: string
        updatedAt:
          type: string
      required:
        - name
    Site:
      type: object
      title: Site
      properties:
        id:
          type: integer
        name:
          type: string
          nullable: false
        displayOrder:
          type: number
          nullable: true
        createdAt:
          type: string
        updatedAt:
          type: string
      required:
        - name
    ActivityAssignment:
      type: object
      title: ActivityAssignment
      properties:
        id:
          type: integer
        material:
          $ref: '#/components/schemas/Material'
        materialGroup:
          $ref: '#/components/schemas/MaterialGroup'
        asset:
          $ref: '#/components/schemas/Asset'
        sourceAsset:
          $ref: '#/components/schemas/Asset'
        activityStarter:
          $ref: '#/components/schemas/ActivityStarter'
        assetClass:
          $ref: '#/components/schemas/AssetClass'
        template:
          $ref: '#/components/schemas/ActivityTemplate'
        attribute:
          $ref: '#/components/schemas/Attribute'
        attributeValue:
          type: string
        createdAt:
          type: string
        updatedAt:
          type: string
    ActivityInstance:
      type: object
      title: ActivityInstance
      properties:
        id:
          type: integer
        name:
          type: string
          nullable: false
        activityKey:
          type: string
          nullable: false
        priority:
          type: number
          nullable: false
        description:
          type: string
          nullable: true
        candidateGroup:
          type: string
          nullable: true
        pass:
          type: boolean
          nullable: true
        retest:
          type: boolean
          nullable: true
        comments:
          type: string
          nullable: true
        completedAt:
          type: string
          nullable: true
        scheduledAt:
          type: string
          nullable: true
        expiresAt:
          type: string
          nullable: true
        assignee:
          type: string
          nullable: true
        parentActivityInstanceId:
          type: number
          nullable: true
        status:
          type: string
          enum:
            - INACTIVE
            - ACTIVE
            - COMPLETED
            - SKIPPED
            - EXPIRED
            - SCHEDULED
            - SUPERSEDED
        order:
          $ref: '#/components/schemas/OrderInstance'
        asset:
          $ref: '#/components/schemas/Asset'
        items:
          type: array
          items:
            $ref: '#/components/schemas/ActivityInstanceItems'
        createdAt:
          type: string
        updatedAt:
          type: string
        claimedAt:
          type: string
          nullable: true
      required:
        - name
        - activityKey
    ActivityInstanceItem:
      type: object
      title: ActivityInstanceItem
      properties:
        id:
          type: integer
        name:
          type: string
          nullable: false
        stringValue:
          type: string
          nullable: true
        numericValue:
          type: string
          nullable: true
        upperLimit:
          type: string
          nullable: true
        lowerLimit:
          type: string
          nullable: true
        target:
          type: string
          nullable: true
        pass:
          type: boolean
          nullable: true
        displayOrder:
          type: number
          nullable: true
        toleranceType:
          type: string
          nullable: true
          enum:
            - MATERIAL
            - ASSET
            - ORDER
        activityInstance:
          $ref: '#/components/schemas/ActivityInstance'
        dateValue:
          type: string
          nullable: true
        datetimeValue:
          type: string
          nullable: true
        createdAt:
          type: string
        updatedAt:
          type: string
      required:
        - name
    ActivityInstanceItems:
      type: object
      title: ActivityInstanceItem
      properties:
        id:
          type: number
        name:
          type: string
          nullable: false
        stringValue:
          type: string
          nullable: true
        numericValue:
          type: string
          nullable: true
        upperLimit:
          type: string
          nullable: true
        lowerLimit:
          type: string
          nullable: true
        target:
          type: string
          nullable: true
        pass:
          type: boolean
          nullable: true
        displayOrder:
          type: number
          nullable: true
        toleranceType:
          type: string
          nullable: true
          enum:
            - MATERIAL
            - ASSET
            - ORDER
        dateValue:
          type: string
          nullable: true
        datetimeValue:
          type: string
          nullable: true
        createdAt:
          type: string
        updatedAt:
          type: string
      required:
        - name`
    ActivityItemOptionGroup:
      type: object
      title: ActivityItemOptionGroup
      properties:
        id:
          type: integer
        name:
          type: string
          nullable: false
        type:
          type: string
          enum:
            - TREE
            - SINGLE
            - MULTIPLE
            - DOWNTIME_REASON
            - DOWNTIME_MACHINE
        createdAt:
          type: string
        updatedAt:
          type: string
      required:
        - name
    ActivityItemOptionItem:
      type: object
      title: ActivityItemOptionItem
      properties:
        id:
          type: integer
        displayOrder:
          type: number
        name:
          type: string
          nullable: false
        value:
          type: string
          nullable: false
        requiresMachine:
          type: boolean
          nullable: true
        userGroup:
          nullable: true
          type: array
          items:
            type: string
        optionGroup:
          $ref: '#/components/schemas/ActivityItemOptionGroup'
        createdAt:
          type: string
        updatedAt:
          type: string
      required:
        - name
        - value
    ActivityTemplateStatus:
      type: object
      title: ActivityTemplateStatus
      properties:
        status:
          type: string
          enum:
            - ARCHIVED
            - LIVE
            - DRAFT
            - INACTIVE
        comment:
          type: string
          nullable: true
    ActivityTemplateItem:
      type: object
      title: ActivityTemplateItem
      properties:
        id:
          type: integer
        name:
          type: string
          nullable: false
        itemKey:
          type: string
          nullable: false
        hint:
          type: string
          nullable: true
        active:
          type: boolean
          nullable: true
        barcodeFieldLength:
          type: string
          nullable: true
        barcodeFields:
          type: string
          nullable: true
        calculation:
          type: string
          nullable: true
        blob:
          type: string
          nullable: true
        imageEnabled:
          type: boolean
          nullable: true
        visibilityExpression:
          type: string
          nullable: true
        hiddenExpression:
          type: string
          nullable: true
        readOnly:
          type: boolean
          nullable: true
        toleranceRelativeToOrderQuantity:
          type: boolean
          nullable: true
        lowerLimit:
          type: string
          nullable: true
        upperLimit:
          type: string
          nullable: true
        target:
          type: string
          nullable: true
        displayOrder:
          type: number
          nullable: true
        isRequired:
          type: boolean
          nullable: true
        enableImageCapture:
          type: boolean
          nullable: true
        hideWithoutTolerance:
          type: boolean
          nullable: false
        itemType:
          type: string
          enum:
            - DATA_ENTRY
            - ORDER_PROGRESS
            - UPDATE_ORDER_TOLERANCE
            - UPDATE_ORDER_ATTRIBUTE
            - UPDATE_ASSET_ATTRIBUTE
            - UPDATE_COMPONENT_TARGET
            - UPDATE_ORDER_TARGET
            - UPDATE_MATERIAL_ATTRIBUTE
            - ORDER_REJECT
            - EVENT_REASON
            - PRODUCT_BAD_IMAGE
            - PRODUCT_GOOD_IMAGE
            - MATERIAL_MOVEMENT
        dataType:
          type: string
          enum:
            - NUMBER
            - DATE
            - DATETIME
            - STRING
            - CALCULATED
            - EVALUATE_STRING
            - EVALUATE_BOOLEAN
            - EVALUATE_NUMBER
            - BARCODE
            - BARCODE_GS1
            - OPTION
            - PASS_FAIL
            - EDGE_DATA
            - MATERIAL
            - INVENTORY_KEY
            - NOTE
        toleranceType:
          type: string
          enum:
            - MATERIAL
            - ASSET
            - ORDER
        processVariable:
          $ref: '#/components/schemas/ProcessVariable'
        options:
          $ref: '#/components/schemas/ActivityItemOptionGroup'
        uom:
          $ref: '#/components/schemas/UnitOfMeasure'
        activityTemplate:
          $ref: '#/components/schemas/ActivityTemplate'
        attribute:
          $ref: '#/components/schemas/Attribute'
        createdAt:
          type: string
        updatedAt:
          type: string
      required:
        - name
    Asset:
      type: object
      title: Asset
      properties:
        id:
          type: integer
        name:
          type: string
          nullable: false
        displayName:
          type: string
        displayOrder:
          type: number
          nullable: true
        defaultRunRate:
          type: number
          nullable: true
        packml:
          type: boolean
          nullable: true
        status:
          type: string
          enum:
            - READY
            - IDLE
            - RUNNING
            - SUSPENDED
            - COMPLETED
            - STOPPED
            - ABORTED
        type:
          type: string
          enum:
            - AREA
            - LINE
            - EQUIPMENT
        assetClass:
          $ref: '#/components/schemas/AssetClass'
        parent:
          type: object
          nullable: true
        uom:
          $ref: '#/components/schemas/UnitOfMeasure'
        site:
          $ref: '#/components/schemas/Site'
        createdAt:
          type: string
        updatedAt:
          type: string
      required:
        - name
    AssetTolerance:
      type: object
      title: AssetTolerance
      properties:
        upperLimit:
          type: string
          nullable: false
        lowerLimit:
          type: string
          nullable: false
        target:
          type: string
          nullable: false
        processVariable:
          $ref: '#/components/schemas/ProcessVariable'
        asset:
          $ref: '#/components/schemas/Asset'
        createdAt:
          type: string
        updatedAt:
          type: string
      required:
        - upperLimit
        - lowerLimit
        - target
    EdgeDataSource:
      type: object
      title: EdgeDataSource
      properties:
        id:
          type: integer
        name:
          type: string
          nullable: false
        endpoint:
          type: string
          nullable: false
        connected:
          type: boolean
          nullable: true
        datasourceType:
          type: string
          enum:
            - OPC_UA
            - MODBUS
            - SIEMENS
            - ETHERNET_IP
            - GATE_ETHERNET_IP
            - SIMULATOR
        edge:
          $ref: '#/components/schemas/Edge'
        createdAt:
          type: string
        updatedAt:
          type: string
      required:
        - name
        - endpoint
    EdgeDataTag:
      type: object
      title: EdgeDataTag
      properties:
        id:
          type: integer
        name:
          type: string
          nullable: false
        sourceAddress:
          type: string
          nullable: true
        active:
          type: boolean
          nullable: true
        lastValue:
          type: string
          nullable: true
        lastUpdate:
          type: string
          nullable: true
        sourceDataType:
          type: string
          enum:
            - BOOLEAN
            - STRING
            - NUMBER
        template:
          type: string
          enum:
            - EQUIPMENT_STATUS_READY
            - EQUIPMENT_STATUS_RUNNING
            - EQUIPMENT_STATUS_STOPPED
            - EQUIPMENT_STATUS_COMPLETE
            - EQUIPMENT_STATUS_SUSPENDED
            - EQUIPMENT_STATUS_STARVED
            - EQUIPMENT_STATUS_BLOCKED
            - COMMAND_RESET
            - COMMAND_START
            - COMMAND_STOP
            - COUNT_REJECT
            - COUNT_TOTAL
            - COUNT_DAILY
            - ORDER_NUMBER
        processVariable:
          $ref: '#/components/schemas/ProcessVariable'
        dataSource:
          $ref: '#/components/schemas/EdgeDataSource'
        asset:
          $ref: '#/components/schemas/Asset'
        createdAt:
          type: string
        updatedAt:
          type: string
      required:
        - name
    EventInstance:
      type: object
      title: EventInstance
      properties:
        id:
          type: integer
        name:
          type: string
          nullable: false
        subtitle:
          type: string
          nullable: true
        priority:
          type: number
          nullable: false
        timestamp:
          type: string
          nullable: true
        closedAt:
          type: string
          nullable: true
        status:
          type: string
          enum:
            - COMPLETED
            - ACTIVE
        asset:
          $ref: '#/components/schemas/Asset'
        eventType:
          $ref: '#/components/schemas/EventType'
        order:
          $ref: '#/components/schemas/OrderInstance'
        activityInstance:
          $ref: '#/components/schemas/ActivityInstance'
        createdAt:
          type: string
        updatedAt:
          type: string
      required:
        - name
        - priority
    EventEmailRequest:
      type: object
      properties:
        destination:
          type: array
          items:
            type: string
        eventInstance:
          $ref: '#/components/schemas/EventInstance'
    EventBatchUpdateRequest:
      type: object
      properties:
        ids:
          type: array
          items:
            type: number
        closedAt:
          type: string
        status:
          type: string
          enum:
            - COMPLETED
            - ACTIVE
        downtimeType:
          type: string
          enum:
            - PLANNED
            - UNPLANNED
        comments:
          type: string
        eventReason1:
          type: string
        eventReason2:
          type: string
        eventReason3:
          type: string
        eventReason4:
          type: string
    RaiseEventRequest:
      type: object
      properties:
        assetId:
          type: number
          description: Use asset name or id
        assetName:
          type: string
          description: Use asset name or id
        timestamp:
          type: string
          description: The timestamp of the start of the event. Leaving null means using the current server time.
        closedAt:
          type: string
          description: The time that the event was closed. Optional
        eventTypeId:
          type: number
          description: Use event type name or id
        eventTypeName:
          type: string
          description: Use event type name or id
        eventReason:
          type: string
        reasonGroupId:
          type: number
        orderId:
          type: number
        orderNumber:
          type: string
        orderOperation:
          type: string
        triggeredBy:
          type: string
        status:
          type: string
      required:
        - timestamp
    CloseEventRequest:
      type: object
      properties:
        assetId:
          type: number
        timestamp:
          type: string
        eventTypeId:
          type: number
      required:
        - assetId
        - timestamp
        - eventTypeId
    MaterialUpsert:
      type: object
      properties:
        name:
          type: string
        externalId:
          type: string
        materialGroupName:
          type: string
        active:
          type: boolean
        canProduce:
          type: boolean
        canConsume:
          type: boolean
        barcodeReference:
          type: string
        defaultRunRate:
          type: number
        displayOrder:
          type: number
        uom:
          $ref: '#/components/schemas/UnitOfMeasure'
        attributes:
          description: A list for additional material properties
          type: array
          items:
            $ref: '#/components/schemas/MaterialAttributeFromQueue'
        attributeGroups:
          type: array
          items:
            type: string
        tolerances:
          description: A list for additional material tolerances
          type: array
          items:
            $ref: '#/components/schemas/MaterialUpsertProcessTolerance'
        materialComponents:
          description: A list for material components
          type: array
          items:
            $ref: '#/components/schemas/MaterialComponentFromQueue'
        conversions:
          description: A list for unit of measure conversions
          type: array
          items:
            $ref: '#/components/schemas/MaterialUpsertConversion'
    MaterialUpsertProcessTolerance:
      type: object
      properties:
        processVariableName:
          type: string
        lowerLimit:
          type: number
          format: double
        upperLimit:
          type: number
          format: double
        target:
          type: number
          format: double
    MaterialUpsertConversion:
      type: object
      properties:
        uom:
          type: string
        multiplier:
          type: number
          format: double
        divider:
          type: number
          format: double
    OrderInstanceUpsertProcessTolerance:
      type: object
      properties:
        processVariableName:
          type: string
        lowerLimit:
          type: number
          format: double
        upperLimit:
          type: number
          format: double
        target:
          type: number
          format: double
    OrderInstanceComponentFromQueue:
      type: object
      properties:
        componentName:
          type: string
        componentExternalId:
          type: string
        componentGroup:
          type: string
        componentActive:
          type: boolean
          nullable: false
        componentCanProduce:
          type: boolean
          nullable: false
        componentCanConsume:
          type: boolean
          nullable: false
        componentBarcodeReference:
          type: string
          nullable: true
        componentDefaultRunRate:
          type: number
          nullable: true
        componentDisplayOrder:
          type: number
          nullable: true
        target:
          type: number
        notes:
          type: string
        componentUom:
          $ref: '#/components/schemas/UnitOfMeasure'
        componentAttributes:
          description: A list for additional material properties
          type: array
          items:
            $ref: '#/components/schemas/MaterialAttributeFromQueue'
        componentAttributeGroups:
          type: array
          items:
            type: string
        componentTolerances:
          description: A list for additional material tolerances
          type: array
          items:
            $ref: '#/components/schemas/MaterialUpsertProcessTolerance'
        componentComponents:
          description: A list for material components
          type: array
          items:
            $ref: '#/components/schemas/MaterialComponentFromQueue'
    OrderInstanceAttributeFromQueue:
      type: object
      properties:
        attributeName:
          type: string
        value:
          type: string
    OrderInstanceUpsertSaved:
      type: object
    OrderInstanceUpsertError:
      type: object
      properties:
        message:
          type: string
    MaterialUpsertSaved:
      type: object
    MaterialUpsertError:
      type: object
      properties:
        message:
          type: string
    MaterialAttributeFromQueue:
      type: object
      properties:
        attributeName:
          type: string
        value:
          type: string
    OrderInstanceUpsert:
      type: object
      properties:
        orderNumber:
          type: string
        orderDate:
          type: string
          format: yyy-mm-dd
        operation:
          type: string
        scheduledStart:
          type: string
          format: yyyy-mm-ddThh:MM:ssZ
        scheduledEnd:
          type: string
          format: yyyy-mm-ddThh:MM:ssZ
        changeoverDuration:
          type: number
          format: integer
        asset:
          type: string
        material:
          $ref: '#/components/schemas/MaterialUpsert'
        dueDate:
          type: string
          format: yyyy-mm-ddThh:MM:ssZ
        quantityTarget:
          type: number
          format: double
        status:
          type: string
          description: Order Status
          enum:
            - NEW
            - READY
            - RUNNING
            - SUSPENDED
            - COMPLETED
            - CANCELLED
        name:
          type: string
        uom:
          type: string
        defaultRunRate:
          type: number
          format: double
        notes:
          type: string
        orderNumberAttributes:
          description: A list for order number attributes
          type: array
          items:
            $ref: '#/components/schemas/OrderInstanceAttributeFromQueue'
        attributes:
          description: A list for additional order properties
          type: array
          items:
            $ref: '#/components/schemas/OrderInstanceAttributeFromQueue'
        orderComponents:
          description: A list bill of material components for this order instance
          type: array
          items:
            $ref: '#/components/schemas/OrderInstanceComponentFromQueue'
        attributeGroups:
          type: array
          items:
            type: string
        tolerances:
          description: A list for additional order tolerances
          type: array
          items:
            $ref: '#/components/schemas/OrderInstanceUpsertProcessTolerance'
    OrderInstance:
      type: object
      title: OrderInstance
      properties:
        id:
          type: integer
        name:
          type: string
          nullable: false
        orderDate:
          type: string
          nullable: false
        orderNumber:
          type: string
          nullable: false
        operation:
          type: string
          nullable: true
        batchNumber:
          type: string
          nullable: true
        quantityTarget:
          type: string
          nullable: true
        scheduledStart:
          type: string
          nullable: true
        scheduledEnd:
          type: string
          nullable: true
        actualStart:
          type: string
          nullable: true
        actualEnd:
          type: string
          nullable: true
        dueDateTime:
          type: string
          nullable: true
        defaultRunRate:
          type: number
          nullable: true
        notes:
          type: string
          nullable: true
        status:
          type: string
          enum:
            - NEW
            - READY
            - RUNNING
            - SUSPENDED
            - COMPLETED
            - CANCELLED
        asset:
          $ref: '#/components/schemas/Asset'
        material:
          $ref: '#/components/schemas/Material'
        uom:
          $ref: '#/components/schemas/UnitOfMeasure'
        createdAt:
          type: string
        updatedAt:
          type: string
      required:
        - name
        - orderDate
        - orderNumber
    OrderProgress:
      type: object
      title: OrderProgress
      properties:
        id:
          type: integer
        totalCount:
          type: string
          nullable: false
        rejectCount:
          type: string
          nullable: false
        statusReady:
          type: boolean
          nullable: true
        statusRunning:
          type: boolean
          nullable: true
        statusStopped:
          type: boolean
          nullable: true
        statusComplete:
          type: boolean
          nullable: true
        statusSuspended:
          type: boolean
          nullable: true
        statusStarved:
          type: boolean
          nullable: true
        statusBlocked:
          type: boolean
          nullable: true
        timestamp:
          type: string
          nullable: false
        orderStatus:
          type: string
          enum:
            - NEW
            - READY
            - RUNNING
            - SUSPENDED
            - COMPLETED
            - CANCELLED
        status:
          type: string
          enum:
            - READY
            - RUNNING
            - STOPPED
        statusCause:
          type: string
          enum:
            - ABORTED
            - BLOCKED
            - FAULTED
            - STARVED
            - SUSPENDED
            - COMPLETED
        order:
          $ref: '#/components/schemas/OrderInstance'
        createdAt:
          type: string
        updatedAt:
          type: string
      required:
        - totalCount
        - timestamp
    OrderTolerance:
      type: object
      title: OrderTolerance
      properties:
        id:
          type: integer
        upperLimit:
          type: string
          nullable: false
        lowerLimit:
          type: string
          nullable: false
        target:
          type: string
          nullable: false
        processVariable:
          $ref: '#/components/schemas/ProcessVariable'
        order:
          $ref: '#/components/schemas/OrderInstance'
        createdAt:
          type: string
        updatedAt:
          type: string
      required:
        - upperLimit
        - lowerLimit
        - target
    ProcessVariable:
      type: object
      title: ProcessVariable
      properties:
        id:
          type: integer
        name:
          type: string
          nullable: false
        description:
          type: string
          nullable: true
        decimals:
          type: number
          nullable: true
        target:
          type: string
          nullable: true
        upperLimit:
          type: string
          nullable: true
        lowerLimit:
          type: string
          nullable: true
        constraintMin:
          type: string
          nullable: true
        constraintMax:
          type: string
          nullable: true
        displayOrder:
          type: number
          nullable: true
        uom:
          $ref: '#/components/schemas/UnitOfMeasure'
        createdAt:
          type: string
        updatedAt:
          type: string
      required:
        - name
    AssetVariable:
      type: object
      title: AssetVariable
      properties:
        id:
          type: integer
        name:
          type: string
          nullable: false
        description:
          type: string
          nullable: true
        target:
          type: string
          nullable: true
        upperLimit:
          type: string
          nullable: true
        lowerLimit:
          type: string
          nullable: true
        constraintMin:
          type: string
          nullable: true
        constraintMax:
          type: string
          nullable: true
        unitOfMeasurement:
          type: string
          nullable: true
        displayOrder:
          type: number
          nullable: true
        createdAt:
          type: string
        updatedAt:
          type: string
      required:
        - name
    OrderStats:
      type: object
      title: Summary of the current state of this order
      properties:
        id:
          type: integer
        assetId:
          type: number
        name:
          type: string
        operation:
          type: string
        assetName:
          type: string
        orderNumber:
          type: string
        uom:
          type: string
        status:
          type: string
        currentRate:
          type: string
        defaultRunRate:
          type: string
        quantityCompleted:
          type: string
        quantityRejected:
          type: string
        quantityTarget:
          type: string
        scheduledStart:
          type: string
        scheduledEnd:
          type: string
        actualStart:
          type: string
          nullable: true
        actualEnd:
          type: string
          nullable: true
        actualChangeoverStart:
          type: string
        actualChangeoverEnd:
          type: string
        scheduledChangeoverDuration:
          type: number
        representsLineProduction:
          type: boolean
        representsLinePerformance:
          type: boolean
        performance:
          type: string
        availability:
          type: string
        quality:
          type: string
    AssetStats:
      type: object
      title: Summary of the current state of this asset
      properties:
        id:
          type: integer
        parentId:
          type: number
        parent:
          type: object
        displayOrder:
          type: number
        name:
          type: string
        uom:
          type: string
        status:
          type: string
        statusCause:
          type: string
        statusUpdate:
          type: string
        orderNumber:
          type: string
        orderName:
          type: string
        orderCompleted:
          type: string
        orderTarget:
          type: string
        dailyCompleted:
          type: string
        dailyTarget:
          type: string
        currentRate:
          type: string
        quality:
          type: string
        availability:
          type: string
        performance:
          type: string
        hasChildren:
          type: boolean
        orderDefaultRunRate:
          type: string
        orderScheduledStart:
          type: string
        orderScheduledEnd:
          type: string
        orderActualStart:
          type: string
        orderActualEnd:
          type: string
        orderScheduledChangeoverDuration:
          type: number
        orderActualChangeoverDuration:
          type: number
        orderActualChangeoverStart:
          type: string
        lastMsgUpdate:
          type: string
    ActivityTriggerAssignment:
      type: object
      title: ActivityTriggerAssignment
      properties:
        id:
          type: integer
        delayMinutes:
          type: string
          nullable: true
        intervalMinutes:
          type: string
          nullable: true
        createdAt:
          type: string
        updatedAt:
          type: string
    MaterialGroup:
      type: object
      title: MaterialGroup
      properties:
        id:
          type: integer
        name:
          type: string
          nullable: false
        displayOrder:
          type: number
          nullable: true
        materialGroup:
          type: object
        createdAt:
          type: string
        updatedAt:
          type: string
      required:
        - name
    Material:
      type: object
      title: Material
      properties:
        id:
          type: integer
        name:
          type: string
          nullable: false
        active:
          type: boolean
          nullable: false
        canProduce:
          type: boolean
          nullable: false
        canConsume:
          type: boolean
          nullable: false
        externalId:
          type: string
          nullable: false
        barcodeReference:
          type: string
          nullable: true
        defaultRunRate:
          type: number
          nullable: true
        displayOrder:
          type: number
          nullable: true
        group:
          $ref: '#/components/schemas/MaterialGroup'
        createdAt:
          type: string
        updatedAt:
          type: string
      required:
        - name
        - externalId
    MaterialTolerance:
      type: object
      title: MaterialTolerance
      properties:
        id:
          type: integer
        upperLimit:
          type: string
          nullable: true
        lowerLimit:
          type: string
          nullable: true
        target:
          type: string
          nullable: true
        processVariable:
          $ref: '#/components/schemas/ProcessVariable'
        material:
          $ref: '#/components/schemas/Material'
        createdAt:
          type: string
        updatedAt:
          type: string
      required:
        - upperLimit
        - lowerLimit
        - target
    UnitOfMeasure:
      type: object
      nullable: true
      title: UnitOfMeasure
      properties:
        id:
          type: integer
        name:
          type: string
          nullable: false
        createdAt:
          type: string
        updatedAt:
          type: string
      required:
        - name
    ActivityStarter:
      type: object
      title: ActivityStarter
      properties:
        id:
          type: integer
        activityKey:
          type: string
          nullable: true
        delay:
          type: number
          nullable: true
        interval:
          type: number
          nullable: true
        assetStatusCondition:
          type: string
          enum:
            - READY
            - IDLE
            - RUNNING
            - SUSPENDED
            - COMPLETED
            - STOPPED
            - ABORTED
        eventType:
          $ref: '#/components/schemas/EventType'
        template:
          $ref: '#/components/schemas/ActivityTemplate'
        createdAt:
          type: string
        updatedAt:
          type: string
    StartActivityRequest:
      type: object
      title: StartActivityRequest
      properties:
        activityKey:
          type: string
        templateId:
          type: number
        assetId:
          type: number
        orderId:
          type: number
        activityBeingSuperseded:
          type: number
    ClaimActivityRequest:
      type: object
      title: ClaimActivityRequest
      properties:
        activityInstanceId:
          type: number
        userName:
          type: string
    ProductionReportRequest:
      type: object
      properties:
        filters:
          $ref: '#/components/schemas/ProductionReportFilterFilters'
        groupBy:
          $ref: '#/components/schemas/ProductionReportGroupBy'
        granularity:
          $ref: '#/components/schemas/ProductionReportGranularity'
    ProductionReportFilterFilters:
      type: object
      properties:
        parentId:
          type: integer
        orderId:
          type: array
          items:
            type: integer
        assetId:
          type: array
          items:
            type: integer
        orderNumber:
          type: array
          items:
            type: string
        operation:
          type: array
          items:
            type: string
        dateFrom:
          type: string
          format: date
        dateTo:
          type: string
          format: date
    ProductionReportGroupBy:
      type: string
      enum:
        - ASSET
        - ORDER
        - OPERATION
        - SHIFT
    ProductionReportGranularity:
      type: string
      nullable: true
      enum:
        - HOUR
        - DAY
        - WEEK
    ProductionReportSummary:
      type: object
      properties:
        id:
          type: integer
          example: 4
        name:
          type: string
          example: yfo0nc
        parentId:
          type: integer
          example: 3
        data:
          type: array
          items:
            $ref: '#/components/schemas/ProductionReportData'
    ProductionReportData:
      type: object
      properties:
        availability:
          type: string
          example: '0.73'
        performance:
          type: string
          example: '0.73'
        quality:
          type: string
          example: '0.73'
        target:
          type: string
          example: '1'
        completed:
          type: string
          example: '1'
        rejected:
          type: string
          example: '1'
        timestamp:
          type: string
          format: date-time
          example: {}
    SubmitActivityRequest:
      type: object
      title: SubmitActivityRequest
      properties:
        id:
          type: integer
        skipped:
          type: boolean
        comments:
          type: string
        instanceItems:
          type: object
    ActivityInstanceForm:
      type: object
      title: ActivityInstanceForm
      properties:
        id:
          type: integer
        name:
          type: string
        activityKey:
          type: string
        articleKey:
          type: string
        description:
          type: string
        candidateGroup:
          type: string
        pass:
          type: boolean
        comments:
          type: string
        completed:
          type: string
        assignee:
          type: string
        status:
          type: string
        initialValue:
          type: string
        attributes:
          type: object
        order:
          $ref: '#/components/schemas/OrderInstance'
        asset:
          $ref: '#/components/schemas/Asset'
        startingEvent:
          type: object
        skippableBy:
          type: string
          nullable: true
        formItems:
          type: array
          items:
            $ref: '#/components/schemas/ActivityInstanceFormItem'
    ActivityInstanceFormItem:
      type: object
      title: ActivityInstanceFormItem
      properties:
        id:
          type: integer
        itemKey:
          type: string
          nullable: false
        name:
          type: string
          nullable: false
        hint:
          type: string
          nullable: true
        active:
          type: boolean
          nullable: true
        barcodeFieldLength:
          type: string
          nullable: true
        barcodeFields:
          type: string
          nullable: true
        calculation:
          type: string
          nullable: true
        imageEnabled:
          type: boolean
          nullable: true
        visibilityExpression:
          type: string
          nullable: true
        hiddenExpression:
          type: string
          nullable: true
        readOnly:
          type: boolean
          nullable: true
        componentTarget:
          type: string
          nullable: true
        toleranceRelativeToOrderQuantity:
          type: boolean
          nullable: true
        toleranceNotFound:
          type: boolean
          nullable: true
        lowerLimit:
          type: string
          nullable: true
        upperLimit:
          type: string
          nullable: true
        initialValue:
          type: object
          nullable: true
        target:
          type: string
          nullable: true
        displayOrder:
          type: number
          nullable: true
        isRequired:
          type: boolean
          nullable: true
        enableImageCapture:
          type: boolean
          nullable: true
        hideWithoutTolerance:
          type: boolean
          nullable: true
        itemType:
          type: string
          enum:
            - DATA_ENTRY
            - ORDER_PROGRESS
            - UPDATE_ORDER_TOLERANCE
            - UPDATE_ORDER_ATTRIBUTE
        dataType:
          type: string
          enum:
            - NUMBER
            - DATE
            - BOOLEAN
            - DATETIME
            - STRING
            - CALCULATED
            - BARCODE
            - OPTION
            - PASS_FAIL
            - EDGE_DATA
            - MATERIAL
            - NOTE
        toleranceType:
          type: string
          nullable: true
          enum:
            - MATERIAL
            - ASSET
            - ORDER
        processVariable:
          $ref: '#/components/schemas/ProcessVariable'
        options:
          $ref: '#/components/schemas/ActivityItemOptionGroup'
        uom:
          $ref: '#/components/schemas/UnitOfMeasure'
        activityTemplate:
          $ref: '#/components/schemas/ActivityTemplate'
        itemOptions:
          type: array
          items:
            $ref: '#/components/schemas/ActivityItemOptionItem'
        component:
          $ref: '#/components/schemas/Material'
        componentGroup:
          $ref: '#/components/schemas/MaterialGroup'
        attribute:
          $ref: '#/components/schemas/Attribute'
        createdAt:
          type: string
        updatedAt:
          type: string
    UserRequest:
      type: object
      title: UserRequest
      properties:
        username:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        roles:
          type: string
        phoneNumber:
          type: string
        groups:
          type: array
          items:
            $ref: '#/components/schemas/UserGroup'
    User:
      type: object
      title: User
      properties:
        name:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        username:
          type: string
        password:
          type: string
        email:
          type: string
          nullable: true
        phoneNumber:
          type: string
          nullable: true
        roles:
          type: string
          nullable: true
        enabled:
          type: boolean
          nullable: true
        status:
          type: string
          nullable: true
        creationDate:
          type: string
          nullable: true
        lastModifiedDate:
          type: string
          nullable: true
        groups:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/UserGroup'
    UserGroupRequest:
      type: object
      title: UserGroupRequest
      properties:
        name:
          type: string
        description:
          type: string
          nullable: true
        precedence:
          type: number
          nullable: true
    UserGroup:
      type: object
      title: UserGroup
      properties:
        name:
          type: string
        description:
          type: string
          nullable: true
        precedence:
          type: number
          nullable: true
        creationDate:
          type: string
          nullable: true
        lastModifiedDate:
          type: string
          nullable: true
    IdentityProviderRequest:
      type: object
      title: IdentityProviderRequest
      properties:
        userPoolId:
          type: string
        providerName:
          type: string
        providerType:
          type: string
        enabled:
          type: boolean
        providerDetails:
          type: object
          additionalProperties:
            type: string
          nullable: true
        attributeMapping:
          type: object
          additionalProperties:
            type: string
          nullable: true
        idpIdentifiers:
          type: array
          items:
            type: string
          nullable: true
    IdentityProvider:
      type: object
      title: IdentityProvider
      properties:
        userPoolId:
          type: string
        providerName:
          type: string
        providerType:
          type: string
        enabled:
          type: boolean
        providerDetails:
          type: object
          additionalProperties:
            type: string
          nullable: true
        attributeMapping:
          type: object
          additionalProperties:
            type: string
          nullable: true
        idpIdentifiers:
          type: array
          items:
            type: string
          nullable: true
        lastModifiedDate:
          type: string
          nullable: true
        creationDate:
          type: string
          nullable: true
    AuditLog:
      type: object
      title: AuditLog
      properties:
        id:
          type: integer
        entityName:
          type: string
        entityId:
          type: number
        user:
          type: string
        createdAt:
          type: string
          nullable: true
        data:
          type: string
        action:
          type: string
          nullable: true
          enum:
            - CREATE
            - UPDATE
            - DELETE
    ActivityStats:
      type: object
      title: Activity Stats
      properties:
        activityCount:
          type: number
        activityDone:
          type: number
        activitySkipped:
          type: number
        nonConformances:
          type: number
    Subscription:
      type: object
      title: Subscription
      properties:
        id:
          type: integer
        channel:
          $ref: '#/components/schemas/Channel'
        activityKey:
          type: string
          nullable: true
        asset:
          $ref: '#/components/schemas/Asset'
        order:
          $ref: '#/components/schemas/OrderInstance'
        eventType:
          $ref: '#/components/schemas/EventType'
        createdAt:
          type: string
        updatedAt:
          type: string
      required:
        - channel
        - activityKey
    SubscriptionWithIds:
      type: object
      title: UserSubscription
      properties:
        id:
          type: integer
        channel:
          type: number
          nullable: false
        activityKey:
          type: string
          nullable: true
        asset:
          type: number
        order:
          type: number
        eventType:
          type: number
        createdAt:
          type: string
        updatedAt:
          type: string
      required:
        - channel
        - activityKey
    CreateChannel:
      type: object
      title: CreateChannel
      properties:
        type:
          type: string
          enum:
            - ANDROID
            - IOS
            - SMS
            - EMAIL
            - WEBHOOK
            - NOTIFICATION
        deviceToken:
          type: string
          nullable: true
          description: required if type is a push notification (ANDROID/IOS)
        endpoint:
          type: string
          nullable: true
          description: required if type is a WEBHOOK
      required:
        - type
    Channel:
      type: object
      title: Channel
      properties:
        id:
          type: integer
        name:
          type: string
          nullable: false
        endpoint:
          type: string
          nullable: true
        type:
          type: string
          enum:
            - PUSH
            - SMS
            - EMAIL
            - WEBHOOK
            - NOTIFICATION
            - SFTP
        createdAt:
          type: string
        updatedAt:
          type: string
      required:
        - name
    UserSubscription:
      type: object
      title: UserSubscription
      properties:
        id:
          type: integer
        username:
          type: string
          nullable: false
        activityKey:
          type: string
          nullable: true
        asset:
          $ref: '#/components/schemas/Asset'
        order:
          $ref: '#/components/schemas/OrderInstance'
        eventType:
          $ref: '#/components/schemas/EventType'
        createdAt:
          type: string
        updatedAt:
          type: string
      required:
        - username
        - activityKey
    UserSubscriptionWithIds:
      type: object
      title: UserSubscription
      properties:
        id:
          type: integer
        username:
          type: string
          nullable: false
        activityKey:
          type: string
          nullable: true
        asset:
          type: number
        order:
          type: number
        eventType:
          type: number
        createdAt:
          type: string
        updatedAt:
          type: string
      required:
        - username
        - activityKey
    CreateUserNotification:
      type: object
      title: CreateUserNotification
      properties:
        type:
          type: string
          enum:
            - ANDROID
            - IOS
            - SMS
            - EMAIL
            - WEBHOOK
        deviceToken:
          type: string
          nullable: true
          description: required if type is a push notification (ANDROID/IOS)
        endpoint:
          type: string
          nullable: true
          description: required if type is a WEBHOOK
      required:
        - type
    UserNotification:
      type: object
      title: UserNotification
      properties:
        id:
          type: integer
        username:
          type: string
          nullable: false
        endpoint:
          type: string
          nullable: true
        type:
          type: string
          enum:
            - ANDROID
            - IOS
            - SMS
            - EMAIL
            - WEBHOOK
        createdAt:
          type: string
        updatedAt:
          type: string
      required:
        - username
    OrderProgressRate:
      type: object
      title: Order Progress Rate
      properties:
        timestamp:
          type: string
        hour:
          type: string
        status:
          type: string
        statusCause:
          type: string
        progressRate:
          type: number
    OrderStatusTimelineEvent:
      type: object
      title: Order Status Timeline Event
      properties:
        timestampFrom:
          type: string
        timestampTo:
          type: string
          nullable: true
        status:
          type: string
        statusCause:
          type: string
        assetId:
          type: number
        orderId:
          type: number
        shiftId:
          type: number
          nullable: true
    AssetSummary:
      type: object
      title: Asset Summary
      properties:
        orderStats:
          type: array
          items:
            $ref: '#/components/schemas/OrderStats'
        progressRate:
          type: array
          items:
            $ref: '#/components/schemas/OrderProgressRate'
        activityStats:
          $ref: '#/components/schemas/ActivityStats'
    SearchResult:
      type: object
      title: Search result
      properties:
        assetList:
          type: array
          items:
            $ref: '#/components/schemas/Asset'
        orderList:
          type: array
          items:
            $ref: '#/components/schemas/OrderInstance'
        eventsList:
          type: array
          items:
            $ref: '#/components/schemas/EventInstance'
        activityList:
          type: array
          items:
            $ref: '#/components/schemas/ActivityInstance'
    RegisterRequest:
      type: object
      title: Tenant Registration Request
      properties:
        tenantName:
          type: string
          nullable: false
        cognitoUsername:
          type: string
          nullable: false
        cognitoUserEmail:
          type: string
          nullable: false
        stripePaymentToken:
          type: string
          nullable: true
    ActivityInstanceItemImage:
      type: object
      title: ActivityInstanceItemImage
      properties:
        id:
          type: integer
        reference:
          type: string
          nullable: false
        activityInstanceItemId:
          type: number
        thumbnail:
          type: string
        createdAt:
          type: string
        updatedAt:
          type: string
      required:
        - reference
    Attribute:
      type: object
      title: Attribute
      properties:
        id:
          type: integer
        name:
          type: string
          nullable: false
        description:
          type: string
          nullable: true
        displayOrder:
          type: number
          nullable: true
        orderAttribute:
          type: boolean
          nullable: true
        assetAttribute:
          type: boolean
          nullable: true
        materialAttribute:
          type: boolean
          nullable: true
        dataType:
          type: string
          enum:
            - BOOLEAN
            - STRING
            - NUMBER
            - JSON
            - LINK
        createdAt:
          type: string
        updatedAt:
          type: string
      required:
        - name
    OrderAttribute:
      type: object
      title: OrderAttribute
      properties:
        id:
          type: integer
        stringValue:
          type: string
          nullable: true
        numericValue:
          type: string
          nullable: true
        booleanValue:
          type: boolean
          nullable: true
        attribute:
          $ref: '#/components/schemas/Attribute'
        order:
          $ref: '#/components/schemas/OrderInstance'
        createdAt:
          type: string
        updatedAt:
          type: string
    AssetAttribute:
      type: object
      title: AssetAttribute
      properties:
        id:
          type: integer
        stringValue:
          type: string
          nullable: true
        numericValue:
          type: string
          nullable: true
        booleanValue:
          type: boolean
          nullable: true
        attribute:
          $ref: '#/components/schemas/Attribute'
        asset:
          $ref: '#/components/schemas/Asset'
        createdAt:
          type: string
        updatedAt:
          type: string
    MaterialAttribute:
      type: object
      title: MaterialAttribute
      properties:
        id:
          type: integer
        stringValue:
          type: string
          nullable: true
        numericValue:
          type: string
          nullable: true
        jsonValue:
          type: object
          nullable: true
        booleanValue:
          type: boolean
          nullable: true
        attribute:
          $ref: '#/components/schemas/Attribute'
        material:
          $ref: '#/components/schemas/Material'
        createdAt:
          type: string
        updatedAt:
          type: string
    LatestResult:
      type: object
      title: Latest Result from Activity
      properties:
        assetId:
          type: number
        orderId:
          type: number
        processVariableName:
          type: string
        processVariableId:
          type: number
        unitOfMeasureName:
          type: string
        updatedAt:
          type: string
        value:
          type: string
        upperLimit:
          type: string
        lowerLimit:
          type: string
        target:
          type: string
        pass:
          type: boolean
    OrderComponent:
      type: object
      title: OrderComponent
      properties:
        id:
          type: integer
        target:
          type: string
          nullable: false
        notes:
          type: string
          nullable: true
        component:
          $ref: '#/components/schemas/Material'
        uom:
          $ref: '#/components/schemas/UnitOfMeasure'
        order:
          $ref: '#/components/schemas/OrderInstance'
        createdAt:
          type: string
        updatedAt:
          type: string
      required:
        - target
    MaterialComponent:
      type: object
      title: MaterialComponent
      properties:
        id:
          type: integer
        target:
          type: string
          nullable: false
        component:
          $ref: '#/components/schemas/Material'
        material:
          $ref: '#/components/schemas/Material'
        createdAt:
          type: string
        updatedAt:
          type: string
      required:
        - target
    MaterialConversion:
      type: object
      title: MaterialConversion
      properties:
        id:
          type: integer
        multiplier:
          type: string
          nullable: false
        divider:
          type: string
          nullable: false
        material:
          $ref: '#/components/schemas/Material'
        uom:
          $ref: '#/components/schemas/UnitOfMeasure'
        createdAt:
          type: string
        updatedAt:
          type: string
      required:
        - multiplier
    MaterialComponentFromQueue:
      type: object
      title: MaterialComponentFromQueue
      properties:
        componentName:
          type: string
          nullable: false
        componentExternalId:
          type: string
          nullable: false
        componentGroup:
          type: string
        target:
          type: string
          nullable: false
      required:
        - componentName
        - componentExternalId
        - target
    MaterialCheckResultDto:
      type: object
      title: MaterialCheckResult
      properties:
        pass:
          type: boolean
        target:
          type: string
          nullable: true
        componentName:
          type: string
          nullable: true
        message:
          type: string
          nullable: true
      required:
        - target
    ActivityClass:
      type: object
      title: ActivityClass
      properties:
        id:
          type: integer
        name:
          type: string
          nullable: false
        createdAt:
          type: string
        updatedAt:
          type: string
      required:
        - name
    ArticleKey:
      type: object
      properties:
        key:
          type: string
          nullable: false
    ArticleData:
      type: object
      properties:
        name:
          type: string
        content:
          type: string
      required:
        - name
        - content
    Article:
      type: object
      properties:
        key:
          type: string
        name:
          type: string
          nullable: false
        content:
          type: string
          nullable: false
        versions:
          type: array
          items:
            $ref: '#/components/schemas/Version'
      required:
        - key
        - name
        - content
        - versions
    Version:
      type: object
      properties:
        size:
          type: number
        versionId:
          type: string
        isLatest:
          type: boolean
        lastModified:
          type: string
      required:
        - size
        - versionId
        - isLatest
        - lastModified
        - name
    ArticleSummary:
      type: object
      properties:
        key:
          type: string
        size:
          type: number
        versionId:
          type: string
        lastModified:
          type: string
        name:
          type: string
      required:
        - key
        - size
        - versionId
        - lastModified
        - name
    ActivityReportSummary:
      type: object
      properties:
        activitiesIssued:
          type: string
        activitiesCompleted:
          type: string
        activitiesPassed:
          type: string
        activitiesFailed:
          type: string
        activitiesSkipped:
          type: string
        activitiesExpired:
          type: string
        assetId:
          type: string
        assetName:
          type: string
        assetDisplayName:
          type: string
        parentId:
          type: string
        parentName:
          type: string
        parentDisplayName:
          type: string
        orderId:
          type: string
        orderNumber:
          type: string
        orderName:
          type: string
    ActivitySummaryRequest:
      type: object
      properties:
        dateFrom:
          type: string
        dateTo:
          type: string
        groupBy:
          type: array
          items:
            type: string
        filters:
          type: object
          properties:
            assetId:
              type: number
            parentId:
              type: number
            orderId:
              type: number
            orderNumber:
              type: string
            activityKey:
              type: string
    Dashboard:
      type: object
      title: Dashboard
      properties:
        id:
          type: integer
        name:
          type: string
          nullable: false
        maxCols:
          type: number
          nullable: true
        maxRows:
          type: number
          nullable: true
        fixedColumnWidth:
          type: number
          nullable: true
        fixedRowHeight:
          type: number
          nullable: true
        group:
          $ref: '#/components/schemas/DashboardGroup'
        createdAt:
          type: string
        updatedAt:
          type: string
      required:
        - name
    DashboardElement:
      type: object
      title: DashboardElement
      properties:
        id:
          type: integer
        name:
          type: string
          nullable: false
        type:
          type: string
          nullable: false
        query:
          type: string
          nullable: false
        config:
          type: string
          nullable: false
        x:
          type: number
          nullable: true
        'y':
          type: number
          nullable: true
        cols:
          type: number
          nullable: true
        rows:
          type: number
          nullable: true
        dashboard:
          $ref: '#/components/schemas/Dashboard'
        createdAt:
          type: string
        updatedAt:
          type: string
      required:
        - name
        - type
        - query
        - config
    DashboardGroup:
      type: object
      title: DashboardGroup
      properties:
        id:
          type: integer
        name:
          type: string
          nullable: false
        createdAt:
          type: string
        updatedAt:
          type: string
      required:
        - name
    AttributeGroup:
      type: object
      title: AttributeGroup
      properties:
        id:
          type: integer
        name:
          type: string
          nullable: false
        createdAt:
          type: string
        updatedAt:
          type: string
      required:
        - name
    AttributeGroupAssignment:
      type: object
      title: AttributeGroupAssignment
      properties:
        id:
          type: integer
        order:
          $ref: '#/components/schemas/OrderInstance'
        material:
          $ref: '#/components/schemas/Material'
        asset:
          $ref: '#/components/schemas/Asset'
        attributeGroup:
          $ref: '#/components/schemas/AttributeGroup'
        createdAt:
          type: string
        updatedAt:
          type: string
    AttributeGroupItem:
      type: object
      title: AttributeGroupItem
      properties:
        id:
          type: integer
        stringValue:
          type: string
          nullable: true
        numericValue:
          type: string
          nullable: true
        booleanValue:
          type: boolean
          nullable: true
        attribute:
          $ref: '#/components/schemas/Attribute'
        attributeGroup:
          $ref: '#/components/schemas/AttributeGroup'
        createdAt:
          type: string
        updatedAt:
          type: string
    AttributeValue:
      type: object
      title: Attribute value
      properties:
        attributeId:
          type: number
        attributeName:
          type: string
        stringValue:
          type: string
        booleanValue:
          type: boolean
        numericValue:
          type: number
        dataType:
          type: string
          enum:
            - BOOLEAN
            - STRING
            - LINK
            - NUMBER
    Calendar:
      type: object
      title: Calendar
      properties:
        id:
          type: integer
        name:
          type: string
          nullable: false
        createdAt:
          type: string
        updatedAt:
          type: string
      required:
        - name
    CalendarItem:
      type: object
      title: CalendarItem
      properties:
        id:
          type: integer
        validFrom:
          type: string
          nullable: false
        validTo:
          type: string
          nullable: false
        monday:
          type: boolean
          nullable: true
        tuesday:
          type: boolean
          nullable: true
        wednesday:
          type: boolean
          nullable: true
        thursday:
          type: boolean
          nullable: true
        friday:
          type: boolean
          nullable: true
        saturday:
          type: boolean
          nullable: true
        sunday:
          type: boolean
          nullable: true
        shiftTemplate:
          $ref: '#/components/schemas/ShiftTemplate'
        calendar:
          $ref: '#/components/schemas/Calendar'
        createdAt:
          type: string
        updatedAt:
          type: string
      required:
        - validFrom
        - validTo
    ShiftInstance:
      type: object
      title: ShiftInstance
      properties:
        id:
          type: integer
        shiftName:
          type: string
          nullable: false
        startTime:
          type: string
          nullable: false
        localStartDate:
          type: string
          nullable: false
          description: Start date of the shift at the timezone of the asset
        endTime:
          type: string
          nullable: false
        actualStartTime:
          type: string
          nullable: true
        actualEndTime:
          type: string
          nullable: true
        asset:
          $ref: '#/components/schemas/Asset'
        createdAt:
          type: string
        updatedAt:
          type: string
      required:
        - shiftName
        - startTime
        - endTime
        - actualStartTime
        - actualEndTime
    AssetDowntimePeriod:
      type: object
      title: AssetDowntimePeriod
      properties:
        id:
          type: integer
        externalId:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        startTime:
          type: string
          nullable: false
        duration:
          type: number
          nullable: false
        percentageAvailability:
          type: string
          nullable: true
        asset:
          $ref: '#/components/schemas/Asset'
        createdAt:
          type: string
        updatedAt:
          type: string
      required:
        - startTime
        - duration
    ShiftTemplate:
      type: object
      title: ShiftTemplate
      properties:
        id:
          type: integer
        name:
          type: string
          nullable: false
        description:
          type: string
          nullable: true
        createdAt:
          type: string
        updatedAt:
          type: string
      required:
        - name
    ShiftTemplateItem:
      type: object
      title: ShiftTemplateItem
      properties:
        id:
          type: integer
        startTime:
          type: number
          nullable: false
        duration:
          type: number
          nullable: false
        plannedBreakTime:
          type: number
          nullable: true
        shiftTemplate:
          $ref: '#/components/schemas/ShiftTemplate'
        createdAt:
          type: string
        updatedAt:
          type: string
      required:
        - startTime
        - duration
    SiteUser:
      type: object
      title: SiteUser
      properties:
        id:
          type: integer
        username:
          type: string
          nullable: false
        site:
          $ref: '#/components/schemas/Site'
        createdAt:
          type: string
        updatedAt:
          type: string
      required:
        - username
    OrderTemplate:
      type: object
      title: OrderTemplate
      properties:
        id:
          type: integer
        fromAttributeString:
          type: string
          nullable: true
        fromAttributeNumeric:
          type: string
          nullable: true
        fromAttributeBoolean:
          type: boolean
          nullable: true
        operation:
          type: string
          nullable: false
        variableQuantity:
          type: number
          nullable: false
        fixedQuantity:
          type: number
          nullable: false
        fromAssetClass:
          $ref: '#/components/schemas/AssetClass'
        fromAsset:
          $ref: '#/components/schemas/Asset'
        fromMaterialGroup:
          $ref: '#/components/schemas/MaterialGroup'
        fromMaterial:
          $ref: '#/components/schemas/Material'
        fromAttribute:
          $ref: '#/components/schemas/Attribute'
        toMaterial:
          $ref: '#/components/schemas/Material'
        toAssetClass:
          $ref: '#/components/schemas/AssetClass'
        toAsset:
          $ref: '#/components/schemas/Asset'
        uom:
          $ref: '#/components/schemas/UnitOfMeasure'
        createdAt:
          type: string
        updatedAt:
          type: string
      required:
        - operation
        - variableQuantity
        - fixedQuantity
    StripeSubscription:
      type: object
      title: StripeSubscription
      properties:
        id:
          type: integer
        collectionMethod:
          type: string
          nullable: true
        currentPeriodEnd:
          type: number
        currentPeriodStart:
          type: number
        status:
          type: string
        subscriptionItems:
          type: array
          items:
            $ref: '#/components/schemas/StripeSubscriptionItem'
        invoices:
          type: array
          items:
            $ref: '#/components/schemas/StripeInvoice'
    StripeSubscriptionItem:
      type: object
      title: StripeSubscriptionItem
      properties:
        id:
          type: integer
        name:
          type: string
        quantity:
          type: number
        unitAmount:
          type: number
          nullable: true
    StripeInvoice:
      type: object
      title: StripeInvoice
      properties:
        id:
          type: integer
        url:
          type: string
        periodStart:
          type: number
        periodEnd:
          type: number
        status:
          type: string
          nullable: true
        total:
          type: number
    Message:
      type: object
      title: Message
      properties:
        user:
          type: string
          nullable: false
        content:
          type: string
          nullable: false
        contentType:
          type: string
          nullable: true
        timestamp:
          type: string
        asset:
          $ref: '#/components/schemas/Asset'
        order:
          $ref: '#/components/schemas/OrderInstance'
        shift:
          $ref: '#/components/schemas/ShiftInstance'
        attributes:
          type: object
      required:
        - content
        - asset
    AuthorizationRule:
      type: object
      title: Authorization Rule
      properties:
        userRole:
          type: string
          nullable: false
        resourceGroup:
          type: string
          nullable: false
        resource:
          type: string
        permission:
          type: string
          nullable: false
      required:
        - userRole
        - resourceGroup
        - resource
        - permission
    EventSchedule:
      type: object
      title: EventSchedule
      properties:
        id:
          type: integer
        cronExpression:
          type: string
          nullable: false
        requiresOrder:
          type: boolean
        requiresShift:
          type: boolean
        asset:
          $ref: '#/components/schemas/Asset'
        eventType:
          $ref: '#/components/schemas/EventType'
        createdAt:
          type: string
        updatedAt:
          type: string
    EventRelay:
      type: object
      title: EventRelay
      properties:
        id:
          type: number
        matchOrderNumber:
          type: boolean
          nullable: true
        delay:
          type: number
          nullable: true
        eventType:
          $ref: '#/components/schemas/EventType'
        toEventType:
          $ref: '#/components/schemas/EventType'
        fromAsset:
          $ref: '#/components/schemas/Asset'
        toAsset:
          $ref: '#/components/schemas/Asset'
        fromAssetClass:
          $ref: '#/components/schemas/AssetClass'
        toAssetClass:
          $ref: '#/components/schemas/AssetClass'
        createdAt:
          type: string
        updatedAt:
          type: string
    MovementTypeField:
      type: object
      title: MovementTypeField
      properties:
        id:
          type: integer
        name:
          type: string
          nullable: false
        active:
          type: boolean
          nullable: true
        isRequired:
          type: boolean
          nullable: true
        field:
          type: string
          enum:
            - QUANTITY
            - MATERIAL
            - INVENTORY_KEY
            - ATTRIBUTE
            - KEY_ATTRIBUTE
            - UOM
            - ASSET
            - FROM_ASSET
            - TO_ASSET
        movementType:
          $ref: '#/components/schemas/MovementType'
        createdAt:
          type: string
        updatedAt:
          type: string
      required:
        - name
    OrderNumberAttribute:
      type: object
      title: OrderNumberAttribute
      properties:
        id:
          type: number
        stringValue:
          type: string
          nullable: true
        numericValue:
          type: string
          nullable: true
        booleanValue:
          type: boolean
          nullable: true
        orderNumber:
          type: string
          nullable: true
        attribute:
          oneOf:
            - $ref: '#/components/schemas/Attribute'
            - type: string
        createdAt:
          type: string
        updatedAt:
          type: string
    OrderTemplateComponent:
      type: object
      title: OrderTemplateComponent
      properties:
        id:
          type: number
        orderTemplate:
          $ref: '#/components/schemas/OrderTemplate'
        materialGroup:
          $ref: '#/components/schemas/MaterialGroup'
        material:
          $ref: '#/components/schemas/Material'
        createdAt:
          type: string
        updatedAt:
          type: string
    ReportTemplate:
      type: object
      title: ReportTemplate
      properties:
        id:
          type: number
        name:
          type: string
          nullable: false
        description:
          type: string
          nullable: false
        includeActivities:
          type: array
          nullable: true
          items:
            type: string
        includeOperations:
          type: array
          nullable: true
          items:
            type: string
        includeAttributes:
          type: array
          nullable: true
          items:
            type: string
        assetClass:
          type: array
          nullable: true
          items:
            type: number
        content:
          type: string
          nullable: true
        dataType:
          type: string
          enum:
            - ORDER
            - EVENT
            - ACTIVITY
        createdAt:
          type: string
        updatedAt:
          type: string
      required:
        - name
        - description
    ReportTemplateOrderData:
      type: object
      title: ReportTemplateOrderData
      properties:
        order:
          $ref: '#/components/schemas/OrderInstance'
        operations:
          type: array
          items:
            $ref: '#/components/schemas/OrderStats'
        activities:
          type: array
          items:
            $ref: '#/components/schemas/ActivityInstance'
    AssetRunRate:
      type: object
      title: AssetRunRate
      properties:
        id:
          type: number
        attributeValue:
          type: string
          nullable: true
        runRate:
          type: number
          nullable: true
        attributeOperator:
          type: string
          enum:
            - EQUALS
            - NOT_EQUALS
            - LESS_THAN
            - LESS_THAN_OR_EQUAL
            - MORE_THAN
            - MORE_THAN_OR_EQUAL
        material:
          $ref: '#/components/schemas/Material'
        materialGroup:
          $ref: '#/components/schemas/MaterialGroup'
        asset:
          $ref: '#/components/schemas/Asset'
        attribute:
          $ref: '#/components/schemas/Attribute'
        createdAt:
          type: string
        updatedAt:
          type: string
    VariableRunRate:
      type: object
      title: VariableRunRate
      properties:
        id:
          type: number
        attributeValueString:
          type: string
          nullable: true
        attributeValueNumeric:
          type: string
          nullable: true
        attributeValueBoolean:
          type: boolean
          nullable: true
        runRate:
          type: string
          nullable: false
        asset:
          $ref: '#/components/schemas/Asset'
        material:
          $ref: '#/components/schemas/Material'
        materialGroup:
          $ref: '#/components/schemas/MaterialGroup'
        attribute:
          $ref: '#/components/schemas/Attribute'
        createdAt:
          type: string
        updatedAt:
          type: string
      required:
        - runRate
    ActivityAssignmentAttribute:
      type: object
      title: ActivityAssignmentAttribute
      properties:
        id:
          type: number
        stringValue:
          type: string
          nullable: true
        numericValue:
          type: string
          nullable: true
        booleanValue:
          type: boolean
          nullable: true
        operator:
          type: string
          enum:
            - EQUALS
            - NOT_EQUALS
            - LESS_THAN
            - LESS_THAN_EQUAL
            - MORE_THAN
            - MORE_THAN_EQUAL
            - CONTAINS
            - LIST
            - STARTS_WITH
            - ENDS_WITH
        assignment:
          $ref: '#/components/schemas/ActivityAssignment'
        attribute:
          $ref: '#/components/schemas/Attribute'
        createdAt:
          type: string
        updatedAt:
          type: string
    AssetHealthTemplate:
      type: object
      title: AssetHealthTemplate
      properties:
        id:
          type: number
        runHoursSetPoint:
          type: number
          nullable: true
        resetDateTime:
          type: string
          nullable: true
        asset:
          $ref: '#/components/schemas/Asset'
        createdAt:
          type: string
        updatedAt:
          type: string
    Board:
      type: object
      title: Board
      properties:
        id:
          type: number
        title:
          type: string
          nullable: false
        description:
          type: string
          nullable: true
        createdAt:
          type: string
        updatedAt:
          type: string
        parent:
          type: object
          nullable: true
    BoardSectionRequest:
      type: object
      title: Board
      properties:
        sectionName:
          type: string
        displayOrder:
          type: number
        parentBoardId:
          type: number
    PreSignedUrl:
      type: object
      title: PreSignedUrl
      properties:
        preSignedUrl:
          type: string
    BoardItem:
      type: object
      title: BoardItem
      properties:
        id:
          type: number
        name:
          type: string
          nullable: false
        status:
          type: string
          nullable: true
        board:
          oneOf:
            - type: number
            - $ref: '#/components/schemas/Board'
        createdAt:
          type: string
        updatedAt:
          type: string
        parent:
          type: object
          nullable: true
      required:
        - name
    BoardItemFileUrls:
      type: object
      title: BoardItemFileUrls
      additionalProperties:
        type: string
    BoardItemCreateUpdateResponse:
      type: object
      title: BoardItemCreateUpdateResponse
      properties:
        boardItem:
          $ref: '#/components/schemas/BoardItem'
        fileUrls:
          $ref: '#/components/schemas/BoardItemFileUrls'
    ClosingEvent:
      type: object
      title: ClosingEvent
      properties:
        id:
          type: number
        eventType:
          $ref: '#/components/schemas/EventType'
        closingEvent:
          $ref: '#/components/schemas/EventType'
        createdAt:
          type: string
        updatedAt:
          type: string
    CloneTemplateRequest:
      type: object
      title: CloneTemplateRequest
      properties:
        activityId:
          type: number
        name:
          type: string
        key:
          type: string
    Translation:
      type: object
      title: Translation
      properties:
        id:
          type: number
        key:
          type: string
          nullable: false
        language:
          type: string
          nullable: false
        value:
          type: string
          nullable: true
        entity:
          type: string
          nullable: true
        createdAt:
          type: string
        updatedAt:
          type: string
      required:
        - key
        - language
    TranslationPatchByKeyRequest:
      type: object
      title: TranslationPatchByKeyRequest
      properties:
        key:
          type: string
          nullable: false
        entity:
          type: string
          nullable: false
        translations:
          type: object
          example:
            en: English translation
            fr: French translation
    IntegrationLog:
      type: object
      title: IntegrationLog
      properties:
        id:
          type: number
        createdAt:
          type: string
        updatedAt:
          type: string
        correlationId:
          type: string
        success:
          type: boolean
        eventInstance:
          $ref: '#/components/schemas/EventInstance'
        channel:
          $ref: '#/components/schemas/Channel'
        inbound:
          type: object
        outbound:
          type: object
        result:
          type: object
        metrics:
          type: object
    ImportResult:
      type: object
      title: ImportResult
      properties:
        entityObj:
          type: object
        entityType:
          type: string
        key:
          type: string
        importStatus:
          type: string
          enum:
            - CREATE
            - EXISTS
            - ERROR
            - UPDATE
            - NOT_EXISTS
        entityError:
          type: string
        pathWhereUsed:
          type: array
          items:
            type: string
    SiteAttribute:
      type: object
      title: SiteAttribute
      properties:
        id:
          type: number
        stringValue:
          type: string
          nullable: true
        jsonValue:
          type: object
          nullable: true
        numericValue:
          type: string
          nullable: true
        booleanValue:
          type: boolean
          nullable: true
        attribute:
          $ref: '#/components/schemas/Attribute'
        site:
          $ref: '#/components/schemas/Site'
        createdAt:
          type: string
        updatedAt:
          type: string
